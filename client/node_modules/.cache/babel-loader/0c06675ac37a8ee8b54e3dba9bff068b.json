{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dovah\\\\Desktop\\\\BD-Project\\\\client\\\\src\\\\components\\\\OrdenCompra\\\\OrdenCompraTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\n\nconst OrdenCompraTable = () => {\n  _s();\n\n  //estado del Componente\n  const [OrdenCompra, setOrdenCompra] = useState([{}]); //estado para los titulos de las columnas de la tabla\n  //NOTA: EL CAMPO FIELD DEBE SER EL MISMO NOMBRE QUE TIENE EL ATRIBUTO EN LA BD, SINO SE ROMPE\n  //TODAS LAS VARIABLES DE LAS TABLAS DEBEN TENER EL MISMO NOMBRE QUE EN LA BD\n\n  const [state, setState] = useState({\n    columns: [{\n      title: 'ID',\n      field: 'id',\n      editable: 'never'\n    }, {\n      title: 'Cantidad Solicitada',\n      field: 'cantidad_solicitada'\n    }, {\n      title: 'Precio Estimado',\n      field: 'precio_estimado'\n    }, {\n      title: 'ID Requisicion',\n      field: 'id_requisicion'\n    }, {\n      title: 'ID Item',\n      field: 'id_item'\n    }],\n    data: []\n  });\n  useEffect(() => {\n    fetchOrdenCompra();\n  }, []); //obtener todas las OrdenCompra\n\n  const fetchOrdenCompra = () => {\n    fetch('http://localhost:5000/detalle_requisicion').then(res => res.json()).then(result => setOrdenCompra(result)).catch(err => console.log(err.message));\n  }; //eliminar una Detalle Requisicion\n\n\n  const deleteOrdenCompra = id => {\n    console.log(id);\n    fetch(`http://localhost:5000/detalle_requisicion/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => console.log(result)).catch(err => console.log(err.message));\n  }; //actualizar una Detalle Requisicion\n\n\n  const updateOrdenCompra = OrdenCompra => {\n    console.log(OrdenCompra);\n    const {\n      id,\n      cantidad_solicitada,\n      precio_estimado,\n      id_requisicion,\n      id_item\n    } = OrdenCompra;\n    const updateDR = fetch(`http://localhost:5000/detalle_requisicion/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        id,\n        cantidad_solicitada,\n        precio_estimado,\n        id_requisicion,\n        id_item\n      })\n    }).then(res => res.json()).then(result => console.log(result)).catch(err => console.log(err.message));\n    console.log(updateDR);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MaterialTable, {\n    title: \"Detalles de Requisicion\",\n    columns: state.columns,\n    data: OrdenCompra,\n    options: {\n      filtering: true\n    },\n    editable: {\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              updateOrdenCompra(newData); //AQUI SE ACTUALIZA EL CAMPO\n\n              console.log(newData);\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        deleteOrdenCompra(oldData.id); //AQUI SE DELETEA LA ESPECIALIDAD\n\n        console.log(oldData.id);\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrdenCompraTable, \"sAs5HXDlJsGjzwGOUiDPRoHzaok=\");\n\n_c = OrdenCompraTable;\nexport default OrdenCompraTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdenCompraTable\");","map":{"version":3,"sources":["C:/Users/Dovah/Desktop/BD-Project/client/src/components/OrdenCompra/OrdenCompraTable.js"],"names":["React","useState","useEffect","MaterialTable","OrdenCompraTable","OrdenCompra","setOrdenCompra","state","setState","columns","title","field","editable","data","fetchOrdenCompra","fetch","then","res","json","result","catch","err","console","log","message","deleteOrdenCompra","id","method","headers","updateOrdenCompra","cantidad_solicitada","precio_estimado","id_requisicion","id_item","updateDR","body","JSON","stringify","filtering","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","prevState","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table'\r\n\r\n\r\nconst OrdenCompraTable = () => {\r\n\r\n    //estado del Componente\r\n    \r\n    const [OrdenCompra, setOrdenCompra] = useState([{}]);\r\n\r\n    //estado para los titulos de las columnas de la tabla\r\n    //NOTA: EL CAMPO FIELD DEBE SER EL MISMO NOMBRE QUE TIENE EL ATRIBUTO EN LA BD, SINO SE ROMPE\r\n    //TODAS LAS VARIABLES DE LAS TABLAS DEBEN TENER EL MISMO NOMBRE QUE EN LA BD\r\n    const [ state, setState ] = useState({\r\n        columns: [\r\n            {title: 'ID', field: 'id', editable: 'never'},\r\n            {title: 'Cantidad Solicitada', field: 'cantidad_solicitada'},\r\n            {title: 'Precio Estimado', field: 'precio_estimado'},\r\n            {title: 'ID Requisicion', field: 'id_requisicion'},\r\n            {title: 'ID Item', field: 'id_item'},\r\n        ],\r\n        data: []\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetchOrdenCompra()\r\n    }, [])\r\n\r\n    //obtener todas las OrdenCompra\r\n    const fetchOrdenCompra = () => {\r\n        fetch('http://localhost:5000/detalle_requisicion')\r\n            .then(res => res.json())\r\n            .then(result => setOrdenCompra(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    //eliminar una Detalle Requisicion\r\n    const deleteOrdenCompra = (id) => {\r\n        console.log(id)\r\n        fetch(`http://localhost:5000/detalle_requisicion/${id}`, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-type': 'application/json' }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    //actualizar una Detalle Requisicion\r\n    const updateOrdenCompra = (OrdenCompra) => {\r\n        console.log(OrdenCompra)\r\n        const { id, cantidad_solicitada, precio_estimado, id_requisicion, id_item } = OrdenCompra;\r\n        const updateDR = fetch(`http://localhost:5000/detalle_requisicion/${id}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify({ id, cantidad_solicitada, precio_estimado, id_requisicion, id_item })\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message))\r\n        console.log(updateDR)\r\n    }\r\n\r\n    return(\r\n        <MaterialTable\r\n            title=\"Detalles de Requisicion\"\r\n            columns={state.columns}\r\n            data={OrdenCompra}\r\n            options={{\r\n                filtering: true\r\n              }}\r\n            editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                    new Promise((resolve) => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            if (oldData) {\r\n                                setState((prevState) => {\r\n                                    const data = [...prevState.data];\r\n                                    data[data.indexOf(oldData)] = newData;\r\n                                    updateOrdenCompra(newData);//AQUI SE ACTUALIZA EL CAMPO\r\n                                    console.log(newData);\r\n                                    return { ...prevState, data };\r\n                                });\r\n                            }\r\n                        }, 600);\r\n                    }),\r\n                onRowDelete: (oldData) =>\r\n                    new Promise((resolve) => {\r\n                        deleteOrdenCompra(oldData.id);//AQUI SE DELETEA LA ESPECIALIDAD\r\n                        console.log(oldData.id);\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            setState((prevState) => {\r\n                                const data = [...prevState.data];\r\n                                data.splice(data.indexOf(oldData), 1);\r\n                                return { ...prevState, data };\r\n                            });\r\n                        }, 600);\r\n                    }),\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default OrdenCompraTable"]},"metadata":{},"sourceType":"module"}