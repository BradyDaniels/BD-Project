{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dovah\\\\Desktop\\\\BD-Project\\\\client\\\\src\\\\components\\\\DetalleCompra\\\\DetalleCompraTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\n\nconst DetalleCompraTable = () => {\n  _s();\n\n  //estado del Componente\n  const [DetalleCompra, setDetalleCompra] = useState([{}]); //estado para los titulos de las columnas de la tabla\n  //NOTA: EL CAMPO FIELD DEBE SER EL MISMO NOMBRE QUE TIENE EL ATRIBUTO EN LA BD, SINO SE ROMPE\n  //TODAS LAS VARIABLES DE LAS TABLAS DEBEN TENER EL MISMO NOMBRE QUE EN LA BD\n\n  const [state, setState] = useState({\n    columns: [{\n      title: 'ID',\n      field: 'id',\n      editable: 'never'\n    }, {\n      title: 'Cantidad',\n      field: 'cantidad'\n    }, {\n      title: 'Precio de Compra',\n      field: 'precio_compra'\n    }, {\n      title: 'Id Detalle Requisicion',\n      field: 'id_detalle_req'\n    }, //idk\n    {\n      title: 'ID Requisicion',\n      field: 'id_requisicion'\n    }, {\n      title: 'ID Item',\n      field: 'id_item'\n    }, {\n      title: 'ID Respuesta',\n      field: 'id_respuesta'\n    }, {\n      title: 'RIF Proveedor',\n      field: 'rif'\n    }, {\n      title: 'ID Cotizacion',\n      field: 'id_cotizacion'\n    }, {\n      title: 'ID Orden',\n      field: 'id_orden'\n    }],\n    data: []\n  });\n  useEffect(() => {\n    fetchDetalleCompra();\n  }, []); //obtener todas las DetalleCompra\n\n  const fetchDetalleCompra = () => {\n    fetch('http://localhost:5000/detalle_compra').then(res => res.json()).then(result => setDetalleCompra(result)).catch(err => console.log(err.message));\n  }; //eliminar una Detalle Compra\n\n\n  const deleteDetalleCompra = id => {\n    console.log(id);\n    fetch(`http://localhost:5000/detalle_compra/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => console.log(result)).catch(err => console.log(err.message));\n  }; //actualizar una Detalle Compra\n\n\n  const updateDetalleCompra = detalleCompra => {\n    console.log(detalleCompra);\n    const {\n      id,\n      cantidad,\n      precio_compra,\n      id_detalle_req,\n      id_requisicion,\n      id_item,\n      id_respuesta,\n      rif,\n      id_cotizacion,\n      id_orden\n    } = detalleCompra;\n    const updateDC = fetch(`http://localhost:5000/DetalleCompra/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        id,\n        cantidad,\n        precio_compra,\n        id_detalle_req,\n        id_requisicion,\n        id_item,\n        id_respuesta,\n        rif,\n        id_cotizacion,\n        id_orden\n      })\n    }).then(res => res.json()).then(result => console.log(result)).catch(err => console.log(err.message));\n    console.log(updateDC);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MaterialTable, {\n    title: \"Detalles De Compra\",\n    columns: state.columns,\n    data: DetalleCompra,\n    options: {\n      filtering: true\n    },\n    editable: {\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              updateDetalleCompra(newData); //AQUI SE ACTUALIZA EL CAMPO\n\n              console.log(newData);\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        deleteDetalleCompra(oldData.id); //AQUI SE DELETEA LA ESPECIALIDAD\n\n        console.log(oldData.id);\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DetalleCompraTable, \"MWOIVsydgRhI0QkXUD2NOZCIAAM=\");\n\n_c = DetalleCompraTable;\nexport default DetalleCompraTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetalleCompraTable\");","map":{"version":3,"sources":["C:/Users/Dovah/Desktop/BD-Project/client/src/components/DetalleCompra/DetalleCompraTable.js"],"names":["React","useState","useEffect","MaterialTable","DetalleCompraTable","DetalleCompra","setDetalleCompra","state","setState","columns","title","field","editable","data","fetchDetalleCompra","fetch","then","res","json","result","catch","err","console","log","message","deleteDetalleCompra","id","method","headers","updateDetalleCompra","detalleCompra","cantidad","precio_compra","id_detalle_req","id_requisicion","id_item","id_respuesta","rif","id_cotizacion","id_orden","updateDC","body","JSON","stringify","filtering","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","prevState","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table'\r\n\r\n\r\nconst DetalleCompraTable = () => {\r\n\r\n    //estado del Componente\r\n    \r\n    const [DetalleCompra, setDetalleCompra] = useState([{}]);\r\n\r\n    //estado para los titulos de las columnas de la tabla\r\n    //NOTA: EL CAMPO FIELD DEBE SER EL MISMO NOMBRE QUE TIENE EL ATRIBUTO EN LA BD, SINO SE ROMPE\r\n    //TODAS LAS VARIABLES DE LAS TABLAS DEBEN TENER EL MISMO NOMBRE QUE EN LA BD\r\n    const [ state, setState ] = useState({\r\n        columns: [\r\n            {title: 'ID', field: 'id', editable: 'never'},\r\n            {title: 'Cantidad', field: 'cantidad'},\r\n            {title: 'Precio de Compra', field: 'precio_compra'},\r\n            {title: 'Id Detalle Requisicion', field: 'id_detalle_req'}, //idk\r\n            {title: 'ID Requisicion', field: 'id_requisicion'},\r\n            {title: 'ID Item', field: 'id_item'},\r\n            {title: 'ID Respuesta', field: 'id_respuesta'},\r\n            {title: 'RIF Proveedor', field: 'rif'},\r\n            {title: 'ID Cotizacion', field: 'id_cotizacion'},\r\n            {title: 'ID Orden', field: 'id_orden'},\r\n        ],\r\n        data: []\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetchDetalleCompra()\r\n    }, [])\r\n\r\n    //obtener todas las DetalleCompra\r\n    const fetchDetalleCompra = () => {\r\n        fetch('http://localhost:5000/detalle_compra')\r\n            .then(res => res.json())\r\n            .then(result => setDetalleCompra(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    //eliminar una Detalle Compra\r\n    const deleteDetalleCompra = (id) => {\r\n        console.log(id)\r\n        fetch(`http://localhost:5000/detalle_compra/${id}`, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-type': 'application/json' }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    //actualizar una Detalle Compra\r\n    const updateDetalleCompra = (detalleCompra) => {\r\n        console.log(detalleCompra)\r\n        const { id, cantidad, precio_compra, id_detalle_req, id_requisicion, id_item, id_respuesta, rif, id_cotizacion, id_orden  } = detalleCompra;\r\n        const updateDC = fetch(`http://localhost:5000/DetalleCompra/${id}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify({ id, cantidad, precio_compra, id_detalle_req, id_requisicion, id_item, id_respuesta, rif, id_cotizacion, id_orden })\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message))\r\n        console.log(updateDC)\r\n    }\r\n\r\n    return(\r\n        <MaterialTable\r\n            title=\"Detalles De Compra\"\r\n            columns={state.columns}\r\n            data={DetalleCompra}\r\n            options={{\r\n                filtering: true\r\n              }}\r\n            editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                    new Promise((resolve) => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            if (oldData) {\r\n                                setState((prevState) => {\r\n                                    const data = [...prevState.data];\r\n                                    data[data.indexOf(oldData)] = newData;\r\n                                    updateDetalleCompra(newData);//AQUI SE ACTUALIZA EL CAMPO\r\n                                    console.log(newData);\r\n                                    return { ...prevState, data };\r\n                                });\r\n                            }\r\n                        }, 600);\r\n                    }),\r\n                onRowDelete: (oldData) =>\r\n                    new Promise((resolve) => {\r\n                        deleteDetalleCompra(oldData.id);//AQUI SE DELETEA LA ESPECIALIDAD\r\n                        console.log(oldData.id);\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            setState((prevState) => {\r\n                                const data = [...prevState.data];\r\n                                data.splice(data.indexOf(oldData), 1);\r\n                                return { ...prevState, data };\r\n                            });\r\n                        }, 600);\r\n                    }),\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default DetalleCompraTable"]},"metadata":{},"sourceType":"module"}