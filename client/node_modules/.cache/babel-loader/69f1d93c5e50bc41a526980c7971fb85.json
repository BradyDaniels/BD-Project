{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dell Vostro\\\\Documents\\\\Universidad\\\\Clases-M7\\\\Base de datos-De nuevo unu\\\\Proyecto\\\\App\\\\Bddrip\\\\client\\\\src\\\\components\\\\RequisicionCotizacion\\\\RequisicionCotizacionTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\n\nconst RequisicionCotizacionTable = () => {\n  _s();\n\n  //estado del Componente\n  const [RequisicionCotizacion, setRequisicionCotizacion] = useState([{}]); //estado para los titulos de las columnas de la tabla\n  //NOTA: EL CAMPO FIELD DEBE SER EL MISMO NOMBRE QUE TIENE EL ATRIBUTO EN LA BD, SINO SE ROMPE\n  //TODAS LAS VARIABLES DE LAS TABLAS DEBEN TENER EL MISMO NOMBRE QUE EN LA BD\n\n  const [state, setState] = useState({\n    columns: [{\n      title: 'ID Requisicion',\n      field: 'id_requisicion',\n      editable: 'never'\n    }, {\n      title: 'ID Cotizacion',\n      field: 'id_cotizacion'\n    }],\n    data: []\n  });\n  useEffect(() => {\n    fetchRequisicionCotizacion();\n  }, []); //obtener todas las RequisicionCotizacion\n\n  const fetchRequisicionCotizacion = () => {\n    fetch('http://localhost:5000/requisicion_cotizacion').then(res => res.json()).then(result => setRequisicionCotizacion(result)).catch(err => console.log(err.message));\n  }; //eliminar una Detalle Requisicion\n\n\n  const deleteRequisicionCotizacion = id_requisicion => {\n    console.log(id_requisicion);\n    fetch(`http://localhost:5000/requisicion_cotizacion/${id_requisicion}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => console.log(result)).catch(err => console.log(err.message));\n  }; //actualizar una Detalle Requisicion\n\n\n  const updateRequisicionCotizacion = RequisicionCotizacion => {\n    console.log(RequisicionCotizacion);\n    const {\n      id_requisicion,\n      id_cotizacion\n    } = RequisicionCotizacion;\n    const updateRC = fetch(`http://localhost:5000/requisicion_cotizacion/${id_requisicion}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        id_requisicion,\n        id_cotizacion\n      })\n    }).then(res => res.json()).then(result => console.log(result)).catch(err => console.log(err.message));\n    console.log(updateRC);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MaterialTable, {\n    title: \"Requisicion-Cotizacion\",\n    columns: state.columns,\n    data: RequisicionCotizacion,\n    options: {\n      filtering: true\n    },\n    editable: {\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              updateRequisicionCotizacion(newData); //AQUI SE ACTUALIZA EL CAMPO\n\n              console.log(newData);\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        deleteRequisicionCotizacion(oldData.id); //AQUI SE DELETEA LA ESPECIALIDAD\n\n        console.log(oldData.id);\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RequisicionCotizacionTable, \"TBlQHpNirDCgXqZcER9t4FQ7mW4=\");\n\n_c = RequisicionCotizacionTable;\nexport default RequisicionCotizacionTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequisicionCotizacionTable\");","map":{"version":3,"sources":["C:/Users/Dell Vostro/Documents/Universidad/Clases-M7/Base de datos-De nuevo unu/Proyecto/App/Bddrip/client/src/components/RequisicionCotizacion/RequisicionCotizacionTable.js"],"names":["React","useState","useEffect","MaterialTable","RequisicionCotizacionTable","RequisicionCotizacion","setRequisicionCotizacion","state","setState","columns","title","field","editable","data","fetchRequisicionCotizacion","fetch","then","res","json","result","catch","err","console","log","message","deleteRequisicionCotizacion","id_requisicion","method","headers","updateRequisicionCotizacion","id_cotizacion","updateRC","body","JSON","stringify","filtering","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","prevState","indexOf","onRowDelete","id","splice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table'\r\n\r\n\r\nconst RequisicionCotizacionTable = () => {\r\n\r\n    //estado del Componente\r\n    \r\n    const [RequisicionCotizacion, setRequisicionCotizacion] = useState([{}]);\r\n\r\n    //estado para los titulos de las columnas de la tabla\r\n    //NOTA: EL CAMPO FIELD DEBE SER EL MISMO NOMBRE QUE TIENE EL ATRIBUTO EN LA BD, SINO SE ROMPE\r\n    //TODAS LAS VARIABLES DE LAS TABLAS DEBEN TENER EL MISMO NOMBRE QUE EN LA BD\r\n    const [ state, setState ] = useState({\r\n        columns: [\r\n            {title: 'ID Requisicion', field: 'id_requisicion', editable: 'never'},\r\n            {title: 'ID Cotizacion', field: 'id_cotizacion'},\r\n        ],\r\n        data: []\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetchRequisicionCotizacion()\r\n    }, [])\r\n\r\n    //obtener todas las RequisicionCotizacion\r\n    const fetchRequisicionCotizacion = () => {\r\n        fetch('http://localhost:5000/requisicion_cotizacion')\r\n            .then(res => res.json())\r\n            .then(result => setRequisicionCotizacion(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    //eliminar una Detalle Requisicion\r\n    const deleteRequisicionCotizacion = (id_requisicion) => {\r\n        console.log(id_requisicion)\r\n        fetch(`http://localhost:5000/requisicion_cotizacion/${id_requisicion}`, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-type': 'application/json' }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    //actualizar una Detalle Requisicion\r\n    const updateRequisicionCotizacion = (RequisicionCotizacion) => {\r\n        console.log(RequisicionCotizacion)\r\n        const { id_requisicion, id_cotizacion } = RequisicionCotizacion;\r\n        const updateRC = fetch(`http://localhost:5000/requisicion_cotizacion/${id_requisicion}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify({ id_requisicion, id_cotizacion })\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message))\r\n        console.log(updateRC)\r\n    }\r\n\r\n    return(\r\n        <MaterialTable\r\n            title=\"Requisicion-Cotizacion\"\r\n            columns={state.columns}\r\n            data={RequisicionCotizacion}\r\n            options={{\r\n                filtering: true\r\n              }}\r\n            editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                    new Promise((resolve) => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            if (oldData) {\r\n                                setState((prevState) => {\r\n                                    const data = [...prevState.data];\r\n                                    data[data.indexOf(oldData)] = newData;\r\n                                    updateRequisicionCotizacion(newData);//AQUI SE ACTUALIZA EL CAMPO\r\n                                    console.log(newData);\r\n                                    return { ...prevState, data };\r\n                                });\r\n                            }\r\n                        }, 600);\r\n                    }),\r\n                onRowDelete: (oldData) =>\r\n                    new Promise((resolve) => {\r\n                        deleteRequisicionCotizacion(oldData.id);//AQUI SE DELETEA LA ESPECIALIDAD\r\n                        console.log(oldData.id);\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            setState((prevState) => {\r\n                                const data = [...prevState.data];\r\n                                data.splice(data.indexOf(oldData), 1);\r\n                                return { ...prevState, data };\r\n                            });\r\n                        }, 600);\r\n                    }),\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default RequisicionCotizacionTable"]},"metadata":{},"sourceType":"module"}