{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dell Vostro\\\\Documents\\\\Universidad\\\\Clases-M7\\\\Base de datos-De nuevo unu\\\\Proyecto\\\\App\\\\Bddrip\\\\client\\\\src\\\\components\\\\Item\\\\ItemTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\n\nconst ItemTable = () => {\n  _s();\n\n  const [items, setItems] = useState([{}]);\n  const [state, setState] = useState({\n    columns: [{\n      title: 'id',\n      field: 'id',\n      editable: 'never'\n    }, {\n      title: 'Nombre',\n      field: 'nombre'\n    }, {\n      title: 'Nombre Corto',\n      field: 'nombre_corto'\n    }, {\n      title: 'Descripcion',\n      field: 'descripcion'\n    }, {\n      title: 'ID de Linea',\n      field: 'id_linea'\n    }],\n    data: []\n  }); //Cuando se renderiza el componente se llama la funcion que obtiene todas las especialidades\n\n  useEffect(() => {\n    fetchItems();\n  }, []); //obtener todos los Trabajadores\n\n  const fetchItems = () => {\n    fetch('http://localhost:5000/items').then(res => res.json()).then(result => setItems(result)).catch(err => console.log(err.message));\n  }; //eliminar un Trabajador\n\n\n  const deleteItems = id => {\n    console.log(id);\n    fetch(`http://localhost:5000/items/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => console.log(result)).catch(err => console.log(err.message));\n  }; //actualizar un Trabajador\n\n\n  const updateItems = items => {\n    console.log(items);\n    const {\n      id,\n      nombre,\n      nombre_corto,\n      descripcion,\n      unidad_medida,\n      precio_unitario,\n      id_linea\n    } = items;\n    const updateT = fetch(`http://localhost:5000/items/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        id,\n        nombre,\n        nombre_corto,\n        descripcion,\n        unidad_medida,\n        precio_unitario,\n        id_linea\n      })\n    }).then(res => res.json()).then(result => console.log(result)).catch(err => console.log(err.message));\n    console.log(updateT);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MaterialTable, {\n    title: \"Items\",\n    columns: state.columns,\n    data: items,\n    editable: {\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              updateItems(newData); //AQUI SE ACTUALIZA EL CAMPO\n\n              console.log(newData);\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        deleteItems(oldData.id); //AQUI SE DELETEA LA ESPECIALIDAD\n\n        console.log(oldData.id);\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ItemTable, \"cUwvlhS6TvBY2IP0m8A4uw7Ysoo=\");\n\n_c = ItemTable;\nexport default ItemTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemTable\");","map":{"version":3,"sources":["C:/Users/Dell Vostro/Documents/Universidad/Clases-M7/Base de datos-De nuevo unu/Proyecto/App/Bddrip/client/src/components/Item/ItemTable.js"],"names":["React","useState","useEffect","MaterialTable","ItemTable","items","setItems","state","setState","columns","title","field","editable","data","fetchItems","fetch","then","res","json","result","catch","err","console","log","message","deleteItems","id","method","headers","updateItems","nombre","nombre_corto","descripcion","unidad_medida","precio_unitario","id_linea","updateT","body","JSON","stringify","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","prevState","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\n\r\nconst ItemTable=()=>{\r\n    const [items, setItems] = useState([{}])\r\n    const [state, setState] = useState({\r\n        columns: [\r\n            { title: 'id', field: 'id', editable: 'never' },\r\n            { title: 'Nombre', field: 'nombre' },\r\n            { title: 'Nombre Corto', field: 'nombre_corto' },\r\n            { title: 'Descripcion', field: 'descripcion' },\r\n            { title: 'ID de Linea', field: 'id_linea' },\r\n        ],\r\n        data: []\r\n    })\r\n\r\n    //Cuando se renderiza el componente se llama la funcion que obtiene todas las especialidades\r\n    useEffect(() => {\r\n        fetchItems()\r\n    }, [])\r\n\r\n    //obtener todos los Trabajadores\r\n    const fetchItems = () => {\r\n        fetch('http://localhost:5000/items')\r\n            .then(res => res.json())\r\n            .then(result => setItems(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    //eliminar un Trabajador\r\n    const deleteItems = (id) => {\r\n        console.log(id)\r\n        fetch(`http://localhost:5000/items/${id}`, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-type': 'application/json' }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    //actualizar un Trabajador\r\n    const updateItems = (items) => {\r\n        console.log(items)\r\n        const {  id, nombre, nombre_corto, descripcion, unidad_medida, precio_unitario, id_linea } = items;\r\n        const updateT = fetch(`http://localhost:5000/items/${id}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify({  id, nombre, nombre_corto, descripcion, unidad_medida, precio_unitario, id_linea })\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message))\r\n        console.log(updateT)\r\n    }\r\n     \r\n    return (\r\n        <MaterialTable\r\n            title=\"Items\"\r\n            columns={state.columns}\r\n            data={items}\r\n            editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                    new Promise((resolve) => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            if (oldData) {\r\n                                setState((prevState) => {\r\n                                    const data = [...prevState.data];\r\n                                    data[data.indexOf(oldData)] = newData;\r\n                                    updateItems(newData);                //AQUI SE ACTUALIZA EL CAMPO\r\n                                    console.log(newData);\r\n                                    return { ...prevState, data };\r\n                                });\r\n                            }\r\n                        }, 600);\r\n                    }),\r\n                onRowDelete: (oldData) =>\r\n                    new Promise((resolve) => {\r\n                        deleteItems(oldData.id);                    //AQUI SE DELETEA LA ESPECIALIDAD\r\n                        console.log(oldData.id);\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            setState((prevState) => {\r\n                                const data = [...prevState.data];\r\n                                data.splice(data.indexOf(oldData), 1);\r\n                                return { ...prevState, data };\r\n                            });\r\n                        }, 600);\r\n                    }),\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ItemTable"]},"metadata":{},"sourceType":"module"}