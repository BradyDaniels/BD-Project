{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dovah\\\\Desktop\\\\BD-Project\\\\client\\\\src\\\\components\\\\OrdenCompra\\\\OrdenCompraForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport useForm from '../useForm/useForm';\nimport MaterialTable from 'material-table'; // id, precio_total, formato_pago, tipo_moneda, rif, id_cotizacion\n\nconst OrdenCompraForm = () => {\n  _s();\n\n  const [trabajadores, settrabajadores] = useState([{}]);\n  const [cotizaciones, setCotizaciones] = useState([{}]);\n  const [precioTotal, setPrecioTotal] = useState([{}]);\n  const [respuestas, setRespuestas] = useState([{}]);\n  const [subtotal, setSubtotal] = useState([{}]);\n  const [DetalleCompra, setDetalleCompra] = useState([{}]);\n  const [toggle, setToggle] = useState(false);\n  const [state, setState] = useState({\n    columns: [{\n      title: 'ID Item',\n      field: 'id_item',\n      editable: 'never'\n    }, {\n      title: 'Cantidad',\n      field: 'cantidad'\n    }, {\n      title: 'Precio Compra',\n      field: 'precio_compra'\n    }],\n    data: []\n  });\n  const proxy = 'respuestas';\n  const {\n    handleChange,\n    handleSubmit,\n    values\n  } = useForm({\n    id: '',\n    fecha_orden: getLocalDate(),\n    monto_total: '',\n    fecha_entrega: '',\n    formato_pago: '',\n    tipo_moneda: '',\n    cedula_director: '',\n    observaciones: '',\n    observaciones_entrega: ''\n  }, proxy);\n  const iva = .12;\n\n  const toggleSelect = ({\n    target\n  }) => setToggle(target.value == \"\" ? true : false);\n\n  const fetchtrabajadores = () => {\n    fetch('http://localhost:5000/directores').then(res => res.json()).then(result => settrabajadores(result)).catch(err => console.log(err.message));\n  };\n\n  const fetchCotizaciones = () => {\n    fetch('http://localhost:5000/cotizaciones').then(res => res.json()).then(result => setCotizaciones(result)).catch(err => console.log(err.message));\n  }; //obtener todas las DetalleCompra\n\n\n  const fetchDetalleCompra = () => {\n    if (values.id_respuesta == undefined) {\n      console.log(\"No hay Respuesta\");\n      fetch('http://localhost:5000/detalle_compra').then(res => res.json()).then(result => setDetalleCompra(result)).catch(err => console.log(err.message));\n    } else {\n      console.log(\"Hay una Respuesta\");\n      const GetDetalleCompra = fetch(`http://localhost:5000/detallecomprarespuesta/${values.id_respuesta}`, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      }).then(res => res.json()).then(result => setDetalleCompra(result)).catch(err => console.log(err.message));\n    }\n  };\n\n  const fetchRespuestas = () => {\n    if (values.id_cotizacion == undefined) {\n      fetch('http://localhost:5000/respuestas').then(res => res.json()).then(result => setRespuestas(result)).catch(err => console.log(err.message));\n    } else {\n      const GetRespuestas = fetch(`http://localhost:5000/respuesta_cotizacion/${values.id_cotizacion}`, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      }).then(res => res.json()).then(result => setRespuestas(result)).catch(err => console.log(err.message));\n    }\n  };\n\n  const fetchSubtotal = () => {\n    if (values.id_respuesta == undefined) {\n      console.log(\"Subtotal Vacio\"); //  fetch('http://localhost:5000/subtotal')\n      //      .then(res => res.json())\n      //      .then(result => setSubtotal(result))\n      //      .catch(err => console.log(err.message))\n    } else {\n      console.log(\"Subtotal antes del fetch\");\n      const GetSubtotal = fetch(`http://localhost:5000/subtotal/${values.id_respuesta}`, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      }).then(res => res.json()).then(result => setSubtotal(result)).catch(err => console.log(err.message));\n    }\n  }; //eliminar una Detalle Requisicion\n\n\n  const deleteDetalleCompra = id => {\n    console.log(id);\n    fetch(`http://localhost:5000/detalle_compra/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => console.log(result)).catch(err => console.log(err.message));\n  }; //actualizar una Detalle Requisicion\n\n\n  const updateDetalleCompra = DetalleCompra => {\n    console.log(DetalleCompra);\n    const {\n      id,\n      cantidad_solicitada,\n      precio_estimado,\n      id_requisicion,\n      id_item\n    } = DetalleCompra;\n    const updateDR = fetch(`http://localhost:5000/detalle_compra/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        id,\n        cantidad_solicitada,\n        precio_estimado,\n        id_requisicion,\n        id_item\n      })\n    }).then(res => res.json()).then(result => console.log(result)).catch(err => console.log(err.message));\n  };\n\n  function getLocalDate() {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n    var yyyy = today.getFullYear();\n    today = mm + '-' + dd + '-' + yyyy;\n    return today;\n  }\n\n  useEffect(() => {\n    fetchtrabajadores();\n    fetchCotizaciones();\n    fetchDetalleCompra();\n    fetchRespuestas();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: \"form-trabajador\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: \"text-field\",\n          size: \"small\",\n          label: \"ID Orden\",\n          name: \"id\",\n          variant: \"outlined\",\n          value: values.id,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"cotizacion-label\",\n            children: \"Cotizacion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"cotizacion-label\",\n            id: \"cotizaciones\",\n            value: values.id_cotizacion,\n            name: \"id_cotizacion\",\n            onChange: handleChange,\n            onBlur: handleChange,\n            children: cotizaciones.map((cotizaciones, i) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: cotizaciones.id,\n              onClick: fetchRespuestas,\n              children: cotizaciones.id\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"proveedor-label\",\n            children: \"Respuesta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"proveedor-label\",\n            id: \"respuestas\",\n            value: values.id_respuesta,\n            name: \"id_respuesta\",\n            onChange: handleChange,\n            onBlur: handleChange,\n            children: respuestas.map((respuestas, i) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: respuestas.id,\n              onClick: (fetchDetalleCompra, fetchSubtotal),\n              children: respuestas.id\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-trabajador-1\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            className: \"text-field\",\n            size: \"small\",\n            label: \"Fecha de Emision\",\n            name: \"fecha_orden\",\n            variant: \"outlined\" // Se quito el ConChange\n            ,\n            value: getLocalDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"text-field\",\n            size: \"small\",\n            label: \"Fecha de Entrega\",\n            name: \"fecha_entrega\",\n            variant: \"outlined\",\n            value: values.fecha_entrega,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: \"text-field\",\n              size: \"small\",\n              label: \"Subtotal\",\n              name: \"subtotal\",\n              variant: \"outlined\" // Se quito el ConChange\n              ,\n              value: values.setSubtotal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: \"text-field\",\n              size: \"small\",\n              label: \"IVA\",\n              name: \"iva\",\n              variant: \"outlined\" // Se quito el ConChange\n              ,\n              value: values.iva\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"text-field\",\n            size: \"small\",\n            label: \"Monto Total\",\n            name: \"precio_total\",\n            variant: \"outlined\" // Se quito el ConChange\n            ,\n            value: values.precio_total\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          \"aria-label\": \"Tipo de Moneda\",\n          name: \"tipo_moneda\",\n          value: values.tipo_moneda,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            onClick: toggleSelect,\n            value: \"bolivares\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 97\n            }, this),\n            label: \"Bolivares\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            onClick: toggleSelect,\n            value: \"divisas\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 95\n            }, this),\n            label: \"Divisas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          \"aria-label\": \"Formato de Pago\",\n          name: \"formato_pago\",\n          value: values.formato_pago,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            onClick: toggleSelect,\n            value: \"contado\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 91\n            }, this),\n            label: \"Contado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            onClick: toggleSelect,\n            value: \"credito\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 91\n            }, this),\n            label: \"Credito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"text-field\",\n          size: \"small\",\n          label: \"Observaciones\",\n          name: \"observaciones\",\n          variant: \"outlined\",\n          value: values.observaciones,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"text-field\",\n          size: \"small\",\n          label: \"Condiciones de Entrega\",\n          name: \"observaciones_entrega\",\n          variant: \"outlined\",\n          value: values.observaciones_entrega,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"proveedor-label\",\n            children: \"Director\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"proveedor-label\",\n            id: \"trabajadores\",\n            value: values.cedula_director,\n            name: \"cedula_director\",\n            onChange: handleChange,\n            onBlur: handleChange,\n            children: trabajadores.map((trabajadores, i) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: trabajadores.cedula,\n              children: trabajadores.nombre\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          size: \"small\",\n          disableElevation: true,\n          children: \"Registrar Orden de Compra\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"Detalles de Compra\",\n      columns: state.columns,\n      data: DetalleCompra,\n      options: {\n        filtering: true\n      },\n      editable: {\n        onRowUpdate: (newData, oldData) => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n\n            if (oldData) {\n              setState(prevState => {\n                const data = [...prevState.data];\n                data[data.indexOf(oldData)] = newData;\n                updateDetalleCompra(newData); //AQUI SE ACTUALIZA EL CAMPO\n\n                console.log(newData);\n                return { ...prevState,\n                  data\n                };\n              });\n            }\n          }, 600);\n        }),\n        onRowDelete: oldData => new Promise(resolve => {\n          deleteDetalleCompra(oldData.id); //AQUI SE DELETEA LA ESPECIALIDAD\n\n          console.log(oldData.id);\n          setTimeout(() => {\n            resolve();\n            setState(prevState => {\n              const data = [...prevState.data];\n              data.splice(data.indexOf(oldData), 1);\n              return { ...prevState,\n                data\n              };\n            });\n          }, 600);\n        })\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrdenCompraForm, \"S8v2md/cCJ38YIuppakfy3SYMOI=\", false, function () {\n  return [useForm];\n});\n\n_c = OrdenCompraForm;\nexport default OrdenCompraForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdenCompraForm\");","map":{"version":3,"sources":["C:/Users/Dovah/Desktop/BD-Project/client/src/components/OrdenCompra/OrdenCompraForm.js"],"names":["React","useState","useEffect","Button","TextField","FormControl","RadioGroup","Radio","FormControlLabel","InputLabel","Select","MenuItem","useForm","MaterialTable","OrdenCompraForm","trabajadores","settrabajadores","cotizaciones","setCotizaciones","precioTotal","setPrecioTotal","respuestas","setRespuestas","subtotal","setSubtotal","DetalleCompra","setDetalleCompra","toggle","setToggle","state","setState","columns","title","field","editable","data","proxy","handleChange","handleSubmit","values","id","fecha_orden","getLocalDate","monto_total","fecha_entrega","formato_pago","tipo_moneda","cedula_director","observaciones","observaciones_entrega","iva","toggleSelect","target","value","fetchtrabajadores","fetch","then","res","json","result","catch","err","console","log","message","fetchCotizaciones","fetchDetalleCompra","id_respuesta","undefined","GetDetalleCompra","method","headers","fetchRespuestas","id_cotizacion","GetRespuestas","fetchSubtotal","GetSubtotal","deleteDetalleCompra","updateDetalleCompra","cantidad_solicitada","precio_estimado","id_requisicion","id_item","updateDR","body","JSON","stringify","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","map","i","precio_total","cedula","nombre","filtering","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","prevState","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport useForm from '../useForm/useForm'\r\nimport MaterialTable from 'material-table'\r\n\r\n// id, precio_total, formato_pago, tipo_moneda, rif, id_cotizacion\r\n\r\nconst OrdenCompraForm = () => {\r\n    const [trabajadores, settrabajadores] = useState([{}])\r\n    const [cotizaciones, setCotizaciones] = useState([{}])\r\n    const [precioTotal, setPrecioTotal] = useState([{}])\r\n    const [respuestas, setRespuestas] = useState([{}])\r\n    const [subtotal, setSubtotal] = useState([{}])\r\n    \r\n    const [DetalleCompra, setDetalleCompra] = useState([{}]);\r\n\r\n    \r\n    const [toggle, setToggle] = useState(false)\r\n\r\n    const [ state, setState ] = useState({\r\n        columns: [\r\n            {title: 'ID Item', field: 'id_item', editable: 'never'},\r\n            {title: 'Cantidad', field: 'cantidad'},\r\n            {title: 'Precio Compra', field: 'precio_compra'},\r\n        ],\r\n        data: []\r\n    })\r\n    \r\n    const proxy = 'respuestas'\r\n    const { handleChange, handleSubmit, values } = useForm({\r\n        id: '',\r\n        fecha_orden: getLocalDate(),\r\n        monto_total: '',\r\n        fecha_entrega: '',\r\n        formato_pago: '',\r\n        tipo_moneda: '',\r\n        cedula_director: '',\r\n        observaciones: '',\r\n        observaciones_entrega: '',\r\n    }, proxy)\r\n\r\n    const iva = .12;\r\n\r\n    const toggleSelect = ({ target }) => setToggle(target.value == \"\" ? true : false)\r\n\r\n    const fetchtrabajadores = () => {\r\n        fetch('http://localhost:5000/directores')\r\n            .then(res => res.json())\r\n            .then(result => settrabajadores(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    const fetchCotizaciones = () => {\r\n        fetch('http://localhost:5000/cotizaciones')\r\n            .then(res => res.json())\r\n            .then(result => setCotizaciones(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    \r\n    //obtener todas las DetalleCompra\r\n    const fetchDetalleCompra = () => {\r\n        if(values.id_respuesta == undefined){\r\n            console.log(\"No hay Respuesta\")\r\n         fetch('http://localhost:5000/detalle_compra')\r\n             .then(res => res.json())\r\n             .then(result => setDetalleCompra(result))\r\n             .catch(err => console.log(err.message))\r\n          \r\n        }\r\n        else{\r\n            console.log(\"Hay una Respuesta\")\r\n         const GetDetalleCompra=fetch(`http://localhost:5000/detallecomprarespuesta/${values.id_respuesta}`, {\r\n             method: 'GET',\r\n             headers: { 'Content-type': 'application/json' }\r\n         })\r\n             .then(res => res.json())\r\n             .then(result => setDetalleCompra(result))\r\n             .catch(err => console.log(err.message))\r\n        \r\n        }\r\n    }\r\n\r\n    const fetchRespuestas = () => {\r\n        if(values.id_cotizacion == undefined){\r\n         fetch('http://localhost:5000/respuestas')\r\n             .then(res => res.json())\r\n             .then(result => setRespuestas(result))\r\n             .catch(err => console.log(err.message))\r\n          \r\n        }\r\n        else{\r\n         const GetRespuestas=fetch(`http://localhost:5000/respuesta_cotizacion/${values.id_cotizacion}`, {\r\n             method: 'GET',\r\n             headers: { 'Content-type': 'application/json' }\r\n         })\r\n             .then(res => res.json())\r\n             .then(result => setRespuestas(result))\r\n             .catch(err => console.log(err.message))\r\n        \r\n        }\r\n    }\r\n    const fetchSubtotal = () => {\r\n        if(values.id_respuesta == undefined){\r\n            console.log(\"Subtotal Vacio\")\r\n        //  fetch('http://localhost:5000/subtotal')\r\n        //      .then(res => res.json())\r\n        //      .then(result => setSubtotal(result))\r\n        //      .catch(err => console.log(err.message))\r\n          \r\n        }\r\n        else{\r\n            console.log (\"Subtotal antes del fetch\")\r\n         const GetSubtotal=fetch(`http://localhost:5000/subtotal/${values.id_respuesta}`, {\r\n             method: 'GET',\r\n             headers: { 'Content-type': 'application/json' }\r\n         })\r\n             .then(res => res.json())\r\n             .then(result => setSubtotal(result))\r\n             .catch(err => console.log(err.message))\r\n        \r\n        }\r\n    }\r\n    //eliminar una Detalle Requisicion\r\n    const deleteDetalleCompra = (id) => {\r\n        console.log(id)\r\n        fetch(`http://localhost:5000/detalle_compra/${id}`, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-type': 'application/json' }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    //actualizar una Detalle Requisicion\r\n    const updateDetalleCompra = (DetalleCompra) => {\r\n        console.log(DetalleCompra)\r\n        const { id, cantidad_solicitada, precio_estimado, id_requisicion, id_item } = DetalleCompra;\r\n        const updateDR = fetch(`http://localhost:5000/detalle_compra/${id}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify({ id, cantidad_solicitada, precio_estimado, id_requisicion, id_item })\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    \r\n    function getLocalDate() {\r\n        var today = new Date();\r\n        var dd = String(today.getDate()).padStart(2, '0');\r\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        today = mm + '-' + dd + '-' + yyyy;\r\n        return today;\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchtrabajadores()\r\n        fetchCotizaciones()\r\n        fetchDetalleCompra();\r\n        fetchRespuestas();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form onSubmit={handleSubmit}>\r\n                \r\n                <FormControl className=\"form-trabajador\">\r\n                <TextField\r\n                            className=\"text-field\"\r\n                            size=\"small\"\r\n                            label=\"ID Orden\"\r\n                            name=\"id\"\r\n                            variant=\"outlined\"\r\n                            value={values.id}\r\n                            onChange={handleChange} />   \r\n                <FormControl>\r\n                        <InputLabel id=\"cotizacion-label\">Cotizacion</InputLabel>\r\n                        <Select\r\n                            labelId=\"cotizacion-label\"\r\n                            id=\"cotizaciones\"\r\n                            value={values.id_cotizacion}\r\n                            name=\"id_cotizacion\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                        >\r\n                            {cotizaciones.map((cotizaciones, i) => (\r\n                                <MenuItem value={cotizaciones.id} key={i}  onClick = {fetchRespuestas}>\r\n                                    {cotizaciones.id}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <InputLabel id=\"proveedor-label\">Respuesta</InputLabel>\r\n                        <Select\r\n                            labelId=\"proveedor-label\"\r\n                            id=\"respuestas\"\r\n                            value={values.id_respuesta}\r\n                            name=\"id_respuesta\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                        >\r\n                            {respuestas.map((respuestas, i) => (\r\n                                <MenuItem value={respuestas.id} key={i} onClick = {fetchDetalleCompra, fetchSubtotal}>\r\n                                    {respuestas.id}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    \r\n                    <br></br>\r\n                    <div className=\"form-trabajador-1\">\r\n                            <TextField\r\n                                className=\"text-field\"\r\n                                size=\"small\"\r\n                                label=\"Fecha de Emision\"\r\n                                name=\"fecha_orden\"\r\n                                variant=\"outlined\"\r\n                                // Se quito el ConChange\r\n                                value={getLocalDate()} />\r\n                            \r\n                        <TextField\r\n                            className=\"text-field\"\r\n                            size=\"small\"\r\n                            label=\"Fecha de Entrega\"\r\n                            name=\"fecha_entrega\"\r\n                            variant=\"outlined\"\r\n                            value={values.fecha_entrega}\r\n                            onChange={handleChange} />\r\n                            <br></br><br></br>\r\n                        <div>\r\n                        <TextField\r\n                            className=\"text-field\"\r\n                            size=\"small\"\r\n                            label=\"Subtotal\"\r\n                            name=\"subtotal\"\r\n                            variant=\"outlined\"\r\n                            // Se quito el ConChange\r\n                            value={values.setSubtotal} />  \r\n                        </div>      \r\n                        <div>\r\n                        <TextField\r\n                            className=\"text-field\"\r\n                            size=\"small\"\r\n                            label=\"IVA\"\r\n                            name=\"iva\"\r\n                            variant=\"outlined\"\r\n                            // Se quito el ConChange\r\n                            value={values.iva} />     \r\n                        </div>\r\n                        <TextField\r\n                            className=\"text-field\"\r\n                            size=\"small\"\r\n                            label=\"Monto Total\"\r\n                            name=\"precio_total\"\r\n                            variant=\"outlined\"\r\n                            // Se quito el ConChange\r\n                            value={values.precio_total} />     \r\n                    </div>\r\n                   <RadioGroup aria-label=\"Tipo de Moneda\" name=\"tipo_moneda\" value={values.tipo_moneda} onChange={handleChange}>\r\n                            <FormControlLabel onClick={toggleSelect} value=\"bolivares\" control={<Radio />} label=\"Bolivares\" />\r\n                            <FormControlLabel onClick={toggleSelect} value=\"divisas\" control={<Radio />} label=\"Divisas\" />\r\n                        </RadioGroup>\r\n                    <br></br>\r\n                    <RadioGroup aria-label=\"Formato de Pago\" name=\"formato_pago\" value={values.formato_pago} onChange={handleChange}>\r\n                        <FormControlLabel onClick={toggleSelect} value=\"contado\" control={<Radio />} label=\"Contado\" />\r\n                        <FormControlLabel onClick={toggleSelect} value=\"credito\" control={<Radio />} label=\"Credito\" />\r\n                    </RadioGroup>\r\n                     <TextField\r\n                            className=\"text-field\"\r\n                            size=\"small\"\r\n                            label=\"Observaciones\"\r\n                            name=\"observaciones\"\r\n                            variant=\"outlined\"\r\n                            value={values.observaciones} \r\n                            onChange={handleChange}/>\r\n                        <br></br>\r\n                        <TextField\r\n                            className=\"text-field\"\r\n                            size=\"small\"\r\n                            label=\"Condiciones de Entrega\"\r\n                            name=\"observaciones_entrega\"\r\n                            variant=\"outlined\"\r\n                            value={values.observaciones_entrega} \r\n                            onChange={handleChange}/>\r\n                    <FormControl>\r\n                        <InputLabel id=\"proveedor-label\">Director</InputLabel>\r\n                        <Select\r\n                            labelId=\"proveedor-label\"\r\n                            id=\"trabajadores\"\r\n                            value={values.cedula_director}\r\n                            name=\"cedula_director\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                        >\r\n                            {trabajadores.map((trabajadores, i) => (\r\n                                <MenuItem value={trabajadores.cedula} key={i}>\r\n                                    {trabajadores.nombre}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <Button type=\"submit\" variant=\"contained\" size=\"small\" disableElevation>Registrar Orden de Compra</Button>\r\n                </FormControl>\r\n            </form>\r\n            <br></br>\r\n            \r\n        <MaterialTable\r\n            title=\"Detalles de Compra\"\r\n            columns={state.columns}\r\n            data={DetalleCompra}\r\n            options={{\r\n                filtering: true\r\n              }}\r\n            editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                    new Promise((resolve) => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            if (oldData) {\r\n                                setState((prevState) => {\r\n                                    const data = [...prevState.data];\r\n                                    data[data.indexOf(oldData)] = newData;\r\n                                    updateDetalleCompra(newData);//AQUI SE ACTUALIZA EL CAMPO\r\n                                    console.log(newData);\r\n                                    return { ...prevState, data };\r\n                                });\r\n                            }\r\n                        }, 600);\r\n                    }),\r\n                onRowDelete: (oldData) =>\r\n                    new Promise((resolve) => {\r\n                        deleteDetalleCompra(oldData.id);//AQUI SE DELETEA LA ESPECIALIDAD\r\n                        console.log(oldData.id);\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            setState((prevState) => {\r\n                                const data = [...prevState.data];\r\n                                data.splice(data.indexOf(oldData), 1);\r\n                                return { ...prevState, data };\r\n                            });\r\n                        }, 600);\r\n                    }),\r\n            }}\r\n        />\r\n            \r\n        </div>\r\n        \r\n        )\r\n}\r\n\r\nexport default OrdenCompraForm"]},"metadata":{},"sourceType":"module"}