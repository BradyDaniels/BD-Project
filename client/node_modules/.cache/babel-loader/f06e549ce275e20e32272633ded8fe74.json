{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dovah\\\\Desktop\\\\BD-Project\\\\client\\\\src\\\\components\\\\Cotizacion\\\\CotizacionesTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\n\nconst CotizacionesTable = () => {\n  _s();\n\n  //estado del Componente\n  const [Cotizaciones, setCotizaciones] = useState([{}]); //estado para los titulos de las columnas de la tabla\n  //NOTA: EL CAMPO FIELD DEBE SER EL MISMO NOMBRE QUE TIENE EL ATRIBUTO EN LA BD, SINO SE ROMPE\n  //TODAS LAS VARIABLES DE LAS TABLAS DEBEN TENER EL MISMO NOMBRE QUE EN LA BD\n\n  const [state, setState] = useState({\n    columns: [{\n      title: 'ID',\n      field: 'id',\n      editable: 'never'\n    }, {\n      title: 'ID Linea',\n      field: 'id_linea',\n      editable: 'never'\n    }, {\n      title: 'Fecha de Emision',\n      field: 'fecha_emision',\n      editable: 'never'\n    }, {\n      title: 'Observaciones',\n      field: 'observaciones',\n      editable: 'never'\n    }, {\n      title: 'Condiciones de Entrega',\n      field: 'condiciones_entrega',\n      editable: 'never'\n    }],\n    data: []\n  });\n  useEffect(() => {\n    fetchCotizaciones();\n  }, []); //obtener todas las Cotizaciones\n\n  const fetchCotizaciones = () => {\n    fetch('http://localhost:5000/cotizaciones').then(res => res.json()).then(result => setCotizaciones(result)).catch(err => console.log(err.message));\n  }; //eliminar una Cotizacion\n\n\n  const deleteCotizacion = id => {\n    console.log(id);\n    fetch(`http://localhost:5000/cotizaciones/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => console.log(result)).catch(err => console.log(err.message));\n  }; //actualizar una Cotizacion\n\n\n  const updateCotizacion = cotizacion => {\n    console.log(cotizacion);\n    const {\n      id,\n      id_linea,\n      fecha_emision,\n      observaciones,\n      condiciones_entrega\n    } = cotizacion;\n    const updateC = fetch(`http://localhost:5000/cotizaciones/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        id,\n        id_linea,\n        fecha_emision,\n        observaciones,\n        condiciones_entrega\n      })\n    }).then(res => res.json()).then(result => console.log(result)).catch(err => console.log(err.message));\n    console.log(updateC);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MaterialTable, {\n    title: \"Cotizaciones\",\n    columns: state.columns,\n    data: Cotizaciones,\n    options: {\n      filtering: true\n    },\n    editable: {\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              updateCotizacion(newData); //AQUI SE ACTUALIZA EL CAMPO\n\n              console.log(newData);\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        deleteCotizacion(oldData.id); //AQUI SE DELETEA LA ESPECIALIDAD\n\n        console.log(oldData.id);\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CotizacionesTable, \"ojgvd3ClkEzBXB/TNN1R9zBRbc4=\");\n\n_c = CotizacionesTable;\nexport default CotizacionesTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CotizacionesTable\");","map":{"version":3,"sources":["C:/Users/Dovah/Desktop/BD-Project/client/src/components/Cotizacion/CotizacionesTable.js"],"names":["React","useState","useEffect","MaterialTable","CotizacionesTable","Cotizaciones","setCotizaciones","state","setState","columns","title","field","editable","data","fetchCotizaciones","fetch","then","res","json","result","catch","err","console","log","message","deleteCotizacion","id","method","headers","updateCotizacion","cotizacion","id_linea","fecha_emision","observaciones","condiciones_entrega","updateC","body","JSON","stringify","filtering","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","prevState","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table'\r\n\r\n\r\nconst CotizacionesTable = () => {\r\n\r\n    //estado del Componente\r\n    \r\n    const [Cotizaciones, setCotizaciones] = useState([{}]);\r\n\r\n    //estado para los titulos de las columnas de la tabla\r\n    //NOTA: EL CAMPO FIELD DEBE SER EL MISMO NOMBRE QUE TIENE EL ATRIBUTO EN LA BD, SINO SE ROMPE\r\n    //TODAS LAS VARIABLES DE LAS TABLAS DEBEN TENER EL MISMO NOMBRE QUE EN LA BD\r\n    const [ state, setState ] = useState({\r\n        columns: [\r\n            {title: 'ID', field: 'id', editable: 'never'},\r\n            {title: 'ID Linea', field: 'id_linea', editable: 'never'},\r\n            {title: 'Fecha de Emision', field: 'fecha_emision', editable: 'never'},\r\n            {title: 'Observaciones', field: 'observaciones', editable: 'never'},\r\n            {title: 'Condiciones de Entrega', field: 'condiciones_entrega', editable: 'never'},\r\n        ],\r\n        data: []\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetchCotizaciones()\r\n    }, [])\r\n\r\n    //obtener todas las Cotizaciones\r\n    const fetchCotizaciones = () => {\r\n        fetch('http://localhost:5000/cotizaciones')\r\n            .then(res => res.json())\r\n            .then(result => setCotizaciones(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    //eliminar una Cotizacion\r\n    const deleteCotizacion = (id) => {\r\n        console.log(id)\r\n        fetch(`http://localhost:5000/cotizaciones/${id}`, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-type': 'application/json' }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    //actualizar una Cotizacion\r\n    const updateCotizacion = (cotizacion) => {\r\n        console.log(cotizacion)\r\n        const { id, id_linea, fecha_emision, observaciones, condiciones_entrega } = cotizacion;\r\n        const updateC = fetch(`http://localhost:5000/cotizaciones/${id}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify({ id, id_linea, fecha_emision, observaciones, condiciones_entrega })\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message))\r\n        console.log(updateC)\r\n    }\r\n\r\n    return(\r\n        <MaterialTable\r\n            title=\"Cotizaciones\"\r\n            columns={state.columns}\r\n            data={Cotizaciones}\r\n            options={{\r\n                filtering: true\r\n              }}\r\n            editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                    new Promise((resolve) => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            if (oldData) {\r\n                                setState((prevState) => {\r\n                                    const data = [...prevState.data];\r\n                                    data[data.indexOf(oldData)] = newData;\r\n                                    updateCotizacion(newData);//AQUI SE ACTUALIZA EL CAMPO\r\n                                    console.log(newData);\r\n                                    return { ...prevState, data };\r\n                                });\r\n                            }\r\n                        }, 600);\r\n                    }),\r\n                onRowDelete: (oldData) =>\r\n                    new Promise((resolve) => {\r\n                        deleteCotizacion(oldData.id);//AQUI SE DELETEA LA ESPECIALIDAD\r\n                        console.log(oldData.id);\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            setState((prevState) => {\r\n                                const data = [...prevState.data];\r\n                                data.splice(data.indexOf(oldData), 1);\r\n                                return { ...prevState, data };\r\n                            });\r\n                        }, 600);\r\n                    }),\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default CotizacionesTable"]},"metadata":{},"sourceType":"module"}