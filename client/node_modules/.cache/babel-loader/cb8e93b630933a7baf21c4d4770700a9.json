{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dell Vostro\\\\Documents\\\\Universidad\\\\Clases-M7\\\\Base de datos-De nuevo unu\\\\Proyecto\\\\App\\\\Bddrip\\\\client\\\\src\\\\components\\\\Anexo_Requisicion\\\\AReq_FormItems.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport useForm from '../useForm/useForm';\nimport MaterialTable from 'material-table';\n\nconst AReq_FormItems = ({\n  items,\n  Rvalues\n}) => {\n  _s();\n\n  const [lineas, setLineas] = useState([{}]); //const [items, setItems] = useState([{}])\n\n  const [ReqItems, setReqItems] = useState([{\n    id: null\n  }]);\n  const [state, setState] = useState({\n    columns: [{\n      title: 'id',\n      field: 'id_item',\n      editable: 'never'\n    }, {\n      title: 'Item',\n      field: 'nombre',\n      editable: 'never'\n    }, {\n      title: 'Cantidad',\n      field: 'cantidad_solicitada',\n      type: 'numeric'\n    }, {\n      title: 'Precio',\n      field: 'precio_estimado',\n      type: 'numeric',\n      editable: 'never'\n    }],\n    data: []\n  });\n  const proxy = 'Requisicion';\n  const {\n    handleChange,\n    handleSubmit,\n    values\n  } = useForm({\n    id: '',\n    id_item: '',\n    nombre: '',\n    descripcion: '',\n    unidad_medida: '',\n    precio_unitario: ''\n  }, proxy);\n\n  const fetchLineas = () => {\n    fetch('http://localhost:5000/lineas_suministro').then(res => res.json()).then(result => setLineas(result)).catch(err => console.log(err.message));\n  };\n\n  useEffect(() => {\n    fetchLineas(); //fetchInstituciones()\n  }, []);\n\n  const check = () => {\n    var aux = false;\n    ReqItems.map((item, i) => {\n      if (item.id == values.id) {\n        aux = true;\n      }\n    });\n    return aux;\n  };\n\n  const cargar = () => {\n    items.map((item, i) => {\n      if (values.id == item.id) {\n        if (ReqItems[0].id == null) {\n          setReqItems([{\n            id: i,\n            id_linea: item.id_linea,\n            id_item: item.id,\n            nombre: item.nombre,\n            cantidad_solicitada: 1,\n            precio_estimado: item.precio_unitario,\n            precio: item.precio_unitario\n          }]);\n        } else if (!check() && values.id_linea == ReqItems[0].id_linea) {\n          setReqItems(ReqItems.concat([{\n            id_requisicion: Rvalues.id,\n            id: i,\n            id_linea: item.id_linea,\n            id_item: item.id,\n            nombre: item.nombre,\n            cantidad_solicitada: 1,\n            precio_estimado: item.precio_unitario,\n            precio: item.precio_unitario\n          }]));\n        }\n      }\n    });\n  };\n\n  const fetchCargarRequisicion = () => {\n    console.log('VALORES: ', Rvalues.id);\n    console.log('LISTA DE ITMES: ', ReqItems);\n    fetch(`http://localhost:5000/requisiciones`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(Rvalues)\n    }).then(res => res.json()).then(result => console.log(result)).catch(err => console.log(err.message));\n    ReqItems.map((item, i) => {\n      fetch(`http://localhost:5000/detalle_requisicion`, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(ReqItems[i])\n      }).then(res => res.json()).then(result => console.log(result)).catch(err => console.log(err.message));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: \"form-trabajador\",\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"dependencias-label\",\n            children: \"Linea de Suministro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"dependencias-label\",\n            id: \"dependencias\",\n            value: values.id_linea,\n            name: \"id_linea\",\n            onChange: handleChange,\n            onBlur: handleChange,\n            children: lineas.map((linea, i) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: linea.id,\n              children: linea.descripcion\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"dependencias-label\",\n            children: \"Items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"dependencias-label\",\n            id: \"dependencias\",\n            value: values.id,\n            name: \"id\",\n            onChange: handleChange,\n            onBlur: handleChange,\n            children: items.map((item, i) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: item.id,\n              children: item.nombre\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: cargar,\n          variant: \"contained\",\n          size: \"small\",\n          disableElevation: true,\n          children: \"A\\xF1adir Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"Items\",\n      columns: state.columns,\n      data: ReqItems,\n      editable: {\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            if (ReqItems[0].id != null) {\n              const dataDelete = [...ReqItems];\n              const index = oldData.tableData.id;\n              console.log(oldData.id);\n              dataDelete.splice(index, 1);\n              if (ReqItems[0].id != oldData.id) setReqItems([...dataDelete]);else setReqItems([{\n                id: null\n              }]);\n            }\n\n            resolve();\n          }, 1000);\n        })\n      },\n      cellEditable: {\n        onCellEditApproved: (newValue, oldValue, rowData, columnDef) => {\n          return new Promise((resolve, reject) => {\n            console.log('newValue: ' + rowData.id_item);\n            rowData.cantidad = newValue;\n            rowData.precio = rowData.precio_unitario * rowData.cantidad;\n            setTimeout(resolve, 1000);\n          });\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: fetchCargarRequisicion,\n      variant: \"contained\",\n      size: \"small\",\n      disableElevation: true,\n      children: \"CARGAR REQUISICION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AReq_FormItems, \"xWuiHR1i8obcZQPiwLyuK0J/2EY=\", false, function () {\n  return [useForm];\n});\n\n_c = AReq_FormItems;\nexport default AReq_FormItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"AReq_FormItems\");","map":{"version":3,"sources":["C:/Users/Dell Vostro/Documents/Universidad/Clases-M7/Base de datos-De nuevo unu/Proyecto/App/Bddrip/client/src/components/Anexo_Requisicion/AReq_FormItems.js"],"names":["React","useState","useEffect","Button","TextField","FormControl","RadioGroup","Radio","FormControlLabel","InputLabel","Select","MenuItem","useForm","MaterialTable","AReq_FormItems","items","Rvalues","lineas","setLineas","ReqItems","setReqItems","id","state","setState","columns","title","field","editable","type","data","proxy","handleChange","handleSubmit","values","id_item","nombre","descripcion","unidad_medida","precio_unitario","fetchLineas","fetch","then","res","json","result","catch","err","console","log","message","check","aux","map","item","i","cargar","id_linea","cantidad_solicitada","precio_estimado","precio","concat","id_requisicion","fetchCargarRequisicion","method","headers","body","JSON","stringify","linea","onRowDelete","oldData","Promise","resolve","reject","setTimeout","dataDelete","index","tableData","splice","onCellEditApproved","newValue","oldValue","rowData","columnDef","cantidad"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAEA,MAAMC,cAAc,GAAC,CAAC;AAACC,EAAAA,KAAD;AAAOC,EAAAA;AAAP,CAAD,KAAmB;AAAA;;AACpC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,CAAC,EAAD,CAAD,CAApC,CADoC,CAGpC;;AAEA,QAAM,CAACkB,QAAD,EAAUC,WAAV,IAAuBnB,QAAQ,CAAC,CAAC;AAACoB,IAAAA,EAAE,EAAC;AAAJ,GAAD,CAAD,CAArC;AAGA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC;AAC/BuB,IAAAA,OAAO,EAAE,CACL;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,KAAK,EAAE,SAAtB;AAAiCC,MAAAA,QAAQ,EAAE;AAA3C,KADK,EAEL;AAAEF,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE,QAAxB;AAAkCC,MAAAA,QAAQ,EAAE;AAA5C,KAFK,EAGL;AAAEF,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,KAAK,EAAE,qBAA5B;AAAkDE,MAAAA,IAAI,EAAE;AAAxD,KAHK,EAIL;AAAEH,MAAAA,KAAK,EAAE,QAAT;AAAmBC,MAAAA,KAAK,EAAE,iBAA1B;AAA6CE,MAAAA,IAAI,EAAE,SAAnD;AAA6DD,MAAAA,QAAQ,EAAE;AAAvE,KAJK,CADsB;AAO/BE,IAAAA,IAAI,EAAE;AAPyB,GAAD,CAAlC;AAUA,QAAMC,KAAK,GAAC,aAAZ;AACA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,YAAhB;AAA8BC,IAAAA;AAA9B,MAAyCrB,OAAO,CAAE;AACpDS,IAAAA,EAAE,EAAE,EADgD;AAEpDa,IAAAA,OAAO,EAAC,EAF4C;AAGpDC,IAAAA,MAAM,EAAE,EAH4C;AAIpDC,IAAAA,WAAW,EAAE,EAJuC;AAKpDC,IAAAA,aAAa,EAAC,EALsC;AAMpDC,IAAAA,eAAe,EAAC;AANoC,GAAF,EAOnDR,KAPmD,CAAtD;;AAUA,QAAMS,WAAW,GAAG,MAAM;AACtBC,IAAAA,KAAK,CAAC,yCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,MAAM,IAAI1B,SAAS,CAAC0B,MAAD,CAF7B,EAGKC,KAHL,CAGWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CAHlB;AAIH,GALD;;AAOA/C,EAAAA,SAAS,CAAC,MAAM;AACZqC,IAAAA,WAAW,GADC,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMW,KAAK,GAAC,MAAI;AACb,QAAIC,GAAG,GAAC,KAAR;AACAhC,IAAAA,QAAQ,CAACiC,GAAT,CAAa,CAACC,IAAD,EAAMC,CAAN,KAAU;AACnB,UAAGD,IAAI,CAAChC,EAAL,IAASY,MAAM,CAACZ,EAAnB,EAAsB;AACnB8B,QAAAA,GAAG,GAAC,IAAJ;AAEF;AACJ,KALD;AAOA,WAAOA,GAAP;AACF,GAVD;;AAYA,QAAMI,MAAM,GAAC,MAAI;AAEbxC,IAAAA,KAAK,CAACqC,GAAN,CAAU,CAACC,IAAD,EAAMC,CAAN,KAAU;AAChB,UAAGrB,MAAM,CAACZ,EAAP,IAAWgC,IAAI,CAAChC,EAAnB,EAAsB;AAElB,YAAGF,QAAQ,CAAC,CAAD,CAAR,CAAYE,EAAZ,IAAgB,IAAnB,EAAwB;AAChBD,UAAAA,WAAW,CAAC,CAAC;AAACC,YAAAA,EAAE,EAACiC,CAAJ;AAAME,YAAAA,QAAQ,EAACH,IAAI,CAACG,QAApB;AAA6BtB,YAAAA,OAAO,EAACmB,IAAI,CAAChC,EAA1C;AAA6Cc,YAAAA,MAAM,EAACkB,IAAI,CAAClB,MAAzD;AAAgEsB,YAAAA,mBAAmB,EAAC,CAApF;AAAsFC,YAAAA,eAAe,EAACL,IAAI,CAACf,eAA3G;AAA2HqB,YAAAA,MAAM,EAACN,IAAI,CAACf;AAAvI,WAAD,CAAD,CAAX;AACP,SAFD,MAGK,IAAG,CAACY,KAAK,EAAN,IAAYjB,MAAM,CAACuB,QAAP,IAAiBrC,QAAQ,CAAC,CAAD,CAAR,CAAYqC,QAA5C,EAAqD;AACtDpC,UAAAA,WAAW,CAACD,QAAQ,CAACyC,MAAT,CAAgB,CAAC;AAACC,YAAAA,cAAc,EAAC7C,OAAO,CAACK,EAAxB;AAA2BA,YAAAA,EAAE,EAACiC,CAA9B;AAAgCE,YAAAA,QAAQ,EAACH,IAAI,CAACG,QAA9C;AAAuDtB,YAAAA,OAAO,EAACmB,IAAI,CAAChC,EAApE;AAAuEc,YAAAA,MAAM,EAACkB,IAAI,CAAClB,MAAnF;AAA0FsB,YAAAA,mBAAmB,EAAC,CAA9G;AAAgHC,YAAAA,eAAe,EAACL,IAAI,CAACf,eAArI;AAAqJqB,YAAAA,MAAM,EAACN,IAAI,CAACf;AAAjK,WAAD,CAAhB,CAAD,CAAX;AAEC;AAER;AACJ,KAZD;AAcH,GAhBD;;AAiBA,QAAMwB,sBAAsB,GAAC,MAAI;AAC7Bf,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBhC,OAAO,CAACK,EAAhC;AACA0B,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+B7B,QAA/B;AACAqB,IAAAA,KAAK,CAAE,qCAAF,EAAwC;AACzCuB,MAAAA,MAAM,EAAE,MADiC;AAEzCC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFgC;AAGzCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAenD,OAAf;AAHmC,KAAxC,CAAL,CAKKyB,IALL,CAKUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALjB,EAMKF,IANL,CAMUG,MAAM,IAAIG,OAAO,CAACC,GAAR,CAAYJ,MAAZ,CANpB,EAOKC,KAPL,CAOWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CAPlB;AAQD9B,IAAAA,QAAQ,CAACiC,GAAT,CAAa,CAACC,IAAD,EAAMC,CAAN,KAAU;AACtBd,MAAAA,KAAK,CAAE,2CAAF,EAA8C;AAC/CuB,QAAAA,MAAM,EAAE,MADuC;AAE/CC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFsC;AAG/CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAehD,QAAQ,CAACmC,CAAD,CAAvB;AAHyC,OAA9C,CAAL,CAKKb,IALL,CAKUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALjB,EAMKF,IANL,CAMUG,MAAM,IAAIG,OAAO,CAACC,GAAR,CAAYJ,MAAZ,CANpB,EAOKC,KAPL,CAOWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CAPlB;AAQA,KATD;AAWF,GAtBD;;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAEjB,YAAhB;AAAA,6BACI,QAAC,WAAD;AAAc,QAAA,SAAS,EAAC,iBAAxB;AAAA,gCACQ,QAAC,WAAD;AAAA,kCACI,QAAC,UAAD;AAAY,YAAA,EAAE,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AACI,YAAA,OAAO,EAAC,oBADZ;AAEI,YAAA,EAAE,EAAC,cAFP;AAGI,YAAA,KAAK,EAAEC,MAAM,CAACuB,QAHlB;AAII,YAAA,IAAI,EAAC,UAJT;AAKI,YAAA,QAAQ,EAAEzB,YALd;AAMI,YAAA,MAAM,EAAEA,YANZ;AAAA,sBAQKd,MAAM,CAACmC,GAAP,CAAW,CAACgB,KAAD,EAAQd,CAAR,kBACR,QAAC,QAAD;AAAU,cAAA,KAAK,EAAEc,KAAK,CAAC/C,EAAvB;AAAA,wBACK+C,KAAK,CAAChC;AADX,eAAgCkB,CAAhC;AAAA;AAAA;AAAA;AAAA,oBADH;AARL;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,eAmBQ,QAAC,WAAD;AAAA,kCACI,QAAC,UAAD;AAAY,YAAA,EAAE,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AACI,YAAA,OAAO,EAAC,oBADZ;AAEI,YAAA,EAAE,EAAC,cAFP;AAGI,YAAA,KAAK,EAAErB,MAAM,CAACZ,EAHlB;AAII,YAAA,IAAI,EAAC,IAJT;AAKI,YAAA,QAAQ,EAAEU,YALd;AAMI,YAAA,MAAM,EAAEA,YANZ;AAAA,sBAQKhB,KAAK,CAACqC,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACP,QAAC,QAAD;AAAU,cAAA,KAAK,EAAED,IAAI,CAAChC,EAAtB;AAAA,wBACKgC,IAAI,CAAClB;AADV,eAA+BmB,CAA/B;AAAA;AAAA;AAAA;AAAA,oBADH;AARL;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBR,eAoCQ,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEC,MAAjB;AAAyB,UAAA,OAAO,EAAC,WAAjC;AAA6C,UAAA,IAAI,EAAC,OAAlD;AAA0D,UAAA,gBAAgB,MAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApCR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eA0CI,QAAC,aAAD;AACI,MAAA,KAAK,EAAC,OADV;AAEI,MAAA,OAAO,EAAEjC,KAAK,CAACE,OAFnB;AAGI,MAAA,IAAI,EAAEL,QAHV;AAII,MAAA,QAAQ,EAAE;AACNkD,QAAAA,WAAW,EAAEC,OAAO,IAChB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7BC,UAAAA,UAAU,CAAC,MAAM;AACd,gBAAGvD,QAAQ,CAAC,CAAD,CAAR,CAAYE,EAAZ,IAAgB,IAAnB,EAAwB;AACvB,oBAAMsD,UAAU,GAAG,CAAC,GAAGxD,QAAJ,CAAnB;AACA,oBAAMyD,KAAK,GAAGN,OAAO,CAACO,SAAR,CAAkBxD,EAAhC;AACA0B,cAAAA,OAAO,CAACC,GAAR,CAAYsB,OAAO,CAACjD,EAApB;AACAsD,cAAAA,UAAU,CAACG,MAAX,CAAkBF,KAAlB,EAAyB,CAAzB;AACA,kBAAGzD,QAAQ,CAAC,CAAD,CAAR,CAAYE,EAAZ,IAAgBiD,OAAO,CAACjD,EAA3B,EACAD,WAAW,CAAC,CAAC,GAAGuD,UAAJ,CAAD,CAAX,CADA,KAGAvD,WAAW,CAAC,CAAC;AAACC,gBAAAA,EAAE,EAAC;AAAJ,eAAD,CAAD,CAAX;AACA;;AACJmD,YAAAA,OAAO;AACN,WAZS,EAYP,IAZO,CAAV;AAaH,SAdD;AAFE,OAJd;AAuBI,MAAA,YAAY,EAAE;AACVO,QAAAA,kBAAkB,EAAE,CAACC,QAAD,EAAWC,QAAX,EAAqBC,OAArB,EAA8BC,SAA9B,KAA4C;AAC9D,iBAAO,IAAIZ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC1B,YAAAA,OAAO,CAACC,GAAR,CAAY,eAAekC,OAAO,CAAChD,OAAnC;AAECgD,YAAAA,OAAO,CAACE,QAAR,GAAiBJ,QAAjB;AACDE,YAAAA,OAAO,CAACvB,MAAR,GAAeuB,OAAO,CAAC5C,eAAR,GAAwB4C,OAAO,CAACE,QAA/C;AACAV,YAAAA,UAAU,CAACF,OAAD,EAAU,IAAV,CAAV;AACD,WANM,CAAP;AAOD;AATS;AAvBlB;AAAA;AAAA;AAAA;AAAA,YA1CJ,eA6EI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEV,sBAAjB;AAAyC,MAAA,OAAO,EAAC,WAAjD;AAA6D,MAAA,IAAI,EAAC,OAAlE;AAA0E,MAAA,gBAAgB,MAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7EJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiFH,CA9KD;;GAAMhD,c;UAmB6CF,O;;;KAnB7CE,c;AAgLN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport useForm from '../useForm/useForm'\r\nimport MaterialTable from 'material-table'\r\n\r\nconst AReq_FormItems=({items,Rvalues})=>{\r\n    const [lineas, setLineas] = useState([{}])\r\n\r\n    //const [items, setItems] = useState([{}])\r\n\r\n    const [ReqItems,setReqItems]=useState([{id:null}])\r\n\r\n    \r\n    const [state, setState] = useState({\r\n        columns: [\r\n            { title: 'id', field: 'id_item', editable: 'never' },\r\n            { title: 'Item', field: 'nombre' ,editable: 'never'},\r\n            { title: 'Cantidad', field: 'cantidad_solicitada',type: 'numeric'},\r\n            { title: 'Precio', field: 'precio_estimado' ,type: 'numeric',editable: 'never'},\r\n        ],\r\n        data: []\r\n    })\r\n    \r\n    const proxy='Requisicion';\r\n    const { handleChange, handleSubmit, values } = useForm ({ \r\n        id: '',\r\n        id_item:'',\r\n        nombre: '',\r\n        descripcion: '',\r\n        unidad_medida:'',\r\n        precio_unitario:'',\r\n    }, proxy);\r\n\r\n    \r\n    const fetchLineas = () => {\r\n        fetch('http://localhost:5000/lineas_suministro')\r\n            .then(res => res.json())\r\n            .then(result => setLineas(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchLineas()\r\n        //fetchInstituciones()\r\n    }, [])\r\n    \r\n    const check=()=>{\r\n       var aux=false \r\n       ReqItems.map((item,i)=>{\r\n           if(item.id==values.id){\r\n              aux=true\r\n            \r\n           }     \r\n       })\r\n        \r\n       return aux;\r\n    }\r\n\r\n    const cargar=()=>{\r\n     \r\n        items.map((item,i)=>{\r\n            if(values.id==item.id){\r\n           \r\n                if(ReqItems[0].id==null){\r\n                        setReqItems([{id:i,id_linea:item.id_linea,id_item:item.id,nombre:item.nombre,cantidad_solicitada:1,precio_estimado:item.precio_unitario,precio:item.precio_unitario}])\r\n                }\r\n                else if(!check() && values.id_linea==ReqItems[0].id_linea){\r\n                    setReqItems(ReqItems.concat([{id_requisicion:Rvalues.id,id:i,id_linea:item.id_linea,id_item:item.id,nombre:item.nombre,cantidad_solicitada:1,precio_estimado:item.precio_unitario,precio:item.precio_unitario}]))\r\n                \r\n                    }\r\n          \r\n            }\r\n        })\r\n \r\n    }\r\n    const fetchCargarRequisicion=()=>{\r\n        console.log('VALORES: ',Rvalues.id)\r\n        console.log('LISTA DE ITMES: ',ReqItems)\r\n        fetch(`http://localhost:5000/requisiciones`, {\r\n            method: 'POST',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify(Rvalues)\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message))\r\n       ReqItems.map((item,i)=>{\r\n        fetch(`http://localhost:5000/detalle_requisicion`, {\r\n            method: 'POST',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify(ReqItems[i])\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message)) \r\n       }) \r\n          \r\n    }\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <FormControl  className=\"form-trabajador\">\r\n                        <FormControl>\r\n                            <InputLabel id=\"dependencias-label\">Linea de Suministro</InputLabel>\r\n                            <Select\r\n                                labelId=\"dependencias-label\"\r\n                                id=\"dependencias\"\r\n                                value={values.id_linea}\r\n                                name=\"id_linea\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleChange}\r\n                            >\r\n                                {lineas.map((linea, i) => (\r\n                                    <MenuItem value={linea.id} key={i}>\r\n                                        {linea.descripcion}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <FormControl>\r\n                            <InputLabel id=\"dependencias-label\">Items</InputLabel>\r\n                            <Select\r\n                                labelId=\"dependencias-label\"\r\n                                id=\"dependencias\"\r\n                                value={values.id}\r\n                                name=\"id\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleChange}\r\n                            >\r\n                                {items.map((item, i) => (\r\n                                    <MenuItem value={item.id} key={i}>\r\n                                        {item.nombre}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <Button onClick={cargar} variant=\"contained\" size=\"small\" disableElevation>Añadir Item</Button>     \r\n\r\n                </FormControl>\r\n            </form>\r\n            <MaterialTable\r\n                title=\"Items\"\r\n                columns={state.columns}\r\n                data={ReqItems}\r\n                editable={{\r\n                    onRowDelete: oldData =>\r\n                        new Promise((resolve, reject) => {\r\n                            setTimeout(() => {\r\n                               if(ReqItems[0].id!=null){ \r\n                                const dataDelete = [...ReqItems];\r\n                                const index = oldData.tableData.id;\r\n                                console.log(oldData.id)\r\n                                dataDelete.splice(index, 1);\r\n                                if(ReqItems[0].id!=oldData.id)\r\n                                setReqItems([...dataDelete]);\r\n                                else\r\n                                setReqItems([{id:null}])  \r\n                               }  \r\n                            resolve()\r\n                            }, 1000)\r\n                        }),\r\n                    }}\r\n         \r\n                cellEditable={{\r\n                    onCellEditApproved: (newValue, oldValue, rowData, columnDef) => {\r\n                      return new Promise((resolve, reject) => {\r\n                        console.log('newValue: ' + rowData.id_item);\r\n                          \r\n                         rowData.cantidad=newValue\r\n                        rowData.precio=rowData.precio_unitario*rowData.cantidad\r\n                        setTimeout(resolve, 1000);\r\n                      });\r\n                    }\r\n                  }}\r\n            />\r\n            <Button onClick={fetchCargarRequisicion} variant=\"contained\" size=\"small\" disableElevation>CARGAR REQUISICION</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AReq_FormItems "]},"metadata":{},"sourceType":"module"}