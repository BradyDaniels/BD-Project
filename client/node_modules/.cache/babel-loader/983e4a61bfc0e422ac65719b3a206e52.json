{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dell Vostro\\\\Documents\\\\Universidad\\\\Clases-M7\\\\Base de datos-De nuevo unu\\\\Proyecto\\\\App\\\\Bddrip\\\\client\\\\src\\\\components\\\\Respuestas\\\\RespuestasForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport useForm from '../useForm/useForm';\nimport MaterialTable from 'material-table'; // id, precio_total, formato_pago, tipo_moneda, rif, id_cotizacion\n\nconst RespuestasForm = () => {\n  _s();\n\n  const [proveedores, setProveedores] = useState([{}]);\n  const [cotizaciones, setCotizaciones] = useState([{}]);\n  const [precioTotal, setPrecioTotal] = useState([{}]);\n  const [DetalleRequisicion, setDetalleRequisicion] = useState([{}]);\n  const [reqID, setreqID] = useState([{\n    id: -1\n  }]);\n  const [toggle, setToggle] = useState(false);\n  const [state, setState] = useState({\n    columns: [{\n      title: 'ID',\n      field: 'id',\n      editable: 'never'\n    }, {\n      title: 'Cantidad Solicitada',\n      field: 'cantidad_solicitada'\n    }, {\n      title: 'Precio Estimado',\n      field: 'precio_estimado'\n    }, {\n      title: 'ID Item',\n      field: 'id_item'\n    }],\n    data: []\n  });\n  const proxy = 'respuestas';\n  const {\n    handleChange,\n    handleSubmit,\n    values\n  } = useForm({\n    id: '',\n    precio_total: '',\n    formato_pago: '',\n    tipo_moneda: '',\n    rif: '',\n    id_cotizacion: ''\n  }, proxy);\n\n  const toggleSelect = ({\n    target\n  }) => setToggle(target.value == \"\" ? true : false);\n\n  const fetchRequisiciones = () => {\n    const GetRequisiciones = fetch(`http://localhost:5000/requisicion_cotizacion_c/${values.id_cotizacion}`, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => setreqID(result)).catch(err => console.log(err.message));\n  };\n\n  const fetchProveedores = () => {\n    const GetProveedores = fetch(`http://localhost:5000/proveedor_cotizacion_p/${values.id_cotizacion}`, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => setProveedores(result)).catch(err => console.log(err.message));\n  };\n\n  const fetchCotizaciones = () => {\n    fetch('http://localhost:5000/cotizaciones').then(res => res.json()).then(result => setCotizaciones(result)).catch(err => console.log(err.message));\n  };\n\n  const fetchPrecioTotal = () => {\n    //Bueno aqui toca poner que llame con el id\n    fetch('http://localhost:5000/precio_total/').then(res => res.json()).then(result => setPrecioTotal(result)).catch(err => console.log(err.message));\n  }; //obtener todas las DetalleRequisicion\n\n\n  const fetchDetalleRequisicion = () => {\n    reqID.map((requiID, i) => {\n      if (reqID[i].id_requisicion == -1) {\n        const GetDetalleRequisicion = fetch(`http://localhost:5000/detalle_requisicion/${reqID[i].id_requisicion}`, {\n          method: 'GET',\n          headers: {\n            'Content-type': 'application/json'\n          }\n        }).then(res => res.json()).then(result => setDetalleRequisicion(result)).catch(err => console.log(err.message));\n      } else {\n        const GetDetalleRequisicion = fetch(`http://localhost:5000/detalle_requisicion/${reqID[i].id_requisicion}`, {\n          method: 'GET',\n          headers: {\n            'Content-type': 'application/json'\n          }\n        }).then(res => res.json()).then(result => setDetalleRequisicion(DetalleRequisicion.concat(result))).catch(err => console.log(err.message));\n      }\n    });\n    console.log(DetalleRequisicion);\n  }; //eliminar una Detalle Requisicion\n\n\n  const deleteDetalleRequisicion = id => {\n    console.log(id);\n    fetch(`http://localhost:5000/detalle_requisicion/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => console.log(result)).catch(err => console.log(err.message));\n  }; //actualizar una Detalle Requisicion\n\n\n  const updateDetalleRequisicion = detalleRequisicion => {\n    console.log(detalleRequisicion);\n    const {\n      id,\n      cantidad_solicitada,\n      precio_estimado,\n      id_requisicion,\n      id_item\n    } = detalleRequisicion;\n    const updateDR = fetch(`http://localhost:5000/detalle_requisicion/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        id,\n        cantidad_solicitada,\n        precio_estimado,\n        id_requisicion,\n        id_item\n      })\n    }).then(res => res.json()).then(result => console.log(result)).catch(err => console.log(err.message));\n    console.log(updateDR);\n  };\n\n  const fetchProCotiza = () => {\n    fetchRequisiciones();\n    fetchProveedores();\n    fetchDetalleRequisicion();\n  };\n\n  useEffect(() => {\n    fetchProveedores();\n    fetchCotizaciones();\n    fetchPrecioTotal();\n    fetchDetalleRequisicion();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: \"form-trabajador\",\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"cotizacion-label\",\n            children: \"Cotizacion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"cotizacion-label\",\n            id: \"cotizaciones\",\n            value: values.id_cotizacion,\n            name: \"id_cotizacion\",\n            onChange: handleChange,\n            onBlur: handleChange,\n            children: cotizaciones.map((cotizaciones, i) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: cotizaciones.id,\n              onClick: fetchProCotiza,\n              children: cotizaciones.id\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"proveedor-label\",\n            children: \"Proveedor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"proveedor-label\",\n            id: \"proveedores\",\n            value: values.rif,\n            name: \"rif\",\n            onChange: handleChange,\n            onBlur: handleChange,\n            children: proveedores.map((proveedores, i) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: proveedores.rif,\n              children: proveedores.razon_social\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-trabajador-1\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            className: \"text-field\",\n            size: \"small\",\n            label: \"ID Respuesta\",\n            name: \"id\",\n            variant: \"outlined\",\n            value: values.id,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"text-field\",\n            size: \"small\",\n            label: \"Precio Total\",\n            name: \"precio_total\",\n            variant: \"outlined\" // Se quito el ConChange\n            ,\n            value: values.precio_total\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            \"aria-label\": \"Tipo de Moneda\",\n            name: \"tipo_moneda\",\n            value: values.tipo_moneda,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              onClick: toggleSelect,\n              value: \"bolivares\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 97\n              }, this),\n              label: \"Bolivares\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              onClick: toggleSelect,\n              value: \"divisas\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 95\n              }, this),\n              label: \"Divisas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          \"aria-label\": \"Formato de Pago\",\n          name: \"formato_pago\",\n          value: values.formato_pago,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            onClick: toggleSelect,\n            value: \"contado\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 91\n            }, this),\n            label: \"Contado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            onClick: toggleSelect,\n            value: \"credito\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 91\n            }, this),\n            label: \"Credito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          size: \"small\",\n          disableElevation: true,\n          children: \"Registrar Repuesta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"Detalles de Requisicion\",\n      columns: state.columns,\n      data: DetalleRequisicion,\n      options: {\n        filtering: true\n      },\n      editable: {\n        onRowUpdate: (newData, oldData) => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n\n            if (oldData) {\n              setState(prevState => {\n                const data = [...prevState.data];\n                data[data.indexOf(oldData)] = newData;\n                updateDetalleRequisicion(newData); //AQUI SE ACTUALIZA EL CAMPO\n\n                console.log(newData);\n                return { ...prevState,\n                  data\n                };\n              });\n            }\n          }, 600);\n        }),\n        onRowDelete: oldData => new Promise(resolve => {\n          deleteDetalleRequisicion(oldData.id); //AQUI SE DELETEA LA ESPECIALIDAD\n\n          console.log(oldData.id);\n          setTimeout(() => {\n            resolve();\n            setState(prevState => {\n              const data = [...prevState.data];\n              data.splice(data.indexOf(oldData), 1);\n              return { ...prevState,\n                data\n              };\n            });\n          }, 600);\n        })\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RespuestasForm, \"UlovouRZekk9/24olwU3IwYLI+w=\", false, function () {\n  return [useForm];\n});\n\n_c = RespuestasForm;\nexport default RespuestasForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RespuestasForm\");","map":{"version":3,"sources":["C:/Users/Dell Vostro/Documents/Universidad/Clases-M7/Base de datos-De nuevo unu/Proyecto/App/Bddrip/client/src/components/Respuestas/RespuestasForm.js"],"names":["React","useState","useEffect","Button","TextField","FormControl","RadioGroup","Radio","FormControlLabel","InputLabel","Select","MenuItem","useForm","MaterialTable","RespuestasForm","proveedores","setProveedores","cotizaciones","setCotizaciones","precioTotal","setPrecioTotal","DetalleRequisicion","setDetalleRequisicion","reqID","setreqID","id","toggle","setToggle","state","setState","columns","title","field","editable","data","proxy","handleChange","handleSubmit","values","precio_total","formato_pago","tipo_moneda","rif","id_cotizacion","toggleSelect","target","value","fetchRequisiciones","GetRequisiciones","fetch","method","headers","then","res","json","result","catch","err","console","log","message","fetchProveedores","GetProveedores","fetchCotizaciones","fetchPrecioTotal","fetchDetalleRequisicion","map","requiID","i","id_requisicion","GetDetalleRequisicion","concat","deleteDetalleRequisicion","updateDetalleRequisicion","detalleRequisicion","cantidad_solicitada","precio_estimado","id_item","updateDR","body","JSON","stringify","fetchProCotiza","razon_social","filtering","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","prevState","indexOf","onRowDelete","splice"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,aAAP,MAA0B,gBAA1B,C,CAEA;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA9C;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAhD;AACA,QAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA9C;AAEA,QAAM,CAACoB,kBAAD,EAAqBC,qBAArB,IAA8CrB,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA5D;AAEA,QAAM,CAACsB,KAAD,EAAOC,QAAP,IAAiBvB,QAAQ,CAAC,CAAC;AAACwB,IAAAA,EAAE,EAAC,CAAC;AAAL,GAAD,CAAD,CAA/B;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB1B,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAM,CAAE2B,KAAF,EAASC,QAAT,IAAsB5B,QAAQ,CAAC;AACjC6B,IAAAA,OAAO,EAAE,CACL;AAACC,MAAAA,KAAK,EAAE,IAAR;AAAcC,MAAAA,KAAK,EAAE,IAArB;AAA2BC,MAAAA,QAAQ,EAAE;AAArC,KADK,EAEL;AAACF,MAAAA,KAAK,EAAE,qBAAR;AAA+BC,MAAAA,KAAK,EAAE;AAAtC,KAFK,EAGL;AAACD,MAAAA,KAAK,EAAE,iBAAR;AAA2BC,MAAAA,KAAK,EAAE;AAAlC,KAHK,EAIL;AAACD,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAJK,CADwB;AAOjCE,IAAAA,IAAI,EAAE;AAP2B,GAAD,CAApC;AAUA,QAAMC,KAAK,GAAG,YAAd;AACA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,YAAhB;AAA8BC,IAAAA;AAA9B,MAAyC1B,OAAO,CAAC;AACnDa,IAAAA,EAAE,EAAE,EAD+C;AAEnDc,IAAAA,YAAY,EAAE,EAFqC;AAGnDC,IAAAA,YAAY,EAAE,EAHqC;AAInDC,IAAAA,WAAW,EAAE,EAJsC;AAKnDC,IAAAA,GAAG,EAAE,EAL8C;AAMnDC,IAAAA,aAAa,EAAE;AANoC,GAAD,EAOnDR,KAPmD,CAAtD;;AAWA,QAAMS,YAAY,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgBlB,SAAS,CAACkB,MAAM,CAACC,KAAP,IAAgB,EAAhB,GAAqB,IAArB,GAA4B,KAA7B,CAA9C;;AAEA,QAAMC,kBAAkB,GAAC,MAAI;AACzB,UAAMC,gBAAgB,GAACC,KAAK,CAAE,kDAAiDX,MAAM,CAACK,aAAc,EAAxE,EAA2E;AACnGO,MAAAA,MAAM,EAAE,KAD2F;AAEnGC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAF0F,KAA3E,CAAL,CAIlBC,IAJkB,CAIbC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJM,EAKlBF,IALkB,CAKbG,MAAM,IAAI/B,QAAQ,CAAC+B,MAAD,CALL,EAMlBC,KANkB,CAMZC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CANK,CAAvB;AAOH,GARD;;AAUA,QAAMC,gBAAgB,GAAG,MAAM;AAC3B,UAAMC,cAAc,GAACb,KAAK,CAAE,gDAA+CX,MAAM,CAACK,aAAc,EAAtE,EAAyE;AAC9FO,MAAAA,MAAM,EAAE,KADsF;AAE9FC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAFqF,KAAzE,CAAL,CAIfC,IAJe,CAIVC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJG,EAKfF,IALe,CAKVG,MAAM,IAAIvC,cAAc,CAACuC,MAAD,CALd,EAMfC,KANe,CAMTC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CANE,CAArB;AAOH,GARD;;AAUA,QAAMG,iBAAiB,GAAG,MAAM;AAC5Bd,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACKG,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,MAAM,IAAIrC,eAAe,CAACqC,MAAD,CAFnC,EAGKC,KAHL,CAGWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CAHlB;AAIH,GALD;;AAMA,QAAMI,gBAAgB,GAAG,MAAM;AAAE;AAC7Bf,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACKG,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,MAAM,IAAInC,cAAc,CAACmC,MAAD,CAFlC,EAGKC,KAHL,CAGWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CAHlB;AAIH,GALD,CA7DyB,CAmEzB;;;AACA,QAAMK,uBAAuB,GAAG,MAAM;AAEnC1C,IAAAA,KAAK,CAAC2C,GAAN,CAAU,CAACC,OAAD,EAASC,CAAT,KAAa;AACnB,UAAG7C,KAAK,CAAC6C,CAAD,CAAL,CAASC,cAAT,IAAyB,CAAC,CAA7B,EAA+B;AAC1B,cAAMC,qBAAqB,GAACrB,KAAK,CAAE,6CAA4C1B,KAAK,CAAC6C,CAAD,CAAL,CAASC,cAAe,EAAtE,EAAyE;AACtGnB,UAAAA,MAAM,EAAE,KAD8F;AAEtGC,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB;AAF6F,SAAzE,CAAL,CAIvBC,IAJuB,CAIlBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJW,EAKvBF,IALuB,CAKlBG,MAAM,IAAIjC,qBAAqB,CAACiC,MAAD,CALb,EAMvBC,KANuB,CAMjBC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CANU,CAA5B;AAOH,OARF,MASK;AAEA,cAAMU,qBAAqB,GAACrB,KAAK,CAAE,6CAA4C1B,KAAK,CAAC6C,CAAD,CAAL,CAASC,cAAe,EAAtE,EAAyE;AACtGnB,UAAAA,MAAM,EAAE,KAD8F;AAEtGC,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB;AAF6F,SAAzE,CAAL,CAIvBC,IAJuB,CAIlBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJW,EAKvBF,IALuB,CAKlBG,MAAM,IAAIjC,qBAAqB,CAACD,kBAAkB,CAACkD,MAAnB,CAA0BhB,MAA1B,CAAD,CALb,EAMvBC,KANuB,CAMjBC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CANU,CAA5B;AAOH;AACL,KApBD;AAqBAF,IAAAA,OAAO,CAACC,GAAR,CAAYtC,kBAAZ;AACF,GAxBD,CApEyB,CA8FzB;;;AACA,QAAMmD,wBAAwB,GAAI/C,EAAD,IAAQ;AACrCiC,IAAAA,OAAO,CAACC,GAAR,CAAYlC,EAAZ;AACAwB,IAAAA,KAAK,CAAE,6CAA4CxB,EAAG,EAAjD,EAAoD;AACrDyB,MAAAA,MAAM,EAAE,QAD6C;AAErDC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAF4C,KAApD,CAAL,CAIKC,IAJL,CAIUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJjB,EAKKF,IALL,CAKUG,MAAM,IAAIG,OAAO,CAACC,GAAR,CAAYJ,MAAZ,CALpB,EAMKC,KANL,CAMWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CANlB;AAOH,GATD,CA/FyB,CA0GzB;;;AACA,QAAMa,wBAAwB,GAAIC,kBAAD,IAAwB;AACrDhB,IAAAA,OAAO,CAACC,GAAR,CAAYe,kBAAZ;AACA,UAAM;AAAEjD,MAAAA,EAAF;AAAMkD,MAAAA,mBAAN;AAA2BC,MAAAA,eAA3B;AAA4CP,MAAAA,cAA5C;AAA4DQ,MAAAA;AAA5D,QAAwEH,kBAA9E;AACA,UAAMI,QAAQ,GAAG7B,KAAK,CAAE,6CAA4CxB,EAAG,EAAjD,EAAoD;AACtEyB,MAAAA,MAAM,EAAE,KAD8D;AAEtEC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAF6D;AAGtE4B,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAExD,QAAAA,EAAF;AAAMkD,QAAAA,mBAAN;AAA2BC,QAAAA,eAA3B;AAA4CP,QAAAA,cAA5C;AAA4DQ,QAAAA;AAA5D,OAAf;AAHgE,KAApD,CAAL,CAKZzB,IALY,CAKPC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALA,EAMZF,IANY,CAMPG,MAAM,IAAIG,OAAO,CAACC,GAAR,CAAYJ,MAAZ,CANH,EAOZC,KAPY,CAONC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CAPD,CAAjB;AAQAF,IAAAA,OAAO,CAACC,GAAR,CAAYmB,QAAZ;AACH,GAZD;;AAcA,QAAMI,cAAc,GAAC,MAAI;AACrBnC,IAAAA,kBAAkB;AAClBc,IAAAA,gBAAgB;AAChBI,IAAAA,uBAAuB;AAC1B,GAJD;;AAMA/D,EAAAA,SAAS,CAAC,MAAM;AACZ2D,IAAAA,gBAAgB;AAChBE,IAAAA,iBAAiB;AACjBC,IAAAA,gBAAgB;AAChBC,IAAAA,uBAAuB;AAC1B,GALQ,EAKN,EALM,CAAT;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAE5B,YAAhB;AAAA,6BAEI,QAAC,WAAD;AAAa,QAAA,SAAS,EAAC,iBAAvB;AAAA,gCACA,QAAC,WAAD;AAAA,kCACQ,QAAC,UAAD;AAAY,YAAA,EAAE,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADR,eAEQ,QAAC,MAAD;AACI,YAAA,OAAO,EAAC,kBADZ;AAEI,YAAA,EAAE,EAAC,cAFP;AAGI,YAAA,KAAK,EAAEC,MAAM,CAACK,aAHlB;AAII,YAAA,IAAI,EAAC,eAJT;AAKI,YAAA,QAAQ,EAAEP,YALd;AAMI,YAAA,MAAM,EAAEA,YANZ;AAAA,sBAQKnB,YAAY,CAACiD,GAAb,CAAiB,CAACjD,YAAD,EAAemD,CAAf,kBACd,QAAC,QAAD;AAAU,cAAA,KAAK,EAAEnD,YAAY,CAACQ,EAA9B;AAA0C,cAAA,OAAO,EAAEyD,cAAnD;AAAA,wBACKjE,YAAY,CAACQ;AADlB,eAAuC2C,CAAvC;AAAA;AAAA;AAAA;AAAA,oBADH;AARL;AAAA;AAAA;AAAA;AAAA,kBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAmBI,QAAC,WAAD;AAAA,kCACI,QAAC,UAAD;AAAY,YAAA,EAAE,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AACI,YAAA,OAAO,EAAC,iBADZ;AAEI,YAAA,EAAE,EAAC,aAFP;AAGI,YAAA,KAAK,EAAE9B,MAAM,CAACI,GAHlB;AAII,YAAA,IAAI,EAAC,KAJT;AAKI,YAAA,QAAQ,EAAEN,YALd;AAMI,YAAA,MAAM,EAAEA,YANZ;AAAA,sBAQKrB,WAAW,CAACmD,GAAZ,CAAgB,CAACnD,WAAD,EAAcqD,CAAd,kBACb,QAAC,QAAD;AAAU,cAAA,KAAK,EAAErD,WAAW,CAAC2B,GAA7B;AAAA,wBACK3B,WAAW,CAACoE;AADjB,eAAuCf,CAAvC;AAAA;AAAA;AAAA;AAAA,oBADH;AARL;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eAoCI;AAAA;AAAA;AAAA;AAAA,gBApCJ,eAqCI;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,kCACI,QAAC,SAAD;AACI,YAAA,SAAS,EAAC,YADd;AAEI,YAAA,IAAI,EAAC,OAFT;AAGI,YAAA,KAAK,EAAC,cAHV;AAII,YAAA,IAAI,EAAC,IAJT;AAKI,YAAA,OAAO,EAAC,UALZ;AAMI,YAAA,KAAK,EAAE9B,MAAM,CAACb,EANlB;AAOI,YAAA,QAAQ,EAAEW;AAPd;AAAA;AAAA;AAAA;AAAA,kBADJ,eASI,QAAC,SAAD;AACI,YAAA,SAAS,EAAC,YADd;AAEI,YAAA,IAAI,EAAC,OAFT;AAGI,YAAA,KAAK,EAAC,cAHV;AAII,YAAA,IAAI,EAAC,cAJT;AAKI,YAAA,OAAO,EAAC,UALZ,CAMI;AANJ;AAOI,YAAA,KAAK,EAAEE,MAAM,CAACC;AAPlB;AAAA;AAAA;AAAA;AAAA,kBATJ,eAiBQ;AAAA;AAAA;AAAA;AAAA,kBAjBR,eAmBI,QAAC,UAAD;AAAY,0BAAW,gBAAvB;AAAwC,YAAA,IAAI,EAAC,aAA7C;AAA2D,YAAA,KAAK,EAAED,MAAM,CAACG,WAAzE;AAAsF,YAAA,QAAQ,EAAEL,YAAhG;AAAA,oCACI,QAAC,gBAAD;AAAkB,cAAA,OAAO,EAAEQ,YAA3B;AAAyC,cAAA,KAAK,EAAC,WAA/C;AAA2D,cAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,sBAApE;AAA+E,cAAA,KAAK,EAAC;AAArF;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,gBAAD;AAAkB,cAAA,OAAO,EAAEA,YAA3B;AAAyC,cAAA,KAAK,EAAC,SAA/C;AAAyD,cAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,sBAAlE;AAA6E,cAAA,KAAK,EAAC;AAAnF;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBArCJ,eA8DI;AAAA;AAAA;AAAA;AAAA,gBA9DJ,eA+DI,QAAC,UAAD;AAAY,wBAAW,iBAAvB;AAAyC,UAAA,IAAI,EAAC,cAA9C;AAA6D,UAAA,KAAK,EAAEN,MAAM,CAACE,YAA3E;AAAyF,UAAA,QAAQ,EAAEJ,YAAnG;AAAA,kCACI,QAAC,gBAAD;AAAkB,YAAA,OAAO,EAAEQ,YAA3B;AAAyC,YAAA,KAAK,EAAC,SAA/C;AAAyD,YAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,oBAAlE;AAA6E,YAAA,KAAK,EAAC;AAAnF;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,gBAAD;AAAkB,YAAA,OAAO,EAAEA,YAA3B;AAAyC,YAAA,KAAK,EAAC,SAA/C;AAAyD,YAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,oBAAlE;AAA6E,YAAA,KAAK,EAAC;AAAnF;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/DJ,eAmEI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAC,WAA9B;AAA0C,UAAA,IAAI,EAAC,OAA/C;AAAuD,UAAA,gBAAgB,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADJ,eA2EA,QAAC,aAAD;AACI,MAAA,KAAK,EAAC,yBADV;AAEI,MAAA,OAAO,EAAEhB,KAAK,CAACE,OAFnB;AAGI,MAAA,IAAI,EAAET,kBAHV;AAII,MAAA,OAAO,EAAE;AACL+D,QAAAA,SAAS,EAAE;AADN,OAJb;AAOI,MAAA,QAAQ,EAAE;AACNC,QAAAA,WAAW,EAAE,CAACC,OAAD,EAAUC,OAAV,KACT,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACrBC,UAAAA,UAAU,CAAC,MAAM;AACbD,YAAAA,OAAO;;AACP,gBAAIF,OAAJ,EAAa;AACT1D,cAAAA,QAAQ,CAAE8D,SAAD,IAAe;AACpB,sBAAMzD,IAAI,GAAG,CAAC,GAAGyD,SAAS,CAACzD,IAAd,CAAb;AACAA,gBAAAA,IAAI,CAACA,IAAI,CAAC0D,OAAL,CAAaL,OAAb,CAAD,CAAJ,GAA8BD,OAA9B;AACAb,gBAAAA,wBAAwB,CAACa,OAAD,CAAxB,CAHoB,CAGc;;AAClC5B,gBAAAA,OAAO,CAACC,GAAR,CAAY2B,OAAZ;AACA,uBAAO,EAAE,GAAGK,SAAL;AAAgBzD,kBAAAA;AAAhB,iBAAP;AACH,eANO,CAAR;AAOH;AACJ,WAXS,EAWP,GAXO,CAAV;AAYH,SAbD,CAFE;AAgBN2D,QAAAA,WAAW,EAAGN,OAAD,IACT,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACrBjB,UAAAA,wBAAwB,CAACe,OAAO,CAAC9D,EAAT,CAAxB,CADqB,CACgB;;AACrCiC,UAAAA,OAAO,CAACC,GAAR,CAAY4B,OAAO,CAAC9D,EAApB;AACAiE,UAAAA,UAAU,CAAC,MAAM;AACbD,YAAAA,OAAO;AACP5D,YAAAA,QAAQ,CAAE8D,SAAD,IAAe;AACpB,oBAAMzD,IAAI,GAAG,CAAC,GAAGyD,SAAS,CAACzD,IAAd,CAAb;AACAA,cAAAA,IAAI,CAAC4D,MAAL,CAAY5D,IAAI,CAAC0D,OAAL,CAAaL,OAAb,CAAZ,EAAmC,CAAnC;AACA,qBAAO,EAAE,GAAGI,SAAL;AAAgBzD,gBAAAA;AAAhB,eAAP;AACH,aAJO,CAAR;AAKH,WAPS,EAOP,GAPO,CAAV;AAQH,SAXD;AAjBE;AAPd;AAAA;AAAA;AAAA;AAAA,YA3EA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuHH,CA7PD;;GAAMpB,c;UAsB6CF,O;;;KAtB7CE,c;AA+PN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport useForm from '../useForm/useForm'\r\nimport MaterialTable from 'material-table'\r\n\r\n// id, precio_total, formato_pago, tipo_moneda, rif, id_cotizacion\r\n\r\nconst RespuestasForm = () => {\r\n    const [proveedores, setProveedores] = useState([{}])\r\n    const [cotizaciones, setCotizaciones] = useState([{}])\r\n    const [precioTotal, setPrecioTotal] = useState([{}])\r\n    \r\n    const [DetalleRequisicion, setDetalleRequisicion] = useState([{}]);\r\n    \r\n    const [reqID,setreqID]=useState([{id:-1}]);\r\n    \r\n    const [toggle, setToggle] = useState(false)\r\n\r\n    const [ state, setState ] = useState({\r\n        columns: [\r\n            {title: 'ID', field: 'id', editable: 'never'},\r\n            {title: 'Cantidad Solicitada', field: 'cantidad_solicitada'},\r\n            {title: 'Precio Estimado', field: 'precio_estimado'},\r\n            {title: 'ID Item', field: 'id_item'},\r\n        ],\r\n        data: []\r\n    })\r\n    \r\n    const proxy = 'respuestas'\r\n    const { handleChange, handleSubmit, values } = useForm({\r\n        id: '',\r\n        precio_total: '',\r\n        formato_pago: '',\r\n        tipo_moneda: '',\r\n        rif: '',\r\n        id_cotizacion: '',\r\n    }, proxy)\r\n\r\n    \r\n\r\n    const toggleSelect = ({ target }) => setToggle(target.value == \"\" ? true : false)\r\n\r\n    const fetchRequisiciones=()=>{\r\n        const GetRequisiciones=fetch(`http://localhost:5000/requisicion_cotizacion_c/${values.id_cotizacion}`, {\r\n            method: 'GET',\r\n            headers: { 'Content-type': 'application/json' }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => setreqID(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    const fetchProveedores = () => {\r\n        const GetProveedores=fetch(`http://localhost:5000/proveedor_cotizacion_p/${values.id_cotizacion}`, {\r\n             method: 'GET',\r\n             headers: { 'Content-type': 'application/json' }\r\n         })\r\n             .then(res => res.json())\r\n             .then(result => setProveedores(result))\r\n             .catch(err => console.log(err.message))\r\n    }\r\n\r\n    const fetchCotizaciones = () => {\r\n        fetch('http://localhost:5000/cotizaciones')\r\n            .then(res => res.json())\r\n            .then(result => setCotizaciones(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n    const fetchPrecioTotal = () => { //Bueno aqui toca poner que llame con el id\r\n        fetch('http://localhost:5000/precio_total/')\r\n            .then(res => res.json())\r\n            .then(result => setPrecioTotal(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n    //obtener todas las DetalleRequisicion\r\n    const fetchDetalleRequisicion = () => {\r\n\r\n       reqID.map((requiID,i)=>{\r\n           if(reqID[i].id_requisicion==-1){\r\n                const GetDetalleRequisicion=fetch(`http://localhost:5000/detalle_requisicion/${reqID[i].id_requisicion}`, {\r\n                    method: 'GET',\r\n                    headers: { 'Content-type': 'application/json' }\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(result => setDetalleRequisicion(result))\r\n                    .catch(err => console.log(err.message))\r\n            }    \r\n            else{\r\n                \r\n                const GetDetalleRequisicion=fetch(`http://localhost:5000/detalle_requisicion/${reqID[i].id_requisicion}`, {\r\n                    method: 'GET',\r\n                    headers: { 'Content-type': 'application/json' }\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(result => setDetalleRequisicion(DetalleRequisicion.concat(result)))\r\n                    .catch(err => console.log(err.message))\r\n            }\r\n       }) \r\n       console.log(DetalleRequisicion)\r\n    }\r\n\r\n    //eliminar una Detalle Requisicion\r\n    const deleteDetalleRequisicion = (id) => {\r\n        console.log(id)\r\n        fetch(`http://localhost:5000/detalle_requisicion/${id}`, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-type': 'application/json' }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    //actualizar una Detalle Requisicion\r\n    const updateDetalleRequisicion = (detalleRequisicion) => {\r\n        console.log(detalleRequisicion)\r\n        const { id, cantidad_solicitada, precio_estimado, id_requisicion, id_item } = detalleRequisicion;\r\n        const updateDR = fetch(`http://localhost:5000/detalle_requisicion/${id}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify({ id, cantidad_solicitada, precio_estimado, id_requisicion, id_item })\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message))\r\n        console.log(updateDR)\r\n    }\r\n\r\n    const fetchProCotiza=()=>{\r\n        fetchRequisiciones()\r\n        fetchProveedores()\r\n        fetchDetalleRequisicion()\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchProveedores()\r\n        fetchCotizaciones()\r\n        fetchPrecioTotal()\r\n        fetchDetalleRequisicion();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form onSubmit={handleSubmit}>\r\n                \r\n                <FormControl className=\"form-trabajador\">  \r\n                <FormControl>\r\n                        <InputLabel id=\"cotizacion-label\">Cotizacion</InputLabel>\r\n                        <Select\r\n                            labelId=\"cotizacion-label\"\r\n                            id=\"cotizaciones\"\r\n                            value={values.id_cotizacion}\r\n                            name=\"id_cotizacion\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                        >\r\n                            {cotizaciones.map((cotizaciones, i) => (\r\n                                <MenuItem value={cotizaciones.id} key={i} onClick={fetchProCotiza}>\r\n                                    {cotizaciones.id}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    \r\n                    <FormControl>\r\n                        <InputLabel id=\"proveedor-label\">Proveedor</InputLabel>\r\n                        <Select\r\n                            labelId=\"proveedor-label\"\r\n                            id=\"proveedores\"\r\n                            value={values.rif}\r\n                            name=\"rif\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                        >\r\n                            {proveedores.map((proveedores, i) => (\r\n                                <MenuItem value={proveedores.rif} key={i}>\r\n                                    {proveedores.razon_social}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <br></br>\r\n                    <div className=\"form-trabajador-1\">\r\n                        <TextField\r\n                            className=\"text-field\"\r\n                            size=\"small\"\r\n                            label=\"ID Respuesta\"\r\n                            name=\"id\"\r\n                            variant=\"outlined\"\r\n                            value={values.id}\r\n                            onChange={handleChange} />\r\n                        <TextField\r\n                            className=\"text-field\"\r\n                            size=\"small\"\r\n                            label=\"Precio Total\"\r\n                            name=\"precio_total\"\r\n                            variant=\"outlined\"\r\n                            // Se quito el ConChange\r\n                            value={values.precio_total} />\r\n                            <br></br>\r\n                            \r\n                        <RadioGroup aria-label=\"Tipo de Moneda\" name=\"tipo_moneda\" value={values.tipo_moneda} onChange={handleChange}>\r\n                            <FormControlLabel onClick={toggleSelect} value=\"bolivares\" control={<Radio />} label=\"Bolivares\" />\r\n                            <FormControlLabel onClick={toggleSelect} value=\"divisas\" control={<Radio />} label=\"Divisas\" />\r\n                        </RadioGroup>\r\n                    </div>\r\n                    \r\n                    <br></br>\r\n                    <RadioGroup aria-label=\"Formato de Pago\" name=\"formato_pago\" value={values.formato_pago} onChange={handleChange}>\r\n                        <FormControlLabel onClick={toggleSelect} value=\"contado\" control={<Radio />} label=\"Contado\" />\r\n                        <FormControlLabel onClick={toggleSelect} value=\"credito\" control={<Radio />} label=\"Credito\" />\r\n                    </RadioGroup>\r\n                    <Button type=\"submit\" variant=\"contained\" size=\"small\" disableElevation>Registrar Repuesta</Button>\r\n                </FormControl>\r\n                \r\n            </form>\r\n            \r\n        <MaterialTable\r\n            title=\"Detalles de Requisicion\"\r\n            columns={state.columns}\r\n            data={DetalleRequisicion}\r\n            options={{\r\n                filtering: true\r\n              }}\r\n            editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                    new Promise((resolve) => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            if (oldData) {\r\n                                setState((prevState) => {\r\n                                    const data = [...prevState.data];\r\n                                    data[data.indexOf(oldData)] = newData;\r\n                                    updateDetalleRequisicion(newData);//AQUI SE ACTUALIZA EL CAMPO\r\n                                    console.log(newData);\r\n                                    return { ...prevState, data };\r\n                                });\r\n                            }\r\n                        }, 600);\r\n                    }),\r\n                onRowDelete: (oldData) =>\r\n                    new Promise((resolve) => {\r\n                        deleteDetalleRequisicion(oldData.id);//AQUI SE DELETEA LA ESPECIALIDAD\r\n                        console.log(oldData.id);\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            setState((prevState) => {\r\n                                const data = [...prevState.data];\r\n                                data.splice(data.indexOf(oldData), 1);\r\n                                return { ...prevState, data };\r\n                            });\r\n                        }, 600);\r\n                    }),\r\n            }}\r\n        />\r\n            \r\n        </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default RespuestasForm"]},"metadata":{},"sourceType":"module"}