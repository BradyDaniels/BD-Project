[{"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\index.js":"1","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\App.js":"3","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Trabajadores\\Trabajadores.js":"4","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Dependencia\\Dependencia.js":"5","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Proveedores\\Proveedores.js":"6","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\LineaSuministro\\Linea.js":"7","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Item\\Item.js":"8","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\DetalleRequisicion\\DetalleRequisicion.js":"9","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\LineaProveedor\\LineaProveedor.js":"10","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\DetalleCompra\\DetalleCompra.js":"11","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\ProveedorCotizacion\\ProveedorCotizacion.js":"12","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\OrdenCompra\\OrdenCompra.js":"13","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Cotizacion\\Cotizaciones.js":"14","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\RequisicionCotizacion\\RequisicionCotizacion.js":"15","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\OrdenRespuesta\\OrdenRespuesta.js":"16","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Anexo_Requisicion\\Anexo_Requisicion.js":"17","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Sidebar\\Sidebar.js":"18","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\ProveedorOrden\\ProveedorOrden.js":"19","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Respuestas\\Respuestas.js":"20","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Trabajadores\\TrabajadoresTable.js":"21","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Trabajadores\\TrabajadoresForm.js":"22","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\LineaSuministro\\LineaForm.js":"23","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\DetalleCompra\\DetalleCompraTable.js":"24","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Dependencia\\DependenciasForm.js":"25","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Dependencia\\DependenciasTable.js":"26","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Proveedores\\ProveedoresTable.js":"27","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\ProveedorCotizacion\\ProveedorCotizacionTable.js":"28","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\DetalleRequisicion\\DetalleRequisicionTable.js":"29","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Item\\ItemForm.js":"30","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Item\\ItemTable.js":"31","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Proveedores\\ProveedoresForm.js":"32","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\LineaSuministro\\LineaTable.js":"33","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Cotizacion\\CotizacionesTable.js":"34","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Anexo_Requisicion\\AReq_FormHeader.js":"35","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\OrdenCompra\\OrdenCompraTable.js":"36","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\OrdenRespuesta\\OrdenRespuestaTable.js":"37","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\LineaProveedor\\LineaProveedorForm.js":"38","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\RequisicionCotizacion\\RequisicionCotizacionTable.js":"39","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Anexo_Requisicion\\AReq_FormItems.js":"40","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Cotizacion\\CDetalleReqTable.js":"41","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\LineaProveedor\\LineaProveedorTable.js":"42","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\ProveedorOrden\\ProveedorOrdenTable.js":"43","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Respuestas\\RespuestasForm.js":"44","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Respuestas\\RespuestasTable.js":"45","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Cotizacion\\CotizacionesForm.js":"46","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Proveedores\\Proveedores_Linea\\ProLineaTable.js":"47","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\useForm\\useForm.js":"48","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\OrdenCompra\\OrdenCompraForm.js":"49"},{"size":281,"mtime":1612013958941,"results":"50","hashOfConfig":"51"},{"size":375,"mtime":1611598274833,"results":"52","hashOfConfig":"51"},{"size":3108,"mtime":1612390573415,"results":"53","hashOfConfig":"51"},{"size":550,"mtime":1611943976611,"results":"54","hashOfConfig":"51"},{"size":550,"mtime":1611943976607,"results":"55","hashOfConfig":"51"},{"size":544,"mtime":1612011936549,"results":"56","hashOfConfig":"51"},{"size":496,"mtime":1612011936545,"results":"57","hashOfConfig":"51"},{"size":486,"mtime":1612011936536,"results":"58","hashOfConfig":"51"},{"size":619,"mtime":1612106408881,"results":"59","hashOfConfig":"51"},{"size":569,"mtime":1612021216021,"results":"60","hashOfConfig":"51"},{"size":574,"mtime":1612106400254,"results":"61","hashOfConfig":"51"},{"size":626,"mtime":1612110742644,"results":"62","hashOfConfig":"51"},{"size":557,"mtime":1612496459758,"results":"63","hashOfConfig":"51"},{"size":609,"mtime":1612382040570,"results":"64","hashOfConfig":"51"},{"size":642,"mtime":1612111440477,"results":"65","hashOfConfig":"51"},{"size":575,"mtime":1612107940973,"results":"66","hashOfConfig":"51"},{"size":578,"mtime":1612271528841,"results":"67","hashOfConfig":"51"},{"size":2631,"mtime":1612390642648,"results":"68","hashOfConfig":"51"},{"size":583,"mtime":1612111239071,"results":"69","hashOfConfig":"51"},{"size":550,"mtime":1612491287354,"results":"70","hashOfConfig":"51"},{"size":3876,"mtime":1612102198456,"results":"71","hashOfConfig":"51"},{"size":6448,"mtime":1612013203485,"results":"72","hashOfConfig":"51"},{"size":1649,"mtime":1612011936545,"results":"73","hashOfConfig":"51"},{"size":4524,"mtime":1612105370504,"results":"74","hashOfConfig":"51"},{"size":2857,"mtime":1611943976608,"results":"75","hashOfConfig":"51"},{"size":3886,"mtime":1612103300055,"results":"76","hashOfConfig":"51"},{"size":4389,"mtime":1612064593506,"results":"77","hashOfConfig":"51"},{"size":4039,"mtime":1612110700561,"results":"78","hashOfConfig":"51"},{"size":4254,"mtime":1612105960427,"results":"79","hashOfConfig":"51"},{"size":4731,"mtime":1612015867822,"results":"80","hashOfConfig":"51"},{"size":3827,"mtime":1612102127366,"results":"81","hashOfConfig":"51"},{"size":2742,"mtime":1612061682237,"results":"82","hashOfConfig":"51"},{"size":3721,"mtime":1612102160133,"results":"83","hashOfConfig":"51"},{"size":4090,"mtime":1612103890588,"results":"84","hashOfConfig":"51"},{"size":10469,"mtime":1612316042618,"results":"85","hashOfConfig":"51"},{"size":4489,"mtime":1612107467196,"results":"86","hashOfConfig":"51"},{"size":3892,"mtime":1612108611987,"results":"87","hashOfConfig":"51"},{"size":3835,"mtime":1612026004848,"results":"88","hashOfConfig":"51"},{"size":4115,"mtime":1612111810447,"results":"89","hashOfConfig":"51"},{"size":7838,"mtime":1612319808150,"results":"90","hashOfConfig":"51"},{"size":4183,"mtime":1612382139194,"results":"91","hashOfConfig":"51"},{"size":3811,"mtime":1612102146401,"results":"92","hashOfConfig":"51"},{"size":3901,"mtime":1612111279340,"results":"93","hashOfConfig":"51"},{"size":9875,"mtime":1612494044456,"results":"94","hashOfConfig":"51"},{"size":4064,"mtime":1612489625128,"results":"95","hashOfConfig":"51"},{"size":11402,"mtime":1612488390832,"results":"96","hashOfConfig":"51"},{"size":1110,"mtime":1612061682248,"results":"97","hashOfConfig":"51"},{"size":969,"mtime":1612271528849,"results":"98","hashOfConfig":"51"},{"size":15769,"mtime":1612661356648,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},"103rb6u",{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"103"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"103"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"103"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"103"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"103"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"103"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"103"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"103"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"103"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"103"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"103"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"103"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"103"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\index.js",["214"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n",["215","216"],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\App.js",["217","218","219","220"],"import React, { Fragment, useEffect, useState } from 'react';\r\n//import './App.css';\r\n\r\nimport { BrowserRouter as Router, Switch, Link, Route } from 'react-router-dom';\r\n\r\n//Components\r\n import Trabajadores from \"./components/Trabajadores/Trabajadores\"\r\n import Dependencias from \"./components/Dependencia/Dependencia\"\r\n import Proveedores from \"./components/Proveedores/Proveedores\"\r\n import Lineas from \"./components/LineaSuministro/Linea\"\r\n import Items from \"./components/Item/Item\"\r\n import LineaProveedor from \"./components/LineaProveedor/LineaProveedor\"\r\n import Requisicion from \"./components/Anexo_Requisicion/Anexo_Requisicion\"\r\n// import Lineas from \"./components/LineadeSuministro/LineaDeSuministro\"\r\n// import Proveedores from \"./components/Proveedor/Proveedor\"\r\n import Cotizaciones from \"./components/Cotizacion/Cotizaciones\"\r\n import DetalleCompra from \"./components/DetalleCompra/DetalleCompra\"\r\n import DetalleRequisicion from \"./components/DetalleRequisicion/DetalleRequisicion\"\r\n import OrdenCompra from \"./components/OrdenCompra/OrdenCompra\"\r\n import OrdenRespuesta from \"./components/OrdenRespuesta/OrdenRespuesta\"\r\n import ProveedorCotizacion from \"./components/ProveedorCotizacion/ProveedorCotizacion\"\r\n import ProveedorOrden from \"./components/ProveedorOrden/ProveedorOrden\"\r\n import RequisicionCotizacion from \"./components/RequisicionCotizacion/RequisicionCotizacion\"\r\n import Respuestas from \"./components/Respuestas/Respuestas\"\r\n import Sidebar from \"./components/Sidebar/Sidebar\"\r\n\r\n const App = () => {\r\n   return(\r\n        <Router>\r\n          <div className= 'app-wrapper'>\r\n            <Sidebar/>\r\n            <Switch>\r\n                <Route path=\"/trabajadores\" component ={Trabajadores}/>\r\n                <Route path=\"/dependencias\" component ={Dependencias}/>\r\n                <Route path=\"/proveedores\" component ={Proveedores}/>\r\n                <Route path=\"/lineas_suministro\" component ={Lineas}/>\r\n                <Route path=\"/items\" component ={Items}/>\r\n                <Route path=\"/linea_proveedor\" component ={LineaProveedor}/>\r\n                <Route path=\"/Requisicion\" component ={Requisicion}/>\r\n                {/* <Route path=\"/lineas_suministro\" component ={Lineas}/>\r\n                <Route path=\"/proveedores\" component ={Proveedores}/> */}\r\n                <Route path=\"/cotizaciones\" component ={Cotizaciones}/>\r\n                <Route path=\"/detalle_compra\" component ={DetalleCompra}/>\r\n                <Route path=\"/detalle_requisicion\" component ={DetalleRequisicion}/>\r\n                <Route path=\"/orden_compra\" component ={OrdenCompra}/>\r\n                <Route path=\"/orden_respuesta\" component ={OrdenRespuesta}/>\r\n                <Route path=\"/proveedor_cotizacion\" component ={ProveedorCotizacion}/>\r\n                <Route path=\"/proveedor_orden\" component ={ProveedorOrden}/>\r\n                <Route path=\"/requisicion_cotizacion\" component ={RequisicionCotizacion}/>\r\n                <Route path=\"/respuestas\" component ={Respuestas}/>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n   );\r\n };\r\n\r\nexport default App;\r\n","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Trabajadores\\Trabajadores.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Dependencia\\Dependencia.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Proveedores\\Proveedores.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\LineaSuministro\\Linea.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Item\\Item.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\DetalleRequisicion\\DetalleRequisicion.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\LineaProveedor\\LineaProveedor.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\DetalleCompra\\DetalleCompra.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\ProveedorCotizacion\\ProveedorCotizacion.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\OrdenCompra\\OrdenCompra.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Cotizacion\\Cotizaciones.js",["221","222"],"import React from 'react'\r\nimport CotizacionesTable from './CotizacionesTable'\r\nimport CotizacionesForm from './CotizacionesForm'\r\nimport CDetalleReqTable from './CDetalleReqTable'\r\n\r\nconst Cotizaciones = () => {\r\n\r\n    return (\r\n        <div className=\"content-container\">\r\n            <h1 className=\"content-title\">Cotizaciones</h1>\r\n            <div className=\"form-container\">\r\n                <CotizacionesForm />\r\n            </div>\r\n            {/* <div className=\"table-container\">\r\n                <CDetalleReqTable />\r\n            </div>  */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cotizaciones","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\RequisicionCotizacion\\RequisicionCotizacion.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\OrdenRespuesta\\OrdenRespuesta.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Anexo_Requisicion\\Anexo_Requisicion.js",["223","224"],"import React from 'react';\r\nimport Areq_FormHeader from './AReq_FormHeader';\r\nimport Areq_FormItem from './AReq_FormItems';\r\n\r\nconst Items=()=>{\r\n    return (\r\n        <div className=\"content-container\">\r\n            <h1 className=\"content-title\">UNIVERSIDAD CATÓLICA ANDRES BELLO-GUAYANA</h1>\r\n            <h1 className=\"content-title\">Requisicion de Compras</h1>\r\n            <div className=\"form-container\">\r\n                <Areq_FormHeader />\r\n              \r\n                {/*<Areq_FormItem/>*/}\r\n            </div>\r\n        </div>\r\n    )\r\n \r\n}\r\n\r\nexport default Items;","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\ProveedorOrden\\ProveedorOrden.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Respuestas\\Respuestas.js",["225"],"import React from 'react';\r\nimport RespuestasItemsTable from './RespuestasTable'\r\nimport RespuestasForm from './RespuestasForm'\r\n\r\nconst Respuestas = () => {\r\n    return (\r\n        <div className=\"content-container\">\r\n            <h1 className=\"content-title\">Respuestas</h1>\r\n            <div className=\"form-container\">\r\n                <RespuestasForm />\r\n            </div>\r\n            {/* <div className=\"table-container\">\r\n                <RespuestasItemsTable />\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Respuestas;","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Trabajadores\\TrabajadoresTable.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Trabajadores\\TrabajadoresForm.js",["226","227"],"import React, { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport useForm from '../useForm/useForm'\r\n\r\n// cedula, id_dependencia, nombre, tipo \r\nconst TrabajadoresForm = () => {\r\n    const [dependencias, setDependencias] = useState([{}])\r\n    //const [instituciones, setInstituciones] = useState([{}])\r\n    const [toggle, setToggle] = useState(false)\r\n    const proxy = 'trabajadores'\r\n    const { handleChange, handleSubmit, values } = useForm({\r\n        cedula: '',\r\n        id_dependencia: '',\r\n        nombre: '',\r\n        tipo: '',\r\n    }, proxy)\r\n\r\n    const toggleSelect = ({ target }) => setToggle(target.value == \"\" ? true : false)\r\n\r\n    const fetchDependencias = () => {\r\n        fetch('http://localhost:5000/dependencias')\r\n            .then(res => res.json())\r\n            .then(result => setDependencias(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    // const fetchInstituciones = () => {\r\n    //     fetch('http://tesis-manager.herokuapp.com/instituciones')\r\n    //         .then(res => res.json())\r\n    //         .then(result => setInstituciones(result))\r\n    //         .catch(err => console.log(err.message))\r\n    // }\r\n\r\n    useEffect(() => {\r\n        fetchDependencias()\r\n        //fetchInstituciones()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <FormControl className=\"form-trabajador\">\r\n                    <div className=\"form-trabajador-1\">\r\n                        <TextField\r\n                            className=\"text-field\"\r\n                            size=\"small\"\r\n                            label=\"Cedula\"\r\n                            name=\"cedula\"\r\n                            variant=\"outlined\"\r\n                            value={values.cedula}\r\n                            onChange={handleChange} />\r\n                        <TextField\r\n                            className=\"text-field\"\r\n                            size=\"small\"\r\n                            label=\"Nombre\"\r\n                            name=\"nombre\"\r\n                            variant=\"outlined\"\r\n                            value={values.nombre}\r\n                            onChange={handleChange} />\r\n                        {/* <TextField\r\n                            className=\"text-field\"\r\n                            size=\"small\"\r\n                            label=\"Direccion\"\r\n                            name=\"direccion_p\"\r\n                            variant=\"outlined\"\r\n                            value={values.direccion_p}\r\n                            onChange={handleChange} /> */}\r\n                    </div>\r\n                    {/* <TextField\r\n                        className=\"text-field\"\r\n                        size=\"small\"\r\n                        label=\"Correo\"\r\n                        name=\"correo_p\"\r\n                        variant=\"outlined\"\r\n                        value={values.correo_p}\r\n                        onChange={handleChange} />\r\n                    <TextField\r\n                        className=\"text-field\"\r\n                        size=\"small\"\r\n                        label=\"Telefono\"\r\n                        name=\"telefono_p\"\r\n                        variant=\"outlined\"\r\n                        value={values.telefono_p}\r\n                        onChange={handleChange} /> */}\r\n                    <RadioGroup aria-label=\"tipo\" name=\"tipo\" value={values.tipo} onChange={handleChange}>\r\n                        <FormControlLabel onClick={toggleSelect} value=\"J\" control={<Radio />} label=\"Jefe de Unidad\" />\r\n                        <FormControlLabel onClick={toggleSelect} value=\"D\" control={<Radio />} label=\"Director\" />\r\n                        <FormControlLabel onClick={toggleSelect} value=\"\" control={<Radio />} label=\"N/A\" />\r\n                    </RadioGroup>\r\n                    <FormControl>\r\n                        <InputLabel id=\"dependencias-label\">Dependencias</InputLabel>\r\n                        <Select\r\n                            labelId=\"dependencias-label\"\r\n                            id=\"dependencias\"\r\n                            value={values.id_dependencia}\r\n                            name=\"id_dependencia\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                        >\r\n                            {dependencias.map((dependencia, i) => (\r\n                                <MenuItem value={dependencia.id} key={i}>\r\n                                    {dependencia.nombre}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    {/* {toggle ?\r\n                        <FormControl className=\"instituciones\">\r\n                            <InputLabel id=\"instituciones-label\">Instituciones</InputLabel>\r\n                            <Select\r\n                                labelId=\"instituciones-label\"\r\n                                id=\"instituciones\"\r\n                                value={values.cod_inst}\r\n                                name=\"cod_inst\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleChange}\r\n                            >\r\n                                {instituciones.map((institucion, i) => (\r\n                                    <MenuItem value={institucion.cod_inst} key={i}>\r\n                                        {institucion.nombre_inst}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        : <div></div>\r\n                    } */}\r\n                    <Button type=\"submit\" variant=\"contained\" size=\"small\" disableElevation>Añadir Trabajador</Button>\r\n                </FormControl>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrabajadoresForm","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\LineaSuministro\\LineaForm.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\DetalleCompra\\DetalleCompraTable.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Dependencia\\DependenciasForm.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Dependencia\\DependenciasTable.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Proveedores\\ProveedoresTable.js",["228"],"import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport ProLineaTable from './Proveedores_Linea/ProLineaTable';\r\nimport Button from '@material-ui/core/Button'\r\n\r\n\r\n\r\nconst ProveedoresTable=()=>{\r\n   //estado del Componente\r\n    \r\n   const [proveedores, setProveedores] = useState([{}]);\r\n\r\n   //estado para los titulos de las columnas de la tabla\r\n   //NOTA: EL CAMPO FIELD DEBE SER EL MISMO NOMBRE QUE TIENE EL ATRIBUTO EN LA BD, SINO SE ROMPE\r\n   //TODAS LAS VARIABLES DE LAS TABLAS DEBEN TENER EL MISMO NOMBRE QUE EN LA BD\r\n   const [ state, setState ] = useState({\r\n       columns: [\r\n           {title: 'id', field: 'rif', editable: 'never'},\r\n           {title: 'Razon Social', field: 'razon_social'},\r\n           {title: 'Telefono', field: 'telefono'},\r\n           {title: 'Correo', field: 'correo'},\r\n           {title: 'Direccion', field: 'direccion'},\r\n       ],\r\n       data: []\r\n   })\r\n\r\n   useEffect(() => {\r\n    fetchProveedores()\r\n   }, [])\r\n\r\n   //obtener todas las Dependencias\r\n   const fetchProveedores = () => {\r\n        fetch('http://localhost:5000/proveedores')\r\n            .then(res => res.json())\r\n            .then(result => setProveedores(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    //eliminar una Dependencia\r\n    const deleteProveedor = (id) => {\r\n        console.log(id)\r\n        fetch(`http://localhost:5000/proveedores/${id}`, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-type': 'application/json' }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    //actualizar una Dependencia\r\n    const updateProveedor = (proveedor) => {\r\n        console.log(proveedor)\r\n        const { rif, razon_social, telefono,correo,direccion } = proveedor;\r\n        const updateD = fetch(`http://localhost:5000/proveedores/${rif}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify({ rif, razon_social, telefono,correo,direccion })\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message))\r\n        console.log(updateD)\r\n    }\r\n    \r\n    return(\r\n        <MaterialTable\r\n            title=\"Proveedores\"\r\n            columns={state.columns}\r\n            data={proveedores}\r\n            options={{\r\n                filtering: true\r\n              }}\r\n           detailPanel={[\r\n               {\r\n                tooltip: 'Show Name',\r\n                render: rowData => {\r\n                  return (\r\n                    <ProLineaTable/>\r\n                  )\r\n                }\r\n               }\r\n           ]}\r\n            editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                    new Promise((resolve) => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            if (oldData) {\r\n                                setState((prevState) => {\r\n                                    const data = [...prevState.data];\r\n                                    data[data.indexOf(oldData)] = newData;\r\n                                    updateProveedor(newData);//AQUI SE ACTUALIZA EL CAMPO\r\n                                    console.log(newData);\r\n                                    return { ...prevState, data };\r\n                                });\r\n                            }\r\n                        }, 600);\r\n                    }),\r\n                onRowDelete: (oldData) =>\r\n                    new Promise((resolve) => {\r\n                        deleteProveedor(oldData.rif);//AQUI SE DELETEA LA ESPECIALIDAD\r\n                        console.log(oldData.rif);\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            setState((prevState) => {\r\n                                const data = [...prevState.data];\r\n                                data.splice(data.indexOf(oldData), 1);\r\n                                return { ...prevState, data };\r\n                            });\r\n                        }, 600);\r\n                    }),\r\n            }}\r\n        >\r\n            \r\n        </MaterialTable>\r\n    )\r\n\r\n}\r\n\r\nexport default ProveedoresTable;","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\ProveedorCotizacion\\ProveedorCotizacionTable.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\DetalleRequisicion\\DetalleRequisicionTable.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Item\\ItemForm.js",["229","230","231"],"import React, { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport useForm from '../useForm/useForm'\r\n\r\nconst ItemForm=()=>{\r\n    const [lineas, setLineas] = useState([{}])\r\n    //const [instituciones, setInstituciones] = useState([{}])\r\n    const [toggle, setToggle] = useState(false)\r\n   // se define el nombre del endpoint que se va a utiliar para el POST\r\n   const proxy = 'items'\r\n   const { handleChange, handleSubmit, values } = useForm ({ \r\n       id: '',\r\n       nombre: '',\r\n       descripcion: '',\r\n       unidad_medida:'',\r\n       precio_unitario:'',\r\n       id_linea:''  \r\n   }, proxy);\r\n\r\n   \r\n\r\n    const fetchLineas = () => {\r\n        fetch('http://localhost:5000/lineas_suministro')\r\n            .then(res => res.json())\r\n            .then(result => setLineas(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n     \r\n    useEffect(() => {\r\n        fetchLineas()\r\n        //fetchInstituciones()\r\n    }, [])\r\n\r\n   return(\r\n    <div className=\"form-container\">\r\n        <form onSubmit={handleSubmit}>\r\n            <FormControl className=\"form-trabajador\">\r\n                <div className=\"form-trabajador-1\">\r\n                    <TextField\r\n                        className=\"text-field\"\r\n                        size=\"small\"\r\n                        label=\"ID\"\r\n                        name=\"id\"\r\n                        variant=\"outlined\"\r\n                        value={values.id}\r\n                        onChange={handleChange} />\r\n                    <TextField\r\n                        className=\"text-field\"\r\n                        size=\"small\"\r\n                        label=\"Nombre\"\r\n                        name=\"nombre\"\r\n                        variant=\"outlined\"\r\n                        value={values.nombre}\r\n                        onChange={handleChange} />\r\n                    <TextField\r\n                        className=\"text-field\"\r\n                        size=\"small\"\r\n                        label=\"Nombre Corto\"\r\n                        name=\"nombre_corto\"\r\n                        value={values.nombre_corto}\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange} />\r\n\r\n                    <TextField\r\n                        className=\"text-field\"\r\n                        size=\"small\"\r\n                        label=\"Descripcion\"\r\n                        name=\"descripcion\"\r\n                        variant=\"outlined\"\r\n                        value={values.descripcion}\r\n                        onChange={handleChange} />\r\n                    <TextField\r\n                        className=\"text-field\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        label=\"Unidad de Medida\"\r\n                        name=\"unidad_medida\"\r\n                        value={values.unidad_medida}\r\n                        onChange={handleChange} />\r\n                    <TextField\r\n                        className=\"text-field\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        label=\"Precio Unitario\"\r\n                        name=\"precio_unitario\"\r\n                        value={values.precio_unitario}\r\n                        onChange={handleChange} /> \r\n            \r\n                </div>\r\n                    <FormControl>\r\n                        <InputLabel id=\"dependencias-label\">Lineas de Suministro</InputLabel>\r\n                        <Select\r\n                            labelId=\"dependencias-label\"\r\n                            id=\"dependencias\"\r\n                            value={values.id_linea}\r\n                            name=\"id_linea\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                        >\r\n                            {lineas.map((linea, i) => (\r\n                                <MenuItem value={linea.id} key={i}>\r\n                                    {linea.descripcion}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>                \r\n                \r\n                <Button type=\"submit\" variant=\"contained\" size=\"small\" disableElevation>Añadir Item</Button>\r\n            </FormControl>\r\n        </form>\r\n   </div> \r\n)\r\n\r\n}\r\n\r\nexport default ItemForm;","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Item\\ItemTable.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Proveedores\\ProveedoresForm.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\LineaSuministro\\LineaTable.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Cotizacion\\CotizacionesTable.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Anexo_Requisicion\\AReq_FormHeader.js",["232","233","234","235","236","237","238","239","240","241"],"import React, { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport useForm from '../useForm/useForm'\r\n\r\n\r\nimport Areq_FormItem from './AReq_FormItems';\r\n\r\nconst AReq_FormHeader=()=>{\r\n    const [dependencias, setDependencias] = useState([{}])\r\n    const [lineas, setLineas] = useState([{}])\r\n    const [trabajadores,setTrabajador]=useState([{}])//Director\r\n    const [JefeUnidad,setJefeUnidad]=useState([{}])  \r\n    const [items, setItems] = useState([{}])\r\n  \r\n\r\n    const proxy = 'Requisicion'\r\n    const { handleChange, handleSubmit, values } = useForm ({ \r\n        id: '',\r\n        id_dependencia:'',\r\n        id_linea:'',\r\n        fecha_emision: getLocalDate(),\r\n        cedula_director:'',\r\n        cedula_jefeunidad:'',\r\n        observaciones:'',\r\n        prioridad:'',\r\n\r\n    }, proxy);\r\n\r\n    function getLocalDate() {\r\n        var today = new Date();\r\n        var dd = String(today.getDate()).padStart(2, '0');\r\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        today = mm + '-' + dd + '-' + yyyy;\r\n        return today;\r\n    }\r\n\r\n    const fetchLineaItems=()=>{\r\n        if(values.id_linea==''){ \r\n         fetch('http://localhost:5000/Items')\r\n             .then(res => res.json())\r\n             .then(result => setItems(result))\r\n             .catch(err => console.log(err.message))\r\n          \r\n        }\r\n        else{\r\n         const GetItems=fetch(`http://localhost:5000/Lineaitems/${values.id_linea}`, {\r\n             method: 'GET',\r\n             headers: { 'Content-type': 'application/json' }\r\n         })\r\n             .then(res => res.json())\r\n             .then(result => setItems(result))\r\n             .catch(err => console.log(err.message))\r\n       \r\n          \r\n         \r\n        }\r\n    }   \r\n\r\n    const fetchDependencias = () => {\r\n        fetch('http://localhost:5000/dependencias')\r\n            .then(res => res.json())\r\n            .then(result => setDependencias(result))\r\n            .catch(err => console.log(err.message))\r\n        \r\n            \r\n    }\r\n \r\n    const fetchLineas = () => {\r\n        fetch('http://localhost:5000/lineas_suministro')\r\n            .then(res => res.json())\r\n            .then(result => setLineas(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    const fetchTrabajadores=()=>{\r\n        fetch('http://localhost:5000/Tdirectores')\r\n            .then(res => res.json())\r\n            .then(result => setTrabajador(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n    \r\n    const fetchJefeUnidad=()=>{\r\n       if(values.id_dependencia==''){ \r\n        fetch('http://localhost:5000/TjefeUnidad')\r\n            .then(res => res.json())\r\n            .then(result => setJefeUnidad(result))\r\n            .catch(err => console.log(err.message))\r\n         \r\n       }\r\n       else{\r\n        const GetJU=fetch(`http://localhost:5000/TjefeUnidad/${values.id_dependencia}`, {\r\n            method: 'GET',\r\n            headers: { 'Content-type': 'application/json' }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => setJefeUnidad(result))\r\n            .catch(err => console.log(err.message))\r\n      \r\n         \r\n        \r\n       }\r\n    }\r\n    \r\n    const a=async ()=>{fetchJefeUnidad()\r\n        console.log(require.body)\r\n     }\r\n    useEffect(() => {\r\n        fetchDependencias()\r\n        fetchLineas()\r\n        fetchTrabajadores()\r\n        fetchJefeUnidad()\r\n        //fetchInstituciones()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <FormControl className=\"form-trabajador\">\r\n                    <div className=\"form-trabajador-1\">\r\n                        <TextField\r\n                            className=\"text-field\"\r\n                            size=\"small\"\r\n                            label=\"Nro Requisicion\"\r\n                            name=\"id\"\r\n                            variant=\"outlined\"\r\n                            value={values.id}\r\n                            onChange={handleChange} />\r\n                        <TextField\r\n                            className=\"text-field readonly\"\r\n                            size=\"small\"\r\n                            label=\"Fecha Emision\"\r\n                            name=\"fecha_emision\"\r\n                            variant=\"outlined\"\r\n                            value={getLocalDate()} />\r\n                       \r\n                        \r\n                    </div>\r\n                   \r\n                    <FormControl>\r\n                        <InputLabel id=\"dependencias-label\" >Dependencias</InputLabel>\r\n                        <Select \r\n                           \r\n                           \r\n                            labelId=\"dependencias-label\"\r\n                            id=\"dependencias\"\r\n                            value={values.id_dependencia}\r\n                            name=\"id_dependencia\"\r\n                            onChange={handleChange}\r\n                      \r\n                        >\r\n                            {dependencias.map((dependencia, i) => (\r\n                                <MenuItem value={dependencia.id} key={i}   onClick={fetchJefeUnidad}  >\r\n                                    {dependencia.nombre\r\n                                    }\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    \r\n                    <FormControl>\r\n                        <InputLabel id=\"dependencias-label\">Linea de Suministro</InputLabel>\r\n                        <Select\r\n                            labelId=\"dependencias-label\"\r\n                            id=\"dependencias\"\r\n                            value={values.id_linea}\r\n                            name=\"id_linea\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                        >\r\n                            {lineas.map((linea, i) => (\r\n                                <MenuItem value={linea.id} key={i} onClick={fetchLineaItems}>\r\n                                    {linea.descripcion}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <FormControl>\r\n                        <InputLabel id=\"dependencias-label\">Prioridad</InputLabel>\r\n                        <Select\r\n                            labelId=\"dependencias-label\"\r\n                            id=\"dependencias\"\r\n                            value={values.prioridad}\r\n                            name=\"prioridad\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                        >\r\n                           \r\n                                <MenuItem value={0} key={0}>\r\n                                    Baja\r\n                                </MenuItem>\r\n                                <MenuItem value={1} key={1}>\r\n                                    Media\r\n                                </MenuItem>\r\n                                <MenuItem value={2} key={2}>\r\n                                    Alta\r\n                                </MenuItem>\r\n                         \r\n                        </Select>\r\n                    </FormControl>\r\n                    <br></br> <br></br>\r\n                    <FormControl>\r\n                        <InputLabel id=\"dependencias-label\">Aprobado por</InputLabel>\r\n                        <Select\r\n                            labelId=\"dependencias-label\"\r\n                            id=\"dependencias\"\r\n                            value={values.cedula_director}\r\n                            name=\"cedula_director\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                        >\r\n                            {trabajadores.map((trabajador, i) => (\r\n                                \r\n                                <MenuItem value={trabajador.cedula} key={i} onClick={a}>\r\n                                    {trabajador.nombre}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <InputLabel id=\"dependencias-label\">Autorizado por</InputLabel>\r\n                        <Select\r\n                            labelId=\"dependencias-label\"\r\n                            id=\"dependencias\"\r\n                            value={values.cedula_jefeunidad}\r\n                            name=\"cedula_jefeunidad\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                        >\r\n                            {JefeUnidad.map((Junidad, i) => (\r\n                                <MenuItem value={Junidad.cedula} key={i}>\r\n                                    {Junidad.nombre}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <br></br> <br></br> \r\n                    <FormControl>\r\n                        <div className=\"form-trabajador-1\">\r\n                        <TextField\r\n                            className=\"text-field\"\r\n                            size=\"big\"\r\n                            label=\"Observaciones\"\r\n                            name=\"observaciones\"\r\n                            variant=\"outlined\"\r\n                            value={values.observaciones}\r\n                            onChange={handleChange} />\r\n                        </div>\r\n                    </FormControl>\r\n                </FormControl>\r\n            </form>\r\n             <Areq_FormItem items={items} Rvalues={values}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AReq_FormHeader","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\OrdenCompra\\OrdenCompraTable.js",[],["242","243"],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\OrdenRespuesta\\OrdenRespuestaTable.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\LineaProveedor\\LineaProveedorForm.js",["244","245","246","247","248","249","250","251"],"import React, { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport useForm from '../useForm/useForm'\r\nimport Proveedores from '../Proveedores/Proveedores'\r\n\r\n// id_Linea, rif \r\nconst LineaProveedorForm = () => {\r\n    const [lineas, setLineas] = useState([{}])\r\n    const [proveedores, setProveedores] = useState([{}])\r\n    const [toggle, setToggle] = useState(false)\r\n    const proxy = 'linea_proveedor'\r\n    const { handleChange, handleSubmit, values } = useForm({\r\n        id_linea: '',\r\n        rif: '',\r\n    }, proxy)\r\n\r\n    const toggleSelect = ({ target }) => setToggle(target.value == \"\" ? true : false)\r\n\r\n    const fetchLineas = () => {\r\n        fetch('http://localhost:5000/lineas_suministro')\r\n            .then(res => res.json())\r\n            .then(result => setLineas(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n    const fetchProveedores = () => {\r\n        fetch('http://localhost:5000/proveedores')\r\n            .then(res => res.json())\r\n            .then(result => setProveedores(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchLineas()\r\n        fetchProveedores()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <FormControl className=\"form-trabajador\">\r\n                    <div className=\"form-trabajador-1\">    \r\n                        <InputLabel id=\"Lineas-label\">Linea</InputLabel>\r\n                            <Select\r\n                                labelId=\"lineas-label\"\r\n                                id=\"id_linea\"\r\n                                value={values.id_linea}\r\n                                name=\"id_linea\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleChange}\r\n                                >\r\n                                {lineas.map((linea, i) => (\r\n                                    <MenuItem value={linea.id} key={i}>\r\n                                        {linea.descripcion}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                    </div>\r\n                    <FormControl>\r\n                            \r\n                            <InputLabel id=\"Rif-label\">Proveedor</InputLabel>\r\n                            <Select\r\n                                labelId=\"rif-label\"\r\n                                id=\"razon_social\"\r\n                                value={values.rif}\r\n                                name=\"rif\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleChange}\r\n                                >\r\n                                {proveedores.map((proveedor, i) => (\r\n                                    <MenuItem value={proveedor.rif} key={i}>\r\n                                        {proveedor.razon_social}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    <Button type=\"submit\" variant=\"contained\" size=\"small\" disableElevation>Añadir Linea-Proveedor</Button>\r\n                </FormControl>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineaProveedorForm","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\RequisicionCotizacion\\RequisicionCotizacionTable.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Anexo_Requisicion\\AReq_FormItems.js",["252","253","254","255","256","257","258","259","260","261","262","263","264"],"import React, { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport useForm from '../useForm/useForm'\r\nimport MaterialTable from 'material-table'\r\n\r\nconst AReq_FormItems=({items,Rvalues})=>{\r\n    const [lineas, setLineas] = useState([{}])\r\n\r\n    //const [items, setItems] = useState([{}])\r\n\r\n    const [ReqItems,setReqItems]=useState([{id:null}])\r\n\r\n    \r\n    const [state, setState] = useState({\r\n        columns: [\r\n            { title: 'id', field: 'id_item', editable: 'never' },\r\n            { title: 'Item', field: 'nombre' ,editable: 'never'},\r\n            { title: 'Cantidad', field: 'cantidad_solicitada',type: 'numeric'},\r\n            { title: 'Precio Estimado', field: 'precio_estimado' ,type: 'numeric',editable: 'never'},\r\n        ],\r\n        data: []\r\n    })\r\n    \r\n    const proxy='Requisicion';\r\n    const { handleChange, handleSubmit, values } = useForm ({ \r\n        id: '',\r\n        id_item:'',\r\n        nombre: '',\r\n        descripcion: '',\r\n        unidad_medida:'',\r\n        precio_unitario:'',\r\n    }, proxy);\r\n\r\n    \r\n    const fetchLineas = () => {\r\n        fetch('http://localhost:5000/lineas_suministro')\r\n            .then(res => res.json())\r\n            .then(result => setLineas(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchLineas()\r\n        //fetchInstituciones()\r\n    }, [])\r\n    \r\n    const check=()=>{\r\n       var aux=false \r\n       ReqItems.map((item,i)=>{\r\n           if(item.id==values.id){\r\n              aux=true\r\n             }\r\n             console.log(aux)     \r\n       })\r\n        \r\n       return aux;\r\n    }\r\n\r\n    const cargar=()=>{\r\n     \r\n        items.map((item,i)=>{\r\n            if(values.id==item.id){\r\n           \r\n                if(ReqItems[0].id==null){\r\n                        setReqItems([{id_requisicion:Rvalues.id,id:i,id_linea:item.id_linea,id_item:item.id,nombre:item.nombre,cantidad_solicitada:1,precio_estimado:item.precio_unitario,precio:item.precio_unitario}])\r\n                }\r\n                else if(!check() && Rvalues.id_linea==ReqItems[0].id_linea){\r\n                    setReqItems(ReqItems.concat([{id_requisicion:Rvalues.id,id:i,id_linea:item.id_linea,id_item:item.id,nombre:item.nombre,cantidad_solicitada:1,precio_estimado:item.precio_unitario,precio:item.precio_unitario}]))\r\n                    console.log(\"sexo\")\r\n                    }\r\n          \r\n            }\r\n            console.log(ReqItems)\r\n        })\r\n \r\n    }\r\n    const fetchCargarRequisicion=()=>{\r\n        console.log('VALORES: ',Rvalues.id)\r\n        console.log('LISTA DE ITMES: ',ReqItems[0].id_requisicion)\r\n        fetch(`http://localhost:5000/requisiciones`, {\r\n            method: 'POST',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify(Rvalues)\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message))\r\n       ReqItems.map((item,i)=>{\r\n        fetch(`http://localhost:5000/detalle_requisicion`, {\r\n            method: 'POST',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify(ReqItems[i])\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message)) \r\n       }) \r\n          \r\n    }\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <FormControl  className=\"form-trabajador\">\r\n                        {/* <FormControl>\r\n                            <InputLabel id=\"dependencias-label\">Linea de Suministro</InputLabel>\r\n                            <Select\r\n                                labelId=\"dependencias-label\"\r\n                                id=\"dependencias\"\r\n                                value={values.id_linea}\r\n                                name=\"id_linea\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleChange}\r\n                            >\r\n                                {lineas.map((linea, i) => (\r\n                                    <MenuItem value={linea.id} key={i}>\r\n                                        {linea.descripcion}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl> */}\r\n                        <br></br>\r\n\r\n                        <FormControl>\r\n                            <InputLabel id=\"dependencias-label\">Items</InputLabel>\r\n                            <Select\r\n                                labelId=\"dependencias-label\"\r\n                                id=\"dependencias\"\r\n                                value={values.id}\r\n                                name=\"id\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleChange}\r\n                            >\r\n                                {items.map((item, i) => (\r\n                                    <MenuItem value={item.id} key={i}>\r\n                                        {item.nombre}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <Button onClick={cargar} variant=\"contained\" size=\"small\" disableElevation>Añadir Item</Button>     \r\n\r\n                </FormControl>\r\n            </form>\r\n            <MaterialTable\r\n                title=\"Items\"\r\n                columns={state.columns}\r\n                data={ReqItems}\r\n                editable={{\r\n                    onRowDelete: oldData =>\r\n                        new Promise((resolve, reject) => {\r\n                            setTimeout(() => {\r\n                               if(ReqItems[0].id!=null){ \r\n                                const dataDelete = [...ReqItems];\r\n                                const index = oldData.tableData.id;\r\n                                console.log(oldData.id)\r\n                                dataDelete.splice(index, 1);\r\n                                if(ReqItems[0].id!=oldData.id)\r\n                                setReqItems([...dataDelete]);\r\n                                else\r\n                                setReqItems([{id:null}])  \r\n                               }  \r\n                            resolve()\r\n                            }, 1000)\r\n                        }),\r\n                    }}\r\n         \r\n                cellEditable={{\r\n                    onCellEditApproved: (newValue, oldValue, rowData, columnDef) => {\r\n                      return new Promise((resolve, reject) => {\r\n                        console.log('newValue: ' + rowData.id_item);\r\n                          \r\n                         rowData.cantidad_solicitada=newValue\r\n                        rowData.precio_estimado=rowData.precio*rowData.cantidad_solicitada\r\n                        console.log(ReqItems)\r\n                        setTimeout(resolve, 1000);\r\n                      });\r\n                    }\r\n                  }}\r\n            />\r\n            <Button onClick={fetchCargarRequisicion} variant=\"contained\" size=\"small\" disableElevation>CARGAR REQUISICION</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AReq_FormItems ","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Cotizacion\\CDetalleReqTable.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\LineaProveedor\\LineaProveedorTable.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\ProveedorOrden\\ProveedorOrdenTable.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Respuestas\\RespuestasForm.js",["265","266","267"],"import React, { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport useForm from '../useForm/useForm'\r\nimport MaterialTable from 'material-table'\r\n\r\n// id, precio_total, formato_pago, tipo_moneda, rif, id_cotizacion\r\n\r\nconst RespuestasForm = () => {\r\n    const [proveedores, setProveedores] = useState([{}])\r\n    const [cotizaciones, setCotizaciones] = useState([{}])\r\n    const [precioTotal, setPrecioTotal] = useState([{}])\r\n    \r\n    const [DetalleRequisicion, setDetalleRequisicion] = useState([{}]);\r\n\r\n    \r\n    const [toggle, setToggle] = useState(false)\r\n\r\n    const [ state, setState ] = useState({\r\n        columns: [\r\n            {title: 'ID', field: 'id', editable: 'never'},\r\n            {title: 'Cantidad Solicitada', field: 'cantidad_solicitada'},\r\n            {title: 'Precio Estimado', field: 'precio_estimado'},\r\n            {title: 'ID Item', field: 'id_item'},\r\n        ],\r\n        data: []\r\n    })\r\n    \r\n    const proxy = 'respuestas'\r\n    const { handleChange, handleSubmit, values } = useForm({\r\n        id: '',\r\n        precio_total: '',\r\n        formato_pago: '',\r\n        tipo_moneda: '',\r\n        rif: '',\r\n        id_cotizacion: '',\r\n    }, proxy)\r\n\r\n    \r\n\r\n    const toggleSelect = ({ target }) => setToggle(target.value == \"\" ? true : false)\r\n\r\n    const fetchProveedores = () => {\r\n        fetch('http://localhost:5000/proveedores')\r\n            .then(res => res.json())\r\n            .then(result => setProveedores(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    const fetchCotizaciones = () => {\r\n        fetch('http://localhost:5000/cotizaciones')\r\n            .then(res => res.json())\r\n            .then(result => setCotizaciones(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n    const fetchPrecioTotal = () => { //Bueno aqui toca poner que llame con el id\r\n        fetch('http://localhost:5000/precio_total/')\r\n            .then(res => res.json())\r\n            .then(result => setPrecioTotal(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n    //obtener todas las DetalleRequisicion\r\n    const fetchDetalleRequisicion = () => {\r\n        fetch('http://localhost:5000/detalle_requisicion')\r\n            .then(res => res.json())\r\n            .then(result => setDetalleRequisicion(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    //eliminar una Detalle Requisicion\r\n    const deleteDetalleRequisicion = (id) => {\r\n        console.log(id)\r\n        fetch(`http://localhost:5000/detalle_requisicion/${id}`, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-type': 'application/json' }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    //actualizar una Detalle Requisicion\r\n    const updateDetalleRequisicion = (detalleRequisicion) => {\r\n        console.log(detalleRequisicion)\r\n        const { id, cantidad_solicitada, precio_estimado, id_requisicion, id_item } = detalleRequisicion;\r\n        const updateDR = fetch(`http://localhost:5000/detalle_requisicion/${id}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify({ id, cantidad_solicitada, precio_estimado, id_requisicion, id_item })\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message))\r\n        console.log(updateDR)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchProveedores()\r\n        fetchCotizaciones()\r\n        fetchPrecioTotal()\r\n        fetchDetalleRequisicion();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form onSubmit={handleSubmit}>\r\n                \r\n                <FormControl className=\"form-trabajador\">  \r\n                <FormControl>\r\n                        <InputLabel id=\"cotizacion-label\">Cotizacion</InputLabel>\r\n                        <Select\r\n                            labelId=\"cotizacion-label\"\r\n                            id=\"cotizaciones\"\r\n                            value={values.id_cotizacion}\r\n                            name=\"id_cotizacion\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                        >\r\n                            {cotizaciones.map((cotizaciones, i) => (\r\n                                <MenuItem value={cotizaciones.id} key={i}>\r\n                                    {cotizaciones.id}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    \r\n                    <FormControl>\r\n                        <InputLabel id=\"proveedor-label\">Proveedor</InputLabel>\r\n                        <Select\r\n                            labelId=\"proveedor-label\"\r\n                            id=\"proveedores\"\r\n                            value={values.rif}\r\n                            name=\"rif\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                        >\r\n                            {proveedores.map((proveedores, i) => (\r\n                                <MenuItem value={proveedores.rif} key={i}>\r\n                                    {proveedores.razon_social}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <br></br>\r\n                    <div className=\"form-trabajador-1\">\r\n                        <TextField\r\n                            className=\"text-field\"\r\n                            size=\"small\"\r\n                            label=\"ID Respuesta\"\r\n                            name=\"id\"\r\n                            variant=\"outlined\"\r\n                            value={values.id}\r\n                            onChange={handleChange} />\r\n                        <TextField\r\n                            className=\"text-field\"\r\n                            size=\"small\"\r\n                            label=\"Precio Total\"\r\n                            name=\"precio_total\"\r\n                            variant=\"outlined\"\r\n                            // Se quito el ConChange\r\n                            value={values.precio_total} />\r\n                            <br></br>\r\n                            \r\n                        <RadioGroup aria-label=\"Tipo de Moneda\" name=\"tipo_moneda\" value={values.tipo_moneda} onChange={handleChange}>\r\n                            <FormControlLabel onClick={toggleSelect} value=\"bolivares\" control={<Radio />} label=\"Bolivares\" />\r\n                            <FormControlLabel onClick={toggleSelect} value=\"divisas\" control={<Radio />} label=\"Divisas\" />\r\n                        </RadioGroup>\r\n                    </div>\r\n                    \r\n                    <br></br>\r\n                    <RadioGroup aria-label=\"Formato de Pago\" name=\"formato_pago\" value={values.formato_pago} onChange={handleChange}>\r\n                        <FormControlLabel onClick={toggleSelect} value=\"contado\" control={<Radio />} label=\"Contado\" />\r\n                        <FormControlLabel onClick={toggleSelect} value=\"credito\" control={<Radio />} label=\"Credito\" />\r\n                    </RadioGroup>\r\n                    <Button type=\"submit\" variant=\"contained\" size=\"small\" disableElevation>Registrar Repuesta</Button>\r\n                </FormControl>\r\n                \r\n            </form>\r\n            \r\n        <MaterialTable\r\n            title=\"Detalles de Requisicion\"\r\n            columns={state.columns}\r\n            data={DetalleRequisicion}\r\n            options={{\r\n                filtering: true\r\n              }}\r\n            editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                    new Promise((resolve) => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            if (oldData) {\r\n                                setState((prevState) => {\r\n                                    const data = [...prevState.data];\r\n                                    data[data.indexOf(oldData)] = newData;\r\n                                    updateDetalleRequisicion(newData);//AQUI SE ACTUALIZA EL CAMPO\r\n                                    console.log(newData);\r\n                                    return { ...prevState, data };\r\n                                });\r\n                            }\r\n                        }, 600);\r\n                    }),\r\n                onRowDelete: (oldData) =>\r\n                    new Promise((resolve) => {\r\n                        deleteDetalleRequisicion(oldData.id);//AQUI SE DELETEA LA ESPECIALIDAD\r\n                        console.log(oldData.id);\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            setState((prevState) => {\r\n                                const data = [...prevState.data];\r\n                                data.splice(data.indexOf(oldData), 1);\r\n                                return { ...prevState, data };\r\n                            });\r\n                        }, 600);\r\n                    }),\r\n            }}\r\n        />\r\n            \r\n        </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default RespuestasForm","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Respuestas\\RespuestasTable.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Cotizacion\\CotizacionesForm.js",["268","269","270","271","272","273","274","275","276","277","278","279"],"import React, { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport useForm from '../useForm/useForm'\r\nimport MaterialTable from 'material-table'\r\nimport CDetalleReqTable from './CDetalleReqTable'\r\n\r\n// cedula, id_dependencia, nombre, tipo \r\nconst CotizacionesForm = () => {\r\n\r\n    const [req, setReq] = useState([{}])\r\n    const [linea, setlinea] = useState([{}])\r\n    const [proveedor, setProveedores] = useState([{}])\r\n\r\n    const [DetalleRequisicion, setDetalleRequisicion] = useState([{}]);\r\n\r\n    const [toggle, setToggle] = useState(false)\r\n\r\n    const [ state, setState ] = useState({\r\n        columns: [\r\n            {title: 'Nombre', field: 'nombre', editable: 'never'},\r\n            {title: 'Cantidad Solicitada', field: 'cantidad_solicitada'},\r\n            {title: 'Precio Estimado', field: 'precio_estimado'},\r\n        ],\r\n        data: []\r\n    })\r\n    \r\n    const proxy = 'cotizacion'\r\n    const { handleChange, handleSubmit, values } = useForm({\r\n        id: '',\r\n        id_linea: '',\r\n        fecha_emision: getLocalDate(),\r\n        observaciones: '',\r\n        condiciones_entrega:'',\r\n        id_requisicion: '',\r\n        rif: ''\r\n        //id_cotizacion: ''\r\n    }, proxy)\r\n\r\n\r\n\r\n    const toggleSelect = ({ target }) => setToggle(target.value == \"\" ? true : false)\r\n\r\n    const fetchLineas = () => {\r\n        fetch('http://localhost:5000/lineas_suministro')\r\n            .then(res => res.json())\r\n            .then(result => setlinea(result))\r\n            .catch(err => console.log(err.message))\r\n    }\r\n\r\n    const fetchRequisiciones = () => {\r\n        const GetRequisiciones=fetch(`http://localhost:5000/requisiciones_linea/${values.id_linea}`, {\r\n             method: 'GET',\r\n             headers: { 'Content-type': 'application/json' }\r\n         })\r\n             .then(res => res.json())\r\n             .then(result => setReq(result))\r\n             .catch(err => console.log(err.message))\r\n    }\r\n\r\n    const fetchProveedores = () => {\r\n        fetchRequisiciones()\r\n        const GetProveedores=fetch(`http://localhost:5000/proveedores_linea/${values.id_linea}`, {\r\n             method: 'GET',\r\n             headers: { 'Content-type': 'application/json' }\r\n         })\r\n             .then(res => res.json())\r\n             .then(result =>  setProveedores(result))\r\n             .catch(err => console.log(err.message))\r\n    }\r\n\r\n    const fetchDetalleRequisicion = () => {\r\n        if(values.id_requisicion==''){\r\n        fetch('http://localhost:5000/detalle_requisicion')\r\n            .then(res => res.json())\r\n            .then(result => setDetalleRequisicion(result))\r\n            .catch(err => console.log(err.message))\r\n        }else{\r\n            const GetItems=fetch(`http://localhost:5000/detalle_requisicion_item/${values.id_requisicion}`, {\r\n             method: 'GET',\r\n             headers: { 'Content-type': 'application/json' }\r\n         })\r\n             .then(res => res.json())\r\n             .then(result => setDetalleRequisicion(result))\r\n             .catch(err => console.log(err.message))\r\n        }\r\n\r\n    }\r\n\r\n  \r\n\r\n    function getLocalDate() {\r\n        var today = new Date();\r\n        var dd = String(today.getDate()).padStart(2, '0');\r\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        today = mm + '-' + dd + '-' + yyyy;\r\n        return today;\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchLineas()\r\n        fetchRequisiciones()\r\n        fetchDetalleRequisicion()\r\n        fetchProveedores()\r\n    }, [])\r\n\r\n    const fetchCargarCotizacion=()=>{\r\n        fetch(`http://localhost:5000/cotizaciones`, {\r\n            method: 'POST',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify(values)\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message))\r\n\r\n        fetch(`http://localhost:5000/requisicion_cotizacion`, {\r\n            method: 'POST',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify({id_cotizacion:values.id,id_requisicion:values.id_requisicion})\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message)) \r\n      \r\n        \r\n        fetch(`http://localhost:5000/proveedor_cotizacion`, {\r\n            method: 'POST',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify({id_cotizacion:values.id,rif:values.rif})\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err.message))   \r\n    }\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <FormControl className=\"form-trabajador\">\r\n                    <div className=\"form-trabajador-1\">\r\n                        <TextField\r\n                            className=\"text-field\"\r\n                            size=\"small\"\r\n                            label=\"ID\"\r\n                            name=\"id\"\r\n                            variant=\"outlined\"\r\n                            value={values.id}\r\n                            onChange={handleChange} />\r\n                        <TextField\r\n                            className=\"text-field\"\r\n                            size=\"small\"\r\n                            label=\"Fecha de Emision\"\r\n                            name=\"fecha_emision\"\r\n                            variant=\"outlined\"\r\n                            value={getLocalDate()} />\r\n                    </div>\r\n                    <TextField\r\n                        className=\"text-field\"\r\n                        size=\"small\"\r\n                        label=\"Observaciones\"\r\n                        name=\"observaciones\"\r\n                        variant=\"outlined\"\r\n                        value={values.observaciones}\r\n                        onChange={handleChange} />\r\n                        <TextField\r\n                            className=\"text-field\"\r\n                            size=\"small\"\r\n                            label=\"Condiciones de Entrega\"\r\n                            name=\"condiciones_entrega\"\r\n                            variant=\"outlined\"\r\n                            value={values.condiciones_entrega}\r\n                            onChange={handleChange} />\r\n                   <FormControl>\r\n                        <InputLabel id=\"lineas-label\">Linea</InputLabel>\r\n                        <Select\r\n                            labelId=\"lineas-label\"\r\n                            id=\"linea\"\r\n                            value={values.id_linea}\r\n                            name=\"id_linea\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                        >\r\n                            {linea.map((lineas, i) => (\r\n                                <MenuItem value={lineas.id} key={i} onClick={fetchProveedores}>\r\n                                    {lineas.descripcion}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <InputLabel id=\"lineas-label\">Proveedor</InputLabel>\r\n                        <Select\r\n                            labelId=\"lineas-label\"\r\n                            id=\"proveedor\"\r\n                            value={values.rif}\r\n                            name=\"rif\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                        >\r\n                            {proveedor.map((proveedor, i) => (\r\n                                <MenuItem value={proveedor.rif} key={i}>\r\n                                    {proveedor.razon_social}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <InputLabel id=\"requisicion-label\">Requisicion</InputLabel>\r\n                        <Select\r\n                            labelId=\"requisicion-label\"\r\n                            id=\"requisicion\"\r\n                            value={values.id_requisicion}\r\n                            name=\"id_requisicion\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                        >\r\n                            {req.map((req, i) => (\r\n                                <MenuItem value={req.id} key={i} onClick={fetchDetalleRequisicion}>\r\n                                    {req.id}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <Button variant=\"contained\" size=\"small\" disableElevation onClick={fetchCargarCotizacion}>Añadir Cotizacion</Button>\r\n                </FormControl>\r\n            </form>\r\n            \r\n        <MaterialTable\r\n            title=\"Detalles de Requisicion\"\r\n            columns={state.columns}\r\n            data={DetalleRequisicion}\r\n            options={{\r\n                filtering: true\r\n              }}\r\n            editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                    new Promise((resolve) => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            if (oldData) {\r\n                                setState((prevState) => {\r\n                                    const data = [...prevState.data];\r\n                                    data[data.indexOf(oldData)] = newData;\r\n                                    //updateDetalleRequisicion(newData);//AQUI SE ACTUALIZA EL CAMPO\r\n                                    console.log(newData);\r\n                                    return { ...prevState, data };\r\n                                });\r\n                            }\r\n                        }, 600);\r\n                    }),\r\n                onRowDelete: (oldData) =>\r\n                    new Promise((resolve) => {\r\n                        //deleteDetalleRequisicion(oldData.id);//AQUI SE DELETEA LA ESPECIALIDAD\r\n                        console.log(oldData.id);\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            setState((prevState) => {\r\n                                const data = [...prevState.data];\r\n                                data.splice(data.indexOf(oldData), 1);\r\n                                return { ...prevState, data };\r\n                            });\r\n                        }, 600);\r\n                    }),\r\n            }}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CotizacionesForm","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Proveedores\\Proveedores_Linea\\ProLineaTable.js",["280","281","282"],"import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\nconst ProLineaTable=()=>{\r\n   return(\r\n    <React.Fragment>\r\n        \r\n            <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal\">\r\n            Open modal\r\n            </button>\r\n\r\n\r\n            <div class=\"modal\" id=\"myModal\">\r\n            <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n\r\n                \r\n                <div class=\"modal-header\">\r\n                    <h4 class=\"modal-title\">Modal Heading</h4>\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                </div>\r\n\r\n\r\n                <div class=\"modal-body\">\r\n                    Modal body..\r\n                </div>\r\n\r\n\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                </div>\r\n\r\n                </div>\r\n            </div>\r\n            </div>\r\n    </React.Fragment>\r\n   );\r\n}\r\n\r\nexport default ProLineaTable","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\useForm\\useForm.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\OrdenCompra\\OrdenCompraForm.js",["283","284","285","286","287","288","289","290","291","292","293","294","295","296","297"],{"ruleId":"298","severity":1,"message":"299","line":5,"column":8,"nodeType":"300","messageId":"301","endLine":5,"endColumn":23},{"ruleId":"302","replacedBy":"303"},{"ruleId":"304","replacedBy":"305"},{"ruleId":"298","severity":1,"message":"306","line":1,"column":17,"nodeType":"300","messageId":"301","endLine":1,"endColumn":25},{"ruleId":"298","severity":1,"message":"307","line":1,"column":27,"nodeType":"300","messageId":"301","endLine":1,"endColumn":36},{"ruleId":"298","severity":1,"message":"308","line":1,"column":38,"nodeType":"300","messageId":"301","endLine":1,"endColumn":46},{"ruleId":"298","severity":1,"message":"309","line":4,"column":43,"nodeType":"300","messageId":"301","endLine":4,"endColumn":47},{"ruleId":"298","severity":1,"message":"310","line":2,"column":8,"nodeType":"300","messageId":"301","endLine":2,"endColumn":25},{"ruleId":"298","severity":1,"message":"311","line":4,"column":8,"nodeType":"300","messageId":"301","endLine":4,"endColumn":24},{"ruleId":"298","severity":1,"message":"312","line":3,"column":8,"nodeType":"300","messageId":"301","endLine":3,"endColumn":21},{"ruleId":"313","severity":1,"message":"314","line":11,"column":17,"nodeType":"315","endLine":11,"endColumn":36},{"ruleId":"298","severity":1,"message":"316","line":2,"column":8,"nodeType":"300","messageId":"301","endLine":2,"endColumn":28},{"ruleId":"298","severity":1,"message":"317","line":17,"column":12,"nodeType":"300","messageId":"301","endLine":17,"endColumn":18},{"ruleId":"318","severity":1,"message":"319","line":26,"column":65,"nodeType":"320","messageId":"321","endLine":26,"endColumn":67},{"ruleId":"298","severity":1,"message":"322","line":4,"column":8,"nodeType":"300","messageId":"301","endLine":4,"endColumn":14},{"ruleId":"298","severity":1,"message":"323","line":5,"column":8,"nodeType":"300","messageId":"301","endLine":5,"endColumn":24},{"ruleId":"298","severity":1,"message":"317","line":14,"column":12,"nodeType":"300","messageId":"301","endLine":14,"endColumn":18},{"ruleId":"298","severity":1,"message":"324","line":14,"column":20,"nodeType":"300","messageId":"301","endLine":14,"endColumn":29},{"ruleId":"298","severity":1,"message":"322","line":2,"column":8,"nodeType":"300","messageId":"301","endLine":2,"endColumn":14},{"ruleId":"298","severity":1,"message":"325","line":5,"column":8,"nodeType":"300","messageId":"301","endLine":5,"endColumn":18},{"ruleId":"298","severity":1,"message":"326","line":6,"column":8,"nodeType":"300","messageId":"301","endLine":6,"endColumn":13},{"ruleId":"298","severity":1,"message":"323","line":7,"column":8,"nodeType":"300","messageId":"301","endLine":7,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":47,"column":27,"nodeType":"320","messageId":"321","endLine":47,"endColumn":29},{"ruleId":"298","severity":1,"message":"327","line":55,"column":16,"nodeType":"300","messageId":"301","endLine":55,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":92,"column":32,"nodeType":"320","messageId":"321","endLine":92,"endColumn":34},{"ruleId":"298","severity":1,"message":"328","line":100,"column":15,"nodeType":"300","messageId":"301","endLine":100,"endColumn":20},{"ruleId":"329","severity":1,"message":"330","line":122,"column":8,"nodeType":"331","endLine":122,"endColumn":10,"suggestions":"332"},{"ruleId":"313","severity":1,"message":"333","line":262,"column":14,"nodeType":"315","endLine":262,"endColumn":61},{"ruleId":"302","replacedBy":"334"},{"ruleId":"304","replacedBy":"335"},{"ruleId":"298","severity":1,"message":"336","line":3,"column":8,"nodeType":"300","messageId":"301","endLine":3,"endColumn":17},{"ruleId":"298","severity":1,"message":"325","line":5,"column":8,"nodeType":"300","messageId":"301","endLine":5,"endColumn":18},{"ruleId":"298","severity":1,"message":"326","line":6,"column":8,"nodeType":"300","messageId":"301","endLine":6,"endColumn":13},{"ruleId":"298","severity":1,"message":"323","line":7,"column":8,"nodeType":"300","messageId":"301","endLine":7,"endColumn":24},{"ruleId":"298","severity":1,"message":"337","line":12,"column":8,"nodeType":"300","messageId":"301","endLine":12,"endColumn":19},{"ruleId":"298","severity":1,"message":"317","line":18,"column":12,"nodeType":"300","messageId":"301","endLine":18,"endColumn":18},{"ruleId":"298","severity":1,"message":"338","line":25,"column":11,"nodeType":"300","messageId":"301","endLine":25,"endColumn":23},{"ruleId":"318","severity":1,"message":"319","line":25,"column":65,"nodeType":"320","messageId":"321","endLine":25,"endColumn":67},{"ruleId":"298","severity":1,"message":"336","line":3,"column":8,"nodeType":"300","messageId":"301","endLine":3,"endColumn":17},{"ruleId":"298","severity":1,"message":"325","line":5,"column":8,"nodeType":"300","messageId":"301","endLine":5,"endColumn":18},{"ruleId":"298","severity":1,"message":"326","line":6,"column":8,"nodeType":"300","messageId":"301","endLine":6,"endColumn":13},{"ruleId":"298","severity":1,"message":"323","line":7,"column":8,"nodeType":"300","messageId":"301","endLine":7,"endColumn":24},{"ruleId":"298","severity":1,"message":"339","line":15,"column":12,"nodeType":"300","messageId":"301","endLine":15,"endColumn":18},{"ruleId":"298","severity":1,"message":"340","line":22,"column":19,"nodeType":"300","messageId":"301","endLine":22,"endColumn":27},{"ruleId":"341","severity":1,"message":"342","line":57,"column":29,"nodeType":"343","messageId":"344","endLine":57,"endColumn":31},{"ruleId":"318","severity":1,"message":"319","line":58,"column":22,"nodeType":"320","messageId":"321","endLine":58,"endColumn":24},{"ruleId":"341","severity":1,"message":"342","line":69,"column":27,"nodeType":"343","messageId":"344","endLine":69,"endColumn":29},{"ruleId":"318","severity":1,"message":"319","line":70,"column":25,"nodeType":"320","messageId":"321","endLine":70,"endColumn":27},{"ruleId":"318","severity":1,"message":"319","line":75,"column":53,"nodeType":"320","messageId":"321","endLine":75,"endColumn":55},{"ruleId":"341","severity":1,"message":"342","line":96,"column":29,"nodeType":"343","messageId":"344","endLine":96,"endColumn":31},{"ruleId":"318","severity":1,"message":"345","line":165,"column":50,"nodeType":"320","messageId":"321","endLine":165,"endColumn":52},{"ruleId":"298","severity":1,"message":"346","line":19,"column":12,"nodeType":"300","messageId":"301","endLine":19,"endColumn":23},{"ruleId":"298","severity":1,"message":"317","line":24,"column":12,"nodeType":"300","messageId":"301","endLine":24,"endColumn":18},{"ruleId":"318","severity":1,"message":"319","line":48,"column":65,"nodeType":"320","messageId":"321","endLine":48,"endColumn":67},{"ruleId":"298","severity":1,"message":"325","line":5,"column":8,"nodeType":"300","messageId":"301","endLine":5,"endColumn":18},{"ruleId":"298","severity":1,"message":"326","line":6,"column":8,"nodeType":"300","messageId":"301","endLine":6,"endColumn":13},{"ruleId":"298","severity":1,"message":"323","line":7,"column":8,"nodeType":"300","messageId":"301","endLine":7,"endColumn":24},{"ruleId":"298","severity":1,"message":"311","line":13,"column":8,"nodeType":"300","messageId":"301","endLine":13,"endColumn":24},{"ruleId":"298","severity":1,"message":"317","line":24,"column":12,"nodeType":"300","messageId":"301","endLine":24,"endColumn":18},{"ruleId":"298","severity":1,"message":"338","line":49,"column":11,"nodeType":"300","messageId":"301","endLine":49,"endColumn":23},{"ruleId":"318","severity":1,"message":"319","line":49,"column":65,"nodeType":"320","messageId":"321","endLine":49,"endColumn":67},{"ruleId":"298","severity":1,"message":"347","line":59,"column":15,"nodeType":"300","messageId":"301","endLine":59,"endColumn":31},{"ruleId":"298","severity":1,"message":"348","line":70,"column":15,"nodeType":"300","messageId":"301","endLine":70,"endColumn":29},{"ruleId":"318","severity":1,"message":"319","line":80,"column":33,"nodeType":"320","messageId":"321","endLine":80,"endColumn":35},{"ruleId":"298","severity":1,"message":"327","line":86,"column":19,"nodeType":"300","messageId":"301","endLine":86,"endColumn":27},{"ruleId":"329","severity":1,"message":"349","line":113,"column":8,"nodeType":"331","endLine":113,"endColumn":10,"suggestions":"350"},{"ruleId":"298","severity":1,"message":"308","line":1,"column":17,"nodeType":"300","messageId":"301","endLine":1,"endColumn":25},{"ruleId":"298","severity":1,"message":"307","line":1,"column":27,"nodeType":"300","messageId":"301","endLine":1,"endColumn":36},{"ruleId":"298","severity":1,"message":"351","line":2,"column":8,"nodeType":"300","messageId":"301","endLine":2,"endColumn":21},{"ruleId":"298","severity":1,"message":"346","line":19,"column":12,"nodeType":"300","messageId":"301","endLine":19,"endColumn":23},{"ruleId":"298","severity":1,"message":"352","line":19,"column":25,"nodeType":"300","messageId":"301","endLine":19,"endColumn":39},{"ruleId":"298","severity":1,"message":"353","line":21,"column":20,"nodeType":"300","messageId":"301","endLine":21,"endColumn":31},{"ruleId":"298","severity":1,"message":"317","line":29,"column":12,"nodeType":"300","messageId":"301","endLine":29,"endColumn":18},{"ruleId":"318","severity":1,"message":"319","line":54,"column":65,"nodeType":"320","messageId":"321","endLine":54,"endColumn":67},{"ruleId":"318","severity":1,"message":"319","line":73,"column":32,"nodeType":"320","messageId":"321","endLine":73,"endColumn":34},{"ruleId":"298","severity":1,"message":"354","line":83,"column":16,"nodeType":"300","messageId":"301","endLine":83,"endColumn":32},{"ruleId":"318","severity":1,"message":"319","line":95,"column":33,"nodeType":"320","messageId":"321","endLine":95,"endColumn":35},{"ruleId":"298","severity":1,"message":"355","line":103,"column":16,"nodeType":"300","messageId":"301","endLine":103,"endColumn":29},{"ruleId":"318","severity":1,"message":"319","line":114,"column":32,"nodeType":"320","messageId":"321","endLine":114,"endColumn":34},{"ruleId":"298","severity":1,"message":"356","line":124,"column":16,"nodeType":"300","messageId":"301","endLine":124,"endColumn":27},{"ruleId":"298","severity":1,"message":"357","line":137,"column":11,"nodeType":"300","messageId":"301","endLine":137,"endColumn":30},{"ruleId":"298","severity":1,"message":"358","line":149,"column":11,"nodeType":"300","messageId":"301","endLine":149,"endColumn":30},{"ruleId":"298","severity":1,"message":"359","line":152,"column":15,"nodeType":"300","messageId":"301","endLine":152,"endColumn":23},{"ruleId":"329","severity":1,"message":"360","line":177,"column":8,"nodeType":"331","endLine":177,"endColumn":10,"suggestions":"361"},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["362"],"no-negated-in-lhs",["363"],"'Fragment' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'CotizacionesTable' is defined but never used.","'CDetalleReqTable' is defined but never used.","'Areq_FormItem' is defined but never used.","react/jsx-pascal-case","Imported JSX component Areq_FormHeader must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'RespuestasItemsTable' is defined but never used.","'toggle' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'FormControlLabel' is defined but never used.","'setToggle' is assigned a value but never used.","'RadioGroup' is defined but never used.","'Radio' is defined but never used.","'GetItems' is assigned a value but never used.","'GetJU' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchJefeUnidad'. Either include it or remove the dependency array.","ArrayExpression",["364"],"Imported JSX component Areq_FormItem must be in PascalCase or SCREAMING_SNAKE_CASE",["362"],["363"],"'TextField' is defined but never used.","'Proveedores' is defined but never used.","'toggleSelect' is assigned a value but never used.","'lineas' is assigned a value but never used.","'setState' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '!==' and instead saw '!='.","'precioTotal' is assigned a value but never used.","'GetRequisiciones' is assigned a value but never used.","'GetProveedores' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchDetalleRequisicion', 'fetchProveedores', and 'fetchRequisiciones'. Either include them or remove the dependency array.",["365"],"'MaterialTable' is defined but never used.","'setPrecioTotal' is assigned a value but never used.","'setSubtotal' is assigned a value but never used.","'GetDetalleCompra' is assigned a value but never used.","'GetRespuestas' is assigned a value but never used.","'GetSubtotal' is assigned a value but never used.","'deleteDetalleCompra' is assigned a value but never used.","'updateDetalleCompra' is assigned a value but never used.","'updateDR' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchRespuestas' and 'fetchSubtotal'. Either include them or remove the dependency array.",["366"],"no-global-assign","no-unsafe-negation",{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},"Update the dependencies array to be: [fetchJefeUnidad]",{"range":"373","text":"374"},"Update the dependencies array to be: [fetchDetalleRequisicion, fetchProveedores, fetchRequisiciones]",{"range":"375","text":"376"},"Update the dependencies array to be: [fetchRespuestas, fetchSubtotal]",{"range":"377","text":"378"},[3970,3972],"[fetchJefeUnidad]",[3997,3999],"[fetchDetalleRequisicion, fetchProveedores, fetchRequisiciones]",[6465,6467],"[fetchRespuestas, fetchSubtotal]"]