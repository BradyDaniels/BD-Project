[{"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\index.js":"1","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\App.js":"3","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\InputPrueba.js":"4","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Dependencia\\ListDependencia.js":"5","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\LineadeSuministro\\ListLinea.js":"6","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Dependencia\\InputDependencia.js":"7","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\LineadeSuministro\\InputLinea.js":"8","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\ListPruebas.js":"9","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Dependencia\\EditDependencia.js":"10","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\LineadeSuministro\\EditLinea.js":"11","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\EditPrueba.js":"12","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Trabajadores\\Trabajadores.js":"13","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Trabajadores\\ListTrabajadores.js":"14","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Trabajadores\\InputTrabajadores.js":"15","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Trabajadores\\EditTrabajadores.js":"16","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Dependencia\\Dependencia.js":"17","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\LineadeSuministro\\LineaDeSuministro.js":"18","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Sidebar\\Sidebar.js":"19","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Proveedor\\Proveedor.js":"20","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Proveedor\\InputProveedor.js":"21","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Proveedor\\ListProveedor.js":"22","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Proveedor\\EditProveedor.js":"23"},{"size":280,"mtime":1611598274833,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1611598274833,"results":"26","hashOfConfig":"25"},{"size":1027,"mtime":1611845903499,"results":"27","hashOfConfig":"25"},{"size":1212,"mtime":1611598274832,"results":"28","hashOfConfig":"25"},{"size":2511,"mtime":1611677260205,"results":"29","hashOfConfig":"25"},{"size":2222,"mtime":1611677260207,"results":"30","hashOfConfig":"25"},{"size":2086,"mtime":1611843483983,"results":"31","hashOfConfig":"25"},{"size":1521,"mtime":1611843543875,"results":"32","hashOfConfig":"25"},{"size":2244,"mtime":1611598274832,"results":"33","hashOfConfig":"25"},{"size":3162,"mtime":1611848451256,"results":"34","hashOfConfig":"25"},{"size":2972,"mtime":1611848517561,"results":"35","hashOfConfig":"25"},{"size":2853,"mtime":1611598274831,"results":"36","hashOfConfig":"25"},{"size":489,"mtime":1611705430190,"results":"37","hashOfConfig":"25"},{"size":2491,"mtime":1611851071266,"results":"38","hashOfConfig":"25"},{"size":2395,"mtime":1611851339687,"results":"39","hashOfConfig":"25"},{"size":3554,"mtime":1611848587262,"results":"40","hashOfConfig":"25"},{"size":479,"mtime":1611706477059,"results":"41","hashOfConfig":"25"},{"size":435,"mtime":1611706809860,"results":"42","hashOfConfig":"25"},{"size":850,"mtime":1611847374023,"results":"43","hashOfConfig":"25"},{"size":469,"mtime":1611846292314,"results":"44","hashOfConfig":"25"},{"size":2746,"mtime":1611848196013,"results":"45","hashOfConfig":"25"},{"size":2690,"mtime":1611847889018,"results":"46","hashOfConfig":"25"},{"size":4106,"mtime":1611848319044,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"103rb6u",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"51"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"51"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"51"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"51"},"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\index.js",["107"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n",["108","109"],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\App.js",["110","111","112","113"],"import React, { Fragment, useEffect, useState } from 'react';\r\n//import './App.css';\r\n\r\nimport { BrowserRouter as Router, Switch, Link, Route } from 'react-router-dom';\r\n\r\n//Components\r\nimport Trabajadores from \"./components/Trabajadores/Trabajadores\"\r\nimport Dependencias from \"./components/Dependencia/Dependencia\"\r\nimport Lineas from \"./components/LineadeSuministro/LineaDeSuministro\"\r\nimport Proveedores from \"./components/Proveedor/Proveedor\"\r\nimport Sidebar from \"./components/Sidebar/Sidebar\"\r\n\r\n const App = () => {\r\n   return(\r\n        <Router>\r\n          <div className= 'app-wrapper'>\r\n            <Sidebar/>\r\n            <Switch>\r\n                <Route path=\"/trabajadores\" component ={Trabajadores}/>\r\n                <Route path=\"/dependencias\" component ={Dependencias}/>\r\n                <Route path=\"/lineas_suministro\" component ={Lineas}/>\r\n                <Route path=\"/proveedores\" component ={Proveedores}/>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n   );\r\n };\r\n\r\nexport default App;\r\n","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\InputPrueba.js",["114"],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Dependencia\\ListDependencia.js",["115"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport EditDependencia from \"./EditDependencia\";\r\n\r\nconst ListDependencia=()=>{\r\n\r\n    const [dependencias, setDependencias] =useState([]);\r\n    \r\n    const deleteDependencia = async (id)  =>{\r\n        try {\r\n            const deleteDependencia = await fetch(`http://localhost:5000/dependencias/${id}`,{\r\n                method: \"DELETE\" \r\n            });\r\n\r\n            setDependencias(dependencias.filter(dependencias =>dependencias.id !== id));\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    const getDependencia = async() =>{\r\n        try {\r\n            \r\n            const response = await fetch(\"http://localhost:5000/dependencias\");\r\n            const jsonData = await response.json();\r\n\r\n            setDependencias(jsonData);\r\n\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n    \r\n    useEffect(() =>{\r\n        getDependencia();\r\n    },[]);\r\n\r\n    return(\r\n        <Fragment>\r\n            <table class=\"table mt-5\" text-center>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID Dependencia</th>\r\n                        <th>Nombre</th>\r\n                        <th>Centro costo</th>\r\n                        <th>Edit</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {/*<tr>\r\n                        <td>John</td>\r\n                        <td>Doe</td>\r\n                        <td>john@example.com</td>\r\n                    </tr> */}\r\n                    {dependencias.map(dependencias =>(\r\n                        <tr key={dependencias.id}>\r\n                            <td>{dependencias.id}</td>\r\n                            <td>{dependencias.nombre}</td>\r\n                            <td>{dependencias.centro_costo}</td>\r\n                            <td>\r\n                               <EditDependencia dependencia = {dependencias}/>\r\n                            </td>\r\n                            <td>\r\n                                <button className= \"btn btn-danger\"onClick={() => deleteDependencia(dependencias.id)}>\r\n                                    Delete\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n        </table>\r\n        </Fragment>\r\n    )    \r\n};\r\n\r\nexport default ListDependencia;","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\LineadeSuministro\\ListLinea.js",["116"],"import React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nimport EditLinea from \"./EditLinea\";\r\n\r\nconst ListLinea = () => {\r\n\r\n    const [lineas, setLineas] =useState([]);\r\n\r\n    //Delete Prueba Function\r\n\r\n    const deleteLineas = async (id)  =>{\r\n        try {\r\n            const deleteLineas = await fetch(`http://localhost:5000/lineas_suministro/${id}`,{\r\n                method: \"DELETE\" \r\n            });\r\n\r\n            setLineas(lineas.filter(lineas => lineas.id !== id));\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    }\r\n\r\n    //Get Pruebas Function\r\n    const getLineas = async() =>{\r\n        try {\r\n            \r\n            const response = await fetch(\"http://localhost:5000/lineas_suministro\");\r\n            const jsonData = await response.json();\r\n\r\n            setLineas(jsonData);\r\n\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n\r\n    useEffect(() =>{\r\n        getLineas();\r\n    },[]);\r\n\r\n    return(\r\n        <Fragment>\r\n            <table class=\"table mt-5\" text-center>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Description</th>\r\n                        <th>Edit</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {/*<tr>\r\n                        <td>John</td>\r\n                        <td>Doe</td>\r\n                        <td>john@example.com</td>\r\n                    </tr> */}\r\n                    {lineas.map(lineas =>(\r\n                        <tr key={lineas.id}>\r\n                            <td>{lineas.descripcion}</td>\r\n                            <td>\r\n                                <EditLinea lineas = {lineas}/>\r\n                            </td>\r\n                            <td>\r\n                                <button className= \"btn btn-danger\"onClick={() => deleteLineas(lineas.id)}>\r\n                                    Delete\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n        </table>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ListLinea;\r\n","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Dependencia\\InputDependencia.js",["117"],"import React, { Fragment, useState } from \"react\";\r\n\r\n    \r\n\r\nconst InputDepdencia=()=>{\r\n    const [id, setID_Dependencia] = useState (\"ID\");\r\n\r\n    const [nombre, setNombre] = useState (\"Nombre\");\r\n\r\n    const [centro_costo, setCentroCosto] = useState (\"Centro Costo\");\r\n\r\n    const onSubmitForm = async (e) =>{\r\n        e.preventDefault();\r\n        console.log('onSummit')\r\n        try {\r\n            const body = {id,nombre,centro_costo };\r\n            \r\n            const response = await fetch(\"http://localhost:5000/dependencias\",{\r\n                method: \"POST\",\r\n                headers : { \"Content-type\": \"application/json\" },\r\n                body: JSON.stringify(body)\r\n\r\n            });\r\n            window.location = \"/\";\r\n    \r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className= \"text-center mt-5\">\r\n                Dependencias\r\n                \r\n                <form className= \"d-flex mt-5\" onSubmit={ onSubmitForm }>\r\n                    <input \r\n                        type= \"intenger\" \r\n                        className= \"form-control\" \r\n                        value ={id}\r\n                        onChange ={e => setID_Dependencia (parseInt(e.target.value))}\r\n                    />\r\n\r\n                    <input \r\n                        type= \"text\" \r\n                        className= \"form-control\" \r\n                        value ={nombre}\r\n                        onChange ={e => setNombre(e.target.value)}\r\n                    />\r\n\r\n                    <input \r\n                        type= \"text\" \r\n                        className= \"form-control\" \r\n                        value ={centro_costo}\r\n                        onChange ={e => setCentroCosto (e.target.value)}\r\n                    />\r\n\r\n                    <button className=\"btn btn-success\">\r\n                        Add\r\n                    </button>\r\n                </form>\r\n\r\n             \r\n            </h1>\r\n            </Fragment>\r\n        );\r\n};\r\n\r\nexport default InputDepdencia;\r\n","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\LineadeSuministro\\InputLinea.js",["118"],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst InputLinea = () =>{\r\n\r\n\r\n\r\nconst [id, setIDLinea] = useState (\"ID\");\r\nconst [descripcion, setDescription] = useState (\"Descripcion\");\r\n\r\nconst onSubmitForm = async (e) =>{\r\n    e.preventDefault();\r\n    try {\r\n        const body = { id,descripcion };\r\n        const response = await fetch(\"http://localhost:5000/lineas_suministro\",{\r\n            method: \"POST\",\r\n            headers : { \"Content-type\": \"application/json\" },\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        window.location = \"/\";\r\n\r\n    } catch (err) {\r\n        console.error(err.message);\r\n    }\r\n}\r\n\r\n    return (\r\n    <Fragment>\r\n        <h1 className= \"text-center mt-5\">\r\n            Lineas de Suministro\r\n            <form className= \"d-flex mt-5\" onSubmit={ onSubmitForm }>\r\n                \r\n                <input \r\n                    type= \"text\" \r\n                    className= \"form-control\" \r\n                    value ={id}\r\n                    onChange ={e => setIDLinea (parseInt(e.target.value))}\r\n                />\r\n                <input \r\n                    type= \"text\" \r\n                    className= \"form-control\" \r\n                    value ={descripcion}\r\n                    onChange ={e => setDescription (e.target.value)}\r\n                />\r\n                <button className=\"btn btn-success\">\r\n                    Add\r\n                </button>\r\n            </form>\r\n        </h1>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default InputLinea;","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\ListPruebas.js",["119"],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Dependencia\\EditDependencia.js",["120"],"import React, { Fragment, useState } from 'react';\r\n\r\nconst EditDependencia=({dependencia})=>{\r\n    \r\n\r\n\r\n    const [nombre, setNombre] = useState (dependencia.nombre);\r\n\r\n    const [centro_costo, setCentroCosto] = useState (dependencia.centro_costo);\r\n    \r\n    const updateDependencias = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const body = { nombre,centro_costo };\r\n            const response = await fetch(\r\n            `http://localhost:5000/dependencias/${dependencia.id}`,\r\n            {\r\n                method: \"PUT\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body)\r\n            }\r\n        );\r\n\r\n            window.location = \"/\";\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n   return(\r\n    <Fragment>\r\n        <button type=\"button\" \r\n            class=\"btn btn-warning\" \r\n            data-toggle=\"modal\" \r\n            data-target={`#id${dependencia.id}`}\r\n        >\r\n\r\n            Edit\r\n        </button>\r\n\r\n        <div class=\"modal\" id={ `id${dependencia.id}`}  \r\n                        onClick= {() => setNombre(dependencia.nombre)}>\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\">\r\n                    Editar Dependencia\r\n                </h4>\r\n                <button \r\n                    type=\"button\" \r\n                    class=\"close\" \r\n                    data-dismiss=\"modal\" \r\n                    onClick= {() => setNombre(dependencia.nombre)}\r\n                    >\r\n                        &times;\r\n                </button>\r\n            </div>\r\n\r\n            <div class=\"modal-body\">\r\n                <h5>\r\n                    Nombre\r\n                </h5>\r\n                <input \r\n                type= \"text\" \r\n                className=\"form-control\" \r\n                value ={ nombre } \r\n                onChange= { e => setNombre(e.target.value)}\r\n               />\r\n                <br/>\r\n                <h5>\r\n                    Centro de Costo\r\n                </h5>\r\n                <input \r\n                type= \"text\" \r\n                className=\"form-control\" \r\n                value ={ centro_costo } \r\n                onChange= { e => setCentroCosto(e.target.value)}\r\n               />\r\n            </div>\r\n\r\n            <div class=\"modal-footer\">\r\n                <button \r\n                    type=\"button\" \r\n                    class=\"btn btn-warning\" \r\n                    data-dismiss=\"modal\"\r\n                    onClick={e => updateDependencias(e)}\r\n                    >    \r\n                    Edit\r\n                </button>\r\n                <button \r\n                    type=\"button\" \r\n                    class=\"btn btn-danger\" \r\n                    data-dismiss=\"modal\" \r\n                    onClick= {() => setNombre(dependencia.nombre)}\r\n                   >\r\n                        Close\r\n                </button>\r\n            </div>\r\n\r\n            </div>\r\n        </div>\r\n        </div>  \r\n    </Fragment>\r\n   );\r\n};\r\n\r\nexport default EditDependencia","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\LineadeSuministro\\EditLinea.js",["121","122"],"import React, { Fragment, useState } from 'react';\r\n\r\nconst EditLinea = ( { lineas } ) => {\r\n\r\n    const [descripcion, setDescription] = useState (lineas.descripcion);\r\n    const [id_Linea, setIDlinea] = useState (0);\r\n\r\n    //Edit Description Function\r\n\r\n    const updateLinea = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const body = { id_Linea,descripcion };\r\n            const response = await fetch(\r\n            `http://localhost:5000/lineas_suministro/${lineas.id}`,\r\n            {\r\n                method: \"PUT\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body)\r\n            }\r\n        );\r\n\r\n            window.location = \"/\";\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    return(\r\n        <Fragment>\r\n            <button type=\"button\" \r\n                class=\"btn btn-warning\" \r\n                data-toggle=\"modal\" \r\n                data-target={`#id${lineas.id}`}>\r\n\r\n                Edit\r\n            </button>\r\n\r\n            <div class=\"modal\" id={ `id${lineas.id}`}  \r\n                        onClick= {() => setDescription(lineas.descripcion)}>\r\n            <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h4 class=\"modal-title\">\r\n                        Editar Linea de Suministro\r\n                    </h4>\r\n                    <button \r\n                        type=\"button\" \r\n                        class=\"close\" \r\n                        data-dismiss=\"modal\" \r\n                        onClick= {() => setDescription(lineas.descripcion)}>\r\n                            &times;\r\n                    </button>\r\n                </div>\r\n\r\n                <div class=\"modal-body\">\r\n                <h5>\r\n                    Descripcion\r\n                </h5>\r\n                    <input \r\n                    type= \"text\" \r\n                    className=\"form-control\" \r\n                    value ={ descripcion } \r\n                    onChange= { e => setDescription(e.target.value)}/>\r\n                </div>\r\n\r\n                <div class=\"modal-footer\">\r\n                    <button \r\n                        type=\"button\" \r\n                        class=\"btn btn-warning\" \r\n                        data-dismiss=\"modal\"\r\n                        onClick={e => updateLinea(e)}\r\n                        >    \r\n                        Edit\r\n                    </button>\r\n                    <button \r\n                        type=\"button\" \r\n                        class=\"btn btn-danger\" \r\n                        data-dismiss=\"modal\" \r\n                        onClick= {() => setDescription(lineas.descripcion)}>\r\n                            Close\r\n                    </button>\r\n                </div>\r\n\r\n                </div>\r\n            </div>\r\n            </div>  \r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default EditLinea;","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\EditPrueba.js",["123"],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Trabajadores\\Trabajadores.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Trabajadores\\ListTrabajadores.js",["124"],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Trabajadores\\InputTrabajadores.js",["125"],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Trabajadores\\EditTrabajadores.js",["126"],"import React, { Fragment, useState } from 'react';\r\n\r\nconst EditTrabajadores=({trabajadores})=>{\r\n    \r\n\r\n    const [id_dependencia, setID_Depdencia] = useState (trabajadores.id_dependencia);\r\n    \r\n    const [nombre, setNombre] = useState (trabajadores.nombre);\r\n\r\n    const [tipo, setTipo] = useState (trabajadores.tipo);\r\n    \r\n    const updateTrabajadores = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const body = { id_dependencia, nombre, tipo };\r\n            const response = await fetch(\r\n            `http://localhost:5000/trabajadores/${trabajadores.id}`,\r\n            {\r\n                method: \"PUT\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body)\r\n            }\r\n        );\r\n\r\n            window.location = \"/\";\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n   return(\r\n    <Fragment>\r\n        <button type=\"button\" \r\n            class=\"btn btn-warning\" \r\n            data-toggle=\"modal\" \r\n            data-target={`#id${trabajadores.id}`}\r\n        >\r\n\r\n            Edit\r\n        </button>\r\n\r\n        <div class=\"modal\" id={ `id${trabajadores.id}`}  \r\n                        onClick= {() => setNombre(trabajadores.nombre)}>\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\">\r\n                    Editar trabajador\r\n                </h4>\r\n                <button \r\n                    type=\"button\" \r\n                    class=\"close\" \r\n                    data-dismiss=\"modal\" \r\n                    onClick= {() => setNombre(trabajadores.nombre)}\r\n                    >\r\n                        &times;\r\n                </button>\r\n            </div>\r\n\r\n            <div class=\"modal-body\">\r\n                <h5>\r\n                   ID Dependencia\r\n                </h5>\r\n               <input \r\n                type= \"text\" \r\n                className=\"form-control\" \r\n                value ={ id_dependencia } \r\n                onChange= { e => setID_Depdencia(e.target.value)}\r\n               />\r\n                <br/>\r\n                <h5>\r\n                    Nombre\r\n                </h5>\r\n                <input \r\n                type= \"text\" \r\n                className=\"form-control\" \r\n                value ={ nombre } \r\n                onChange= { e => setNombre(e.target.value)}\r\n               />\r\n                <br/>\r\n                <h5>\r\n                    Tipo\r\n                </h5>\r\n                <input \r\n                type= \"text\" \r\n                className=\"form-control\" \r\n                value ={ tipo } \r\n                onChange= { e => setTipo(e.target.value)}\r\n               />\r\n            </div>\r\n\r\n            <div class=\"modal-footer\">\r\n                <button \r\n                    type=\"button\" \r\n                    class=\"btn btn-warning\" \r\n                    data-dismiss=\"modal\"\r\n                    onClick={e => updateTrabajadores(e)}\r\n                    >    \r\n                    Edit\r\n                </button>\r\n                <button \r\n                    type=\"button\" \r\n                    class=\"btn btn-danger\" \r\n                    data-dismiss=\"modal\" \r\n                    onClick= {() => setNombre(trabajadores.nombre)}\r\n                   >\r\n                        Close\r\n                </button>\r\n            </div>\r\n\r\n            </div>\r\n        </div>\r\n        </div>  \r\n    </Fragment>\r\n   );\r\n};\r\n\r\nexport default EditTrabajadores","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Dependencia\\Dependencia.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\LineadeSuministro\\LineaDeSuministro.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Proveedor\\Proveedor.js",[],"C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Proveedor\\InputProveedor.js",["127"],"import React, { Fragment, useState } from \"react\";\r\n\r\n    \r\n\r\nconst InputProveedor=()=>{\r\n\r\n    const [rif, setRif] = useState (\"RIF\");\r\n    const [razon_social, setRazonSocial] = useState (\"Razon Social\");\r\n    const [telefono, setTelefono] = useState (\"Telefono\");\r\n    const [correo, setCorreo] = useState (\"Correo\");\r\n    const [direccion, setDireccion] = useState (\"Direccion\");\r\n\r\n\r\n\r\n    const onSubmitForm = async (e) =>{\r\n        e.preventDefault();\r\n        console.log('onSummit')\r\n        try {\r\n            const body = { rif, razon_social, telefono, correo, direccion };\r\n            \r\n            const response = await fetch(\"http://localhost:5000/proveedores\",{\r\n                method: \"POST\",\r\n                headers : { \"Content-type\": \"application/json\" },\r\n                body: JSON.stringify(body)\r\n\r\n            });\r\n            window.location = \"/proveedores\";\r\n    \r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className= \"text-center mt-5\">\r\n                Proveedores\r\n                \r\n                <form className= \"d-flex mt-5\" onSubmit={ onSubmitForm }>\r\n                    <input \r\n                        type= \"intenger\" \r\n                        className= \"form-control\" \r\n                        value ={rif}\r\n                        onChange ={e => setRif (parseInt(e.target.value))}\r\n                    />\r\n\r\n                    <input \r\n                        type= \"text\" \r\n                        className= \"form-control\" \r\n                        value ={razon_social}\r\n                        onChange ={e => setRazonSocial(e.target.value)}\r\n                    />\r\n\r\n                    <input \r\n                        type= \"text\" \r\n                        className= \"form-control\" \r\n                        value ={telefono}\r\n                        onChange ={e => setTelefono (e.target.value)}\r\n                    />\r\n                    <input \r\n                        type= \"text\" \r\n                        className= \"form-control\" \r\n                        value ={correo}\r\n                        onChange ={e => setCorreo (e.target.value)}\r\n                    />\r\n\r\n                    <input \r\n                        type= \"text\" \r\n                        className= \"form-control\" \r\n                        value ={direccion}\r\n                        onChange ={e => setDireccion (e.target.value)}\r\n                    />\r\n\r\n                    <button className=\"btn btn-success\">\r\n                        Add\r\n                    </button>\r\n                </form>\r\n\r\n             \r\n            </h1>\r\n            </Fragment>\r\n        );\r\n};\r\n\r\nexport default InputProveedor;\r\n","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Proveedor\\ListProveedor.js",["128"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport EditProveedor from \"./EditProveedor\";\r\n\r\nconst ListProveedor=()=>{\r\n\r\n    const [proveedores, setProveedores] =useState([]);\r\n    \r\n    \r\n    const deleteProveedores = async (rif)  =>{\r\n        try {\r\n            const deleteProveedores = await fetch(`http://localhost:5000/proveedores/${rif}`,{\r\n                method: \"DELETE\" \r\n            });\r\n\r\n            setProveedores(proveedores.filter(proveedores =>proveedores.rif !== rif));\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    const getProveedor = async() =>{\r\n        try {\r\n            \r\n            const response = await fetch(\"http://localhost:5000/proveedores\");\r\n            const jsonData = await response.json();\r\n\r\n            setProveedores(jsonData);\r\n\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n    \r\n    useEffect(() =>{\r\n        getProveedor();\r\n    },[]);\r\n\r\n    return(\r\n        <Fragment>\r\n            <table class=\"table mt-5\" text-center>\r\n                <thead>\r\n                    <tr>\r\n                        <th>RIF</th>\r\n                        <th>Razon Social</th>\r\n                        <th>Telefono</th>\r\n                        <th>Correo</th>\r\n                        <th>Direccion</th>\r\n                        <th>Edit</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {/*<tr>\r\n                        <td>John</td>\r\n                        <td>Doe</td>\r\n                        <td>john@example.com</td>\r\n                    </tr> */}\r\n                    {proveedores.map(proveedores =>(\r\n                        <tr key={proveedores.rif}>\r\n                            <td>{proveedores.rif}</td>\r\n                            <td>{proveedores.razon_social}</td>\r\n                            <td>{proveedores.telefono}</td>\r\n                            <td>{proveedores.correo}</td>\r\n                            <td>{proveedores.direccion}</td>\r\n                            <td>\r\n                               <EditProveedor proveedor = {proveedores}/>\r\n                            </td>\r\n                            <td>\r\n                                <button className= \"btn btn-danger\"onClick={() => deleteProveedores(proveedores.rif)}>\r\n                                    Delete\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n        </table>\r\n        </Fragment>\r\n    )    \r\n};\r\n\r\nexport default ListProveedor;","C:\\Users\\Dovah\\Desktop\\BD-Project\\client\\src\\components\\Proveedor\\EditProveedor.js",["129","130"],"import React, { Fragment, useState } from 'react';\r\n\r\nconst EditProveedor=({ proveedor})=>{\r\n    \r\n\r\n\r\n    const [rif, setRif] = useState (proveedor.rif);\r\n    const [razon_social, setRazonSocial] = useState (proveedor.razon_social);\r\n    const [telefono, setTelefono] = useState (proveedor.telefono);\r\n    const [correo, setCorreo] = useState (proveedor.correo);\r\n    const [direccion, setDireccion] = useState (proveedor.direccion);\r\n\r\n    \r\n    const updateProveedores = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const body = { rif, razon_social, telefono, correo, direccion };\r\n            const response = await fetch(\r\n            `http://localhost:5000/proveedores/${proveedor.rif}`,\r\n            {\r\n                method: \"PUT\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body)\r\n            }\r\n        );\r\n\r\n            window.location = \"/proveedores\";\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n   return(\r\n    <Fragment>\r\n        <button type=\"button\" \r\n            class=\"btn btn-warning\" \r\n            data-toggle=\"modal\" \r\n            data-target={`#rif${proveedor.rif}`}\r\n        >\r\n\r\n            Edit\r\n        </button>\r\n\r\n        <div class=\"modal\" id={ `rif${proveedor.rif}`}  \r\n                        onClick= {() => setRazonSocial(proveedor.razon_social)}>\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\">\r\n                    Editar Proveedor\r\n                </h4>\r\n                <button \r\n                    type=\"button\" \r\n                    class=\"close\" \r\n                    data-dismiss=\"modal\" \r\n                    onClick= {() => setRazonSocial(proveedor.razon_social)}\r\n                    >\r\n                        &times;\r\n                </button>\r\n            </div>\r\n\r\n            <div class=\"modal-body\">\r\n                <h5>\r\n                    Razon Social\r\n                </h5>\r\n                <input \r\n                    type= \"text\" \r\n                    className=\"form-control\" \r\n                    value ={ razon_social } \r\n                    onChange= { e => setRazonSocial(e.target.value)}\r\n                />\r\n                <br/>\r\n                <h5>\r\n                    Telefono\r\n                </h5>\r\n                <input \r\n                    type= \"text\" \r\n                    className=\"form-control\" \r\n                    value ={ telefono } \r\n                    onChange= { e => setTelefono(e.target.value)}\r\n                />\r\n                <br/>\r\n                <h5>\r\n                    Correo\r\n                </h5>\r\n                <input \r\n                    type= \"text\" \r\n                    className=\"form-control\" \r\n                    value ={ correo } \r\n                    onChange= { e => setCorreo(e.target.value)}\r\n                />\r\n                <br/>\r\n                <h5>\r\n                    Direccion\r\n                </h5>\r\n                <input \r\n                    type= \"text\" \r\n                    className=\"form-control\" \r\n                    value ={ direccion } \r\n                    onChange= { e => setDireccion(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div class=\"modal-footer\">\r\n                <button \r\n                    type=\"button\" \r\n                    class=\"btn btn-warning\" \r\n                    data-dismiss=\"modal\"\r\n                    onClick={e => updateProveedores(e)}\r\n                    >    \r\n                    Edit\r\n                </button>\r\n                <button \r\n                    type=\"button\" \r\n                    class=\"btn btn-danger\" \r\n                    data-dismiss=\"modal\" \r\n                    onClick= {() => setRazonSocial(proveedor.razon_social)}\r\n                   >\r\n                        Close\r\n                </button>\r\n            </div>\r\n\r\n            </div>\r\n        </div>\r\n        </div>  \r\n    </Fragment>\r\n   );\r\n};\r\n\r\nexport default EditProveedor",{"ruleId":"131","severity":1,"message":"132","line":5,"column":8,"nodeType":"133","messageId":"134","endLine":5,"endColumn":23},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"131","severity":1,"message":"139","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"140","line":1,"column":27,"nodeType":"133","messageId":"134","endLine":1,"endColumn":36},{"ruleId":"131","severity":1,"message":"141","line":1,"column":38,"nodeType":"133","messageId":"134","endLine":1,"endColumn":46},{"ruleId":"131","severity":1,"message":"142","line":4,"column":43,"nodeType":"133","messageId":"134","endLine":4,"endColumn":47},{"ruleId":"131","severity":1,"message":"143","line":11,"column":15,"nodeType":"133","messageId":"134","endLine":11,"endColumn":23},{"ruleId":"131","severity":1,"message":"144","line":10,"column":19,"nodeType":"133","messageId":"134","endLine":10,"endColumn":36},{"ruleId":"131","severity":1,"message":"145","line":13,"column":19,"nodeType":"133","messageId":"134","endLine":13,"endColumn":31},{"ruleId":"131","severity":1,"message":"143","line":18,"column":19,"nodeType":"133","messageId":"134","endLine":18,"endColumn":27},{"ruleId":"131","severity":1,"message":"143","line":14,"column":15,"nodeType":"133","messageId":"134","endLine":14,"endColumn":23},{"ruleId":"131","severity":1,"message":"146","line":13,"column":19,"nodeType":"133","messageId":"134","endLine":13,"endColumn":31},{"ruleId":"131","severity":1,"message":"143","line":15,"column":19,"nodeType":"133","messageId":"134","endLine":15,"endColumn":27},{"ruleId":"131","severity":1,"message":"147","line":6,"column":22,"nodeType":"133","messageId":"134","endLine":6,"endColumn":32},{"ruleId":"131","severity":1,"message":"143","line":14,"column":19,"nodeType":"133","messageId":"134","endLine":14,"endColumn":27},{"ruleId":"131","severity":1,"message":"143","line":13,"column":19,"nodeType":"133","messageId":"134","endLine":13,"endColumn":27},{"ruleId":"131","severity":1,"message":"148","line":10,"column":19,"nodeType":"133","messageId":"134","endLine":10,"endColumn":35},{"ruleId":"131","severity":1,"message":"143","line":21,"column":19,"nodeType":"133","messageId":"134","endLine":21,"endColumn":27},{"ruleId":"131","severity":1,"message":"143","line":16,"column":19,"nodeType":"133","messageId":"134","endLine":16,"endColumn":27},{"ruleId":"131","severity":1,"message":"143","line":21,"column":19,"nodeType":"133","messageId":"134","endLine":21,"endColumn":27},{"ruleId":"131","severity":1,"message":"149","line":11,"column":19,"nodeType":"133","messageId":"134","endLine":11,"endColumn":36},{"ruleId":"131","severity":1,"message":"150","line":7,"column":17,"nodeType":"133","messageId":"134","endLine":7,"endColumn":23},{"ruleId":"131","severity":1,"message":"143","line":18,"column":19,"nodeType":"133","messageId":"134","endLine":18,"endColumn":27},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["151"],"no-negated-in-lhs",["152"],"'Fragment' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'response' is assigned a value but never used.","'deleteDependencia' is assigned a value but never used.","'deleteLineas' is assigned a value but never used.","'deletePrueba' is assigned a value but never used.","'setIDlinea' is assigned a value but never used.","'deletetrabajador' is assigned a value but never used.","'deleteProveedores' is assigned a value but never used.","'setRif' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]